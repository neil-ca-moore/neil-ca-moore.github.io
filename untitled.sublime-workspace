{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"attr",
				"attributes"
			],
			[
				"game",
				"gameState"
			],
			[
				"gma",
				"gameStateView"
			],
			[
				"Gam",
				"gameState"
			],
			[
				"I",
				"LastIndex\tint ƒ"
			],
			[
				"Ty",
				"TypeOf\treflect.Type ƒ"
			],
			[
				"Post",
				"PostGridScorerResponse\tstruct ʈ"
			],
			[
				"StatusRes",
				"StatusBadRequest\t Ɩ"
			],
			[
				"Li",
				"Lifespan\tint ƒ"
			],
			[
				"scoo",
				"scoot-http"
			],
			[
				"Print",
				"Printf\tn int, err error ƒ"
			],
			[
				"Statu",
				"StatusInternalServerError\t Ɩ"
			],
			[
				"Parse",
				"ParseInt\ti int64, err error ƒ"
			],
			[
				"StatusBad",
				"StatusBadRequest\t Ɩ"
			],
			[
				"Maxint",
				"MaxInt32\t Ɩ"
			],
			[
				"max",
				"MaxInt32\t Ɩ"
			],
			[
				"Life",
				"LifespanVal\tint ν"
			],
			[
				"MaxInt",
				"MaxInt32\t Ɩ"
			],
			[
				"Is",
				"IsModify\tbool ƒ"
			],
			[
				"FS",
				"FSEvent\tstruct ʈ"
			],
			[
				"New",
				"NewQueueChecker\t*QueueChecker ƒ"
			],
			[
				"Update",
				"UpdateError\tstruct ʈ"
			],
			[
				"P",
				"Println\tn int, err error ƒ"
			],
			[
				"main",
				"func main\tfunc main {...} ʂ"
			],
			[
				"imp",
				"import\timport (...) ʂ"
			],
			[
				"rem",
				"remaining_dice"
			]
		]
	},
	"buffers":
	[
		{
			"file": "publications.md",
			"settings":
			{
				"buffer_size": 3565,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2014-11-19-vector-append.markdown",
			"settings":
			{
				"buffer_size": 3861,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2014-11-30-objects-and-pointers.markdown",
			"settings":
			{
				"buffer_size": 8925,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_2_code/unique.cpp",
			"settings":
			{
				"buffer_size": 588,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_2_code/type_erasure_with_inherit.cpp",
			"settings":
			{
				"buffer_size": 1213,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_2_code/type_erasure.cpp",
			"settings":
			{
				"buffer_size": 798,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_1_code/fifth.cpp",
			"settings":
			{
				"buffer_size": 628,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_1_code/fourth.cpp",
			"settings":
			{
				"buffer_size": 176,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_1_code/third.cpp",
			"settings":
			{
				"buffer_size": 261,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_1_code/second.cpp",
			"settings":
			{
				"buffer_size": 163,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_1_code/first.cpp",
			"settings":
			{
				"buffer_size": 162,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/obj_ptrs_1_code/earlydefs.hpp",
			"settings":
			{
				"buffer_size": 388,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <iostream>\n#include <memory>\n#include <utility>\n#include <vector>\n\nclass ConcretePrinter {\npublic:\n     void Print() const { std::cout << \"ConcretePrinter\" << std::endl; }   \n};\n\nclass StonePrinter {\npublic:\n     void Print() const { std::cout << \"StonePrinter\" << std::endl; }     \n};\n\nclass AnyPrinter {\npublic:\n    template <typename T>\n    AnyPrinter(T x) : self_(std::make_shared<model<T>>(std::move(x))) {}\n \n    void Print() const\n    { self_->Print_(); }\n \nprivate:\n    struct concept_t {\n        virtual ~concept_t() = default;\n        virtual void Print_() const = 0;\n    };\n    template <typename T>\n    struct model : concept_t {\n        model(T x) : data_(std::move(x)) {}\n        void Print_() const override\n        { data_.Print(); }\n \n        T data_;\n    };\n   \n    std::shared_ptr<const concept_t> self_;\n};\n\nint main()\n{\n    ConcretePrinter cp;\n    \n    StonePrinter sp;\n\n    std::vector<AnyPrinter> printables;\n    printables.push_back(cp); //pushing copies\n    printables.push_back(sp);\n\n    for(const auto& p : printables) {\n        p.Print();\n    }\n}",
			"file": "_posts/obj_ptrs_2_code/wrapper.hpp",
			"file_size": 1083,
			"file_write_time": 130889754760000000,
			"settings":
			{
				"buffer_size": 1083,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <boost/type_erasure/any.hpp>\n#include <boost/type_erasure/member.hpp>\n#include <iostream>\n#include <vector>\n\nusing namespace boost::type_erasure;\n\nclass ConcretePrinter {\npublic:\n\t void Print() const { std::cout << \"ConcretePrinter\" << std::endl; }\t\t\n};\n\nclass StonePrinter {\npublic:\n\t void Print() const { std::cout << \"StonePrinter\" << std::endl; }\t\t\n};\n\nBOOST_TYPE_ERASURE_MEMBER((has_print), Print, 0)\n\ntypedef any<has_print<void()>, _self&> AnyPrinter;\n\nint main()\n{\n\tConcretePrinter cp;\n\t\n\tStonePrinter sp;\n\n\tstd::vector<AnyPrinter> printables;\n\tprintables.push_back(cp); //pushing copies\n\tprintables.push_back(sp);\n\n\tfor(const auto& p : printables) {\n\t\tp.Print();\n\t}\n}\n",
			"file": "_posts/obj_ptrs_2_code/type_erasure.hpp",
			"file_size": 685,
			"file_write_time": 130889754760000000,
			"settings":
			{
				"buffer_size": 685,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n#include <iostream>\n#include <memory>\n#include <vector>\n\nclass Printer {\npublic:\n\tvirtual void Print() const { std::cout << \"Printer\" << std::endl; }\t\t\n};\n\nclass ConcretePrinter {\npublic:\n\tvirtual void Print() const { std::cout << \"ConcretePrinter\" << std::endl; }\t\t\n};\n\nclass StonePrinter {\npublic:\n\tvirtual void Print() const { std::cout << \"StonePrinter\" << std::endl; }\t\t\n};\n\nint main()\n{\n\tstd::unique_ptr<ConcretePrinter> cp(std::make_unique<ConcretePrinter>());\n\t\n\tstd::unique_ptr<StonePrinter> sp(std::make_unique<StonePrinter>());\n\n\tstd::vector<std::unique_ptr<Printer>> doesntWork;\n\t//doesntWork.push_back(cp); //won't compile\n\t//doesntWork.push_back(sp); //won't compile\n}",
			"file": "_posts/obj_ptrs_2_code/unique_hetero.hpp",
			"file_size": 683,
			"file_write_time": 130889754760000000,
			"settings":
			{
				"buffer_size": 683,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-03-16-wedding-honeymoon.markdown",
			"settings":
			{
				"buffer_size": 7813,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-03-29-TT-scorer.markdown",
			"settings":
			{
				"buffer_size": 8737,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-04-6-types.markdown",
			"settings":
			{
				"buffer_size": 8672,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-06-10-objects-and-pointers-2.markdown",
			"settings":
			{
				"buffer_size": 4523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-08-10-talk-slides.markdown",
			"settings":
			{
				"buffer_size": 485,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Sample Markdown Cheat Sheet\n=========================== \n\nThis is a sample markdown file to help you write Markdown quickly :)\n\nIf you use the fabulous [Sublime Text 2/3 editor][ST] along with the [Markdown Preview plugin][MarkdownPreview], open your ST2 Palette with `CMD+⇧+P` then choose `Markdown Preview in browser` to see the result in your browser.\n\n## Text basics\nthis is *italic* and this is **bold** .  another _italic_ and another __bold__\n\nthis is `important` text. and percentage signs : % and `%`\n\nThis is a paragraph with a footnote (builtin parser only). [^note-id]\n\nInsert `[ TOC ]` without spaces to generate a table of contents (builtin parsers only).\n\n## Indentation\n> Here is some indented text\n>> even more indented\n\n## Titles\n# Big title (h1)\n## Middle title (h2)\n### Smaller title (h3)\n#### and so on (hX)\n##### and so on (hX)\n###### and so on (hX)\n\n## Example lists (1)\n\n - bullets can be `-`, `+`, or `*`\n - bullet list 1\n - bullet list 2\n    - sub item 1\n    - sub item 2\n\n        with indented text inside\n\n - bullet list 3\n + bullet list 4\n * bullet list 5\n\n## Links\n\nThis is an [example inline link](http://lmgtfy.com/) and [another one with a title](http://lmgtfy.com/ \"Hello, world\").\n\nLinks can also be reference based : [reference 1][ref1] or [reference 2 with title][ref2].\n\nReferences are usually placed at the bottom of the document\n\n## Images\n\nA sample image :\n\n![revolunet logo](http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\")\n\nAs links, images can also use references instead of inline links :\n\n![revolunet logo][revolunet-logo]\n\n\n## Code\n\nIt's quite easy to show code in markdown files.\n\nBackticks can be used to `highlight` some words.\n\nAlso, any indented block is considered a code block.  If `enable_highlight` is `true`, syntax highlighting will be included (for the builtin parser - the github parser does this automatically).\n\n    <script>\n        document.location = 'http://lmgtfy.com/?q=markdown+cheat+sheet';\n    </script>\n\n## Math\n\nWhen `enable_mathjax` is `true`, inline math can be included \\\\(\\frac{\\pi}{2}\\\\) $\\pi$\n\nAlternatively, math can be written on its own line:\n\n$$F(\\omega) = \\frac{1}{\\sqrt{2\\pi}} \\int_{-\\infty}^{\\infty} f(t) \\, e^{ - i \\omega t}dt$$\n\n\\\\[\\int_0^1 f(t) \\mathrm{d}t\\\\]\n\n\\\\[\\sum_j \\gamma_j^2/d_j\\\\]\n\n\n\n## GitHub Flavored Markdown\n\nIf you use the Github parser, you can use some of [Github Flavored Markdown][gfm] syntax :\n\n * User/Project@SHA: revolunet/sublimetext-markdown-preview@7da61badeda468b5019869d11000307e07e07401\n * User/Project#Issue: revolunet/sublimetext-markdown-preview#1\n * User : @revolunet\n\nSome Python code :\n\n```python\nimport random\n\nclass CardGame(object):\n    \"\"\" a sample python class \"\"\"\n    NB_CARDS = 32\n    def __init__(self, cards=5):\n        self.cards = random.sample(range(self.NB_CARDS), 5)\n        print 'ready to play'\n```\n\nSome Javascript code :\n\n```js\nvar config = {\n    duration: 5,\n    comment: 'WTF'\n}\n// callbacks beauty un action\nasync_call('/path/to/api', function(json) {\n    another_call(json, function(result2) {\n        another_another_call(result2, function(result3) {\n            another_another_another_call(result3, function(result4) {\n                alert('And if all went well, i got my result :)');\n            });\n        });\n    });\n})\n```\n\nThe Github Markdown also brings some [nice Emoji support][emoji] : :+1: :heart: :beer:\n\n[^note-id]: This is the text of the note. \n\n## Parsers and Extensions\n\nMarkdown Preview comes with **Python-Markdown** preloaded.\n\n### *Python-Markdown*\n\nThe [Python-Markdown Parser][] provides support for several extensions.\n\n[Python-Markdown Parser]: https://github.com/waylan/Python-Markdown\n\n#### Extra Extensions\n\n* `abbr` -- [Abbreviations][]\n* `attr_list` -- [Attribute Lists][]\n* `def_list` -- [Definition Lists][]\n* `fenced_code` -- [Fenced Code Blocks][]\n* `footnotes` -- [Footnotes][]\n* `tables` -- [Tables][]\n* `smart_strong` -- [Smart Strong][]\n\n[Abbreviations]: http://pythonhosted.org/Markdown/extensions/abbreviations.html\n[Attribute Lists]: http://pythonhosted.org/Markdown/extensions/attr_list.html\n[Definition Lists]: http://pythonhosted.org/Markdown/extensions/definition_lists.html\n[Fenced Code Blocks]: http://pythonhosted.org/Markdown/extensions/fenced_code_blocks.html\n[Footnotes]: http://pythonhosted.org/Markdown/extensions/footnotes.html\n[Tables]: http://pythonhosted.org/Markdown/extensions/tables.html\n[Smart Strong]: http://pythonhosted.org/Markdown/extensions/smart_strong.html\n\n\nYou can enable them all at once using the `extra` keyword.\n\n    extensions: [ 'extra' ]\n\nIf you want all the extras plus the `toc` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['extra', 'toc'],\n        ...\n    }\n\n\n#### Other Extensions\n\nThere are also some extensions that are not included in Markdown Extra\nbut come in the standard Python-Markdown library.\n\n* `code-hilite` -- [CodeHilite][]\n* `html-tidy` -- [HTML Tidy][]\n* `header-id` -- [HeaderId][]\n* `meta_data` -- [Meta-Data][]\n* `nl2br` -- [New Line to Break][]\n* `rss` -- [RSS][]\n* `sane_lists` -- [Sane Lists][]\n* `smarty` -- [Smarty][]\n* `toc` -- [Table of Contents][]\n* `wikilinks` -- [WikiLinks][]\n\n[CodeHilite]:  http://pythonhosted.org/Markdown/extensions/code_hilite.html\n[HTML Tidy]:  http://pythonhosted.org/Markdown/extensions/html_tidy.html\n[HeaderId]:  http://pythonhosted.org/Markdown/extensions/header_id.html\n[Meta-Data]:  http://pythonhosted.org/Markdown/extensions/meta_data.html\n[New Line to Break]:  http://pythonhosted.org/Markdown/extensions/nl2br.html\n[RSS]:  http://pythonhosted.org/Markdown/extensions/rss.html\n[Sane Lists]:  http://pythonhosted.org/Markdown/extensions/sane_lists.html\n[Table of Contents]:  http://pythonhosted.org/Markdown/extensions/toc.html\n[WikiLinks]:  http://pythonhosted.org/Markdown/extensions/wikilinks.html\n[Smarty]: https://pythonhosted.org/Markdown/extensions/smarty.html\n\n#### 3rd Party Extensions\n\n*Python-Markdown* is designed to be extended.\n\nSome included ones are:\n\n* `delete` -- github style delte support via `~~word~~`\n* `githubemoji` --  github emoji support\n* `tasklist` -- github style tasklists\n* `magiclink` -- github style auto link conversion of http|ftp links\n* `headeranchor` -- github style header anchor links\n* `github` -- Adds the above extensions in one shot\n* `b64` -- convert and embed local images to base64.  Setup by adding this `b64(base_path=${BASE_PATH})`\n\nThere are also a number of others available:\n\nJust fork this repo and add your extensions inside the `.../Packages/Markdown Preview/markdown/extensions/` folder.\n\nCheck out the list of [3rd Party extensions](\nhttps://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions).\n\n\n#### Default Extensions\n\nThe default extensions are:\n\n* `footnotes` -- [Footnotes]\n* `toc` -- [Table of Contents]\n* `fenced_code` -- [Fenced Code Blocks] \n* `tables` -- [Tables]\n\nUse the `default` keyword, to select them all.\nIf you want all the defaults plus the `definition_lists` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['default', 'definition_lists'],\n        ...\n    }\n\n## Examples\n\n### Tables\n\nThe `tables` extension of the *Python-Markdown* parser is activated by default,\nbut is currently **not** available in *Markdown2*.\n\nThe syntax was adopted from the [php markdown project](http://michelf.ca/projects/php-markdown/extra/#table),\nand is also used in github flavoured markdown.\n\n| Year | Temperature (low) | Temperature (high) |  \n| ---- | ----------------- | -------------------|  \n| 1900 |               -10 |                 25 |  \n| 1910 |               -15 |                 30 |  \n| 1920 |               -10 |                 32 |  \n\n\n### Wiki Tables\n\nIf you are using *Markdown2* with the `wiki-tables` extra activated you should see a table below:\n\n|| *Year* || *Temperature (low)* || *Temperature (high)* ||  \n||   1900 ||                 -10 ||                   25 ||  \n||   1910 ||                 -15 ||                   30 ||  \n||   1920 ||                 -10 ||                   32 ||  \n\n\n### Definition Lists\n\nThis example requires *Python Markdown*'s `def_list` extension.\n\nApple\n:   Pomaceous fruit of plants of the genus Malus in \n    the family Rosaceae.\n\nOrange\n:   The fruit of an evergreen tree of the genus Citrus.\n\n\n## About\n\nThis plugin and this sample file is proudly brought to you by the [revolunet team][revolunet]\n\n [ref1]: http://revolunet.com\n [ref2]: http://revolunet.com \"rich web apps\"\n [MarkdownREF]: http://daringfireball.net/projects/markdown/basics\n [MarkdownPreview]: https://github.com/revolunet/sublimetext-markdown-preview\n [ST]: http://sublimetext.com\n [revolunet]: http://revolunet.com\n [revolunet-logo]: http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\"\n [gfm]: http://github.github.com/github-flavored-markdown/\n [emoji]: http://www.emoji-cheat-sheet.com/\n\n",
			"settings":
			{
				"buffer_size": 8996,
				"line_ending": "Unix",
				"name": "Markdown Cheatsheet",
				"scratch": true
			}
		},
		{
			"contents": "Sample Markdown Cheat Sheet\n=========================== \n\nThis is a sample markdown file to help you write Markdown quickly :)\n\nIf you use the fabulous [Sublime Text 2/3 editor][ST] along with the [Markdown Preview plugin][MarkdownPreview], open your ST2 Palette with `CMD+⇧+P` then choose `Markdown Preview in browser` to see the result in your browser.\n\n## Text basics\nthis is *italic* and this is **bold** .  another _italic_ and another __bold__\n\nthis is `important` text. and percentage signs : % and `%`\n\nThis is a paragraph with a footnote (builtin parser only). [^note-id]\n\nInsert `[ TOC ]` without spaces to generate a table of contents (builtin parsers only).\n\n## Indentation\n> Here is some indented text\n>> even more indented\n\n## Titles\n# Big title (h1)\n## Middle title (h2)\n### Smaller title (h3)\n#### and so on (hX)\n##### and so on (hX)\n###### and so on (hX)\n\n## Example lists (1)\n\n - bullets can be `-`, `+`, or `*`\n - bullet list 1\n - bullet list 2\n    - sub item 1\n    - sub item 2\n\n        with indented text inside\n\n - bullet list 3\n + bullet list 4\n * bullet list 5\n\n## Links\n\nThis is an [example inline link](http://lmgtfy.com/) and [another one with a title](http://lmgtfy.com/ \"Hello, world\").\n\nLinks can also be reference based : [reference 1][ref1] or [reference 2 with title][ref2].\n\nReferences are usually placed at the bottom of the document\n\n## Images\n\nA sample image :\n\n![revolunet logo](http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\")\n\nAs links, images can also use references instead of inline links :\n\n![revolunet logo][revolunet-logo]\n\n\n## Code\n\nIt's quite easy to show code in markdown files.\n\nBackticks can be used to `highlight` some words.\n\nAlso, any indented block is considered a code block.  If `enable_highlight` is `true`, syntax highlighting will be included (for the builtin parser - the github parser does this automatically).\n\n    <script>\n        document.location = 'http://lmgtfy.com/?q=markdown+cheat+sheet';\n    </script>\n\n## Math\n\nWhen `enable_mathjax` is `true`, inline math can be included \\\\(\\frac{\\pi}{2}\\\\) $\\pi$\n\nAlternatively, math can be written on its own line:\n\n$$F(\\omega) = \\frac{1}{\\sqrt{2\\pi}} \\int_{-\\infty}^{\\infty} f(t) \\, e^{ - i \\omega t}dt$$\n\n\\\\[\\int_0^1 f(t) \\mathrm{d}t\\\\]\n\n\\\\[\\sum_j \\gamma_j^2/d_j\\\\]\n\n\n\n## GitHub Flavored Markdown\n\nIf you use the Github parser, you can use some of [Github Flavored Markdown][gfm] syntax :\n\n * User/Project@SHA: revolunet/sublimetext-markdown-preview@7da61badeda468b5019869d11000307e07e07401\n * User/Project#Issue: revolunet/sublimetext-markdown-preview#1\n * User : @revolunet\n\nSome Python code :\n\n```python\nimport random\n\nclass CardGame(object):\n    \"\"\" a sample python class \"\"\"\n    NB_CARDS = 32\n    def __init__(self, cards=5):\n        self.cards = random.sample(range(self.NB_CARDS), 5)\n        print 'ready to play'\n```\n\nSome Javascript code :\n\n```js\nvar config = {\n    duration: 5,\n    comment: 'WTF'\n}\n// callbacks beauty un action\nasync_call('/path/to/api', function(json) {\n    another_call(json, function(result2) {\n        another_another_call(result2, function(result3) {\n            another_another_another_call(result3, function(result4) {\n                alert('And if all went well, i got my result :)');\n            });\n        });\n    });\n})\n```\n\nThe Github Markdown also brings some [nice Emoji support][emoji] : :+1: :heart: :beer:\n\n[^note-id]: This is the text of the note. \n\n## Parsers and Extensions\n\nMarkdown Preview comes with **Python-Markdown** preloaded.\n\n### *Python-Markdown*\n\nThe [Python-Markdown Parser][] provides support for several extensions.\n\n[Python-Markdown Parser]: https://github.com/waylan/Python-Markdown\n\n#### Extra Extensions\n\n* `abbr` -- [Abbreviations][]\n* `attr_list` -- [Attribute Lists][]\n* `def_list` -- [Definition Lists][]\n* `fenced_code` -- [Fenced Code Blocks][]\n* `footnotes` -- [Footnotes][]\n* `tables` -- [Tables][]\n* `smart_strong` -- [Smart Strong][]\n\n[Abbreviations]: http://pythonhosted.org/Markdown/extensions/abbreviations.html\n[Attribute Lists]: http://pythonhosted.org/Markdown/extensions/attr_list.html\n[Definition Lists]: http://pythonhosted.org/Markdown/extensions/definition_lists.html\n[Fenced Code Blocks]: http://pythonhosted.org/Markdown/extensions/fenced_code_blocks.html\n[Footnotes]: http://pythonhosted.org/Markdown/extensions/footnotes.html\n[Tables]: http://pythonhosted.org/Markdown/extensions/tables.html\n[Smart Strong]: http://pythonhosted.org/Markdown/extensions/smart_strong.html\n\n\nYou can enable them all at once using the `extra` keyword.\n\n    extensions: [ 'extra' ]\n\nIf you want all the extras plus the `toc` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['extra', 'toc'],\n        ...\n    }\n\n\n#### Other Extensions\n\nThere are also some extensions that are not included in Markdown Extra\nbut come in the standard Python-Markdown library.\n\n* `code-hilite` -- [CodeHilite][]\n* `html-tidy` -- [HTML Tidy][]\n* `header-id` -- [HeaderId][]\n* `meta_data` -- [Meta-Data][]\n* `nl2br` -- [New Line to Break][]\n* `rss` -- [RSS][]\n* `sane_lists` -- [Sane Lists][]\n* `smarty` -- [Smarty][]\n* `toc` -- [Table of Contents][]\n* `wikilinks` -- [WikiLinks][]\n\n[CodeHilite]:  http://pythonhosted.org/Markdown/extensions/code_hilite.html\n[HTML Tidy]:  http://pythonhosted.org/Markdown/extensions/html_tidy.html\n[HeaderId]:  http://pythonhosted.org/Markdown/extensions/header_id.html\n[Meta-Data]:  http://pythonhosted.org/Markdown/extensions/meta_data.html\n[New Line to Break]:  http://pythonhosted.org/Markdown/extensions/nl2br.html\n[RSS]:  http://pythonhosted.org/Markdown/extensions/rss.html\n[Sane Lists]:  http://pythonhosted.org/Markdown/extensions/sane_lists.html\n[Table of Contents]:  http://pythonhosted.org/Markdown/extensions/toc.html\n[WikiLinks]:  http://pythonhosted.org/Markdown/extensions/wikilinks.html\n[Smarty]: https://pythonhosted.org/Markdown/extensions/smarty.html\n\n#### 3rd Party Extensions\n\n*Python-Markdown* is designed to be extended.\n\nSome included ones are:\n\n* `delete` -- github style delte support via `~~word~~`\n* `githubemoji` --  github emoji support\n* `tasklist` -- github style tasklists\n* `magiclink` -- github style auto link conversion of http|ftp links\n* `headeranchor` -- github style header anchor links\n* `github` -- Adds the above extensions in one shot\n* `b64` -- convert and embed local images to base64.  Setup by adding this `b64(base_path=${BASE_PATH})`\n\nThere are also a number of others available:\n\nJust fork this repo and add your extensions inside the `.../Packages/Markdown Preview/markdown/extensions/` folder.\n\nCheck out the list of [3rd Party extensions](\nhttps://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions).\n\n\n#### Default Extensions\n\nThe default extensions are:\n\n* `footnotes` -- [Footnotes]\n* `toc` -- [Table of Contents]\n* `fenced_code` -- [Fenced Code Blocks] \n* `tables` -- [Tables]\n\nUse the `default` keyword, to select them all.\nIf you want all the defaults plus the `definition_lists` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['default', 'definition_lists'],\n        ...\n    }\n\n## Examples\n\n### Tables\n\nThe `tables` extension of the *Python-Markdown* parser is activated by default,\nbut is currently **not** available in *Markdown2*.\n\nThe syntax was adopted from the [php markdown project](http://michelf.ca/projects/php-markdown/extra/#table),\nand is also used in github flavoured markdown.\n\n| Year | Temperature (low) | Temperature (high) |  \n| ---- | ----------------- | -------------------|  \n| 1900 |               -10 |                 25 |  \n| 1910 |               -15 |                 30 |  \n| 1920 |               -10 |                 32 |  \n\n\n### Wiki Tables\n\nIf you are using *Markdown2* with the `wiki-tables` extra activated you should see a table below:\n\n|| *Year* || *Temperature (low)* || *Temperature (high)* ||  \n||   1900 ||                 -10 ||                   25 ||  \n||   1910 ||                 -15 ||                   30 ||  \n||   1920 ||                 -10 ||                   32 ||  \n\n\n### Definition Lists\n\nThis example requires *Python Markdown*'s `def_list` extension.\n\nApple\n:   Pomaceous fruit of plants of the genus Malus in \n    the family Rosaceae.\n\nOrange\n:   The fruit of an evergreen tree of the genus Citrus.\n\n\n## About\n\nThis plugin and this sample file is proudly brought to you by the [revolunet team][revolunet]\n\n [ref1]: http://revolunet.com\n [ref2]: http://revolunet.com \"rich web apps\"\n [MarkdownREF]: http://daringfireball.net/projects/markdown/basics\n [MarkdownPreview]: https://github.com/revolunet/sublimetext-markdown-preview\n [ST]: http://sublimetext.com\n [revolunet]: http://revolunet.com\n [revolunet-logo]: http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\"\n [gfm]: http://github.github.com/github-flavored-markdown/\n [emoji]: http://www.emoji-cheat-sheet.com/\n\n",
			"settings":
			{
				"buffer_size": 8996,
				"line_ending": "Unix",
				"name": "Markdown Cheatsheet",
				"scratch": true
			}
		},
		{
			"contents": "Sample Markdown Cheat Sheet\n=========================== \n\nThis is a sample markdown file to help you write Markdown quickly :)\n\nIf you use the fabulous [Sublime Text 2/3 editor][ST] along with the [Markdown Preview plugin][MarkdownPreview], open your ST2 Palette with `CMD+⇧+P` then choose `Markdown Preview in browser` to see the result in your browser.\n\n## Text basics\nthis is *italic* and this is **bold** .  another _italic_ and another __bold__\n\nthis is `important` text. and percentage signs : % and `%`\n\nThis is a paragraph with a footnote (builtin parser only). [^note-id]\n\nInsert `[ TOC ]` without spaces to generate a table of contents (builtin parsers only).\n\n## Indentation\n> Here is some indented text\n>> even more indented\n\n## Titles\n# Big title (h1)\n## Middle title (h2)\n### Smaller title (h3)\n#### and so on (hX)\n##### and so on (hX)\n###### and so on (hX)\n\n## Example lists (1)\n\n - bullets can be `-`, `+`, or `*`\n - bullet list 1\n - bullet list 2\n    - sub item 1\n    - sub item 2\n\n        with indented text inside\n\n - bullet list 3\n + bullet list 4\n * bullet list 5\n\n## Links\n\nThis is an [example inline link](http://lmgtfy.com/) and [another one with a title](http://lmgtfy.com/ \"Hello, world\").\n\nLinks can also be reference based : [reference 1][ref1] or [reference 2 with title][ref2].\n\nReferences are usually placed at the bottom of the document\n\n## Images\n\nA sample image :\n\n![revolunet logo](http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\")\n\nAs links, images can also use references instead of inline links :\n\n![revolunet logo][revolunet-logo]\n\n\n## Code\n\nIt's quite easy to show code in markdown files.\n\nBackticks can be used to `highlight` some words.\n\nAlso, any indented block is considered a code block.  If `enable_highlight` is `true`, syntax highlighting will be included (for the builtin parser - the github parser does this automatically).\n\n    <script>\n        document.location = 'http://lmgtfy.com/?q=markdown+cheat+sheet';\n    </script>\n\n## Math\n\nWhen `enable_mathjax` is `true`, inline math can be included \\\\(\\frac{\\pi}{2}\\\\) $\\pi$\n\nAlternatively, math can be written on its own line:\n\n$$F(\\omega) = \\frac{1}{\\sqrt{2\\pi}} \\int_{-\\infty}^{\\infty} f(t) \\, e^{ - i \\omega t}dt$$\n\n\\\\[\\int_0^1 f(t) \\mathrm{d}t\\\\]\n\n\\\\[\\sum_j \\gamma_j^2/d_j\\\\]\n\n\n\n## GitHub Flavored Markdown\n\nIf you use the Github parser, you can use some of [Github Flavored Markdown][gfm] syntax :\n\n * User/Project@SHA: revolunet/sublimetext-markdown-preview@7da61badeda468b5019869d11000307e07e07401\n * User/Project#Issue: revolunet/sublimetext-markdown-preview#1\n * User : @revolunet\n\nSome Python code :\n\n```python\nimport random\n\nclass CardGame(object):\n    \"\"\" a sample python class \"\"\"\n    NB_CARDS = 32\n    def __init__(self, cards=5):\n        self.cards = random.sample(range(self.NB_CARDS), 5)\n        print 'ready to play'\n```\n\nSome Javascript code :\n\n```js\nvar config = {\n    duration: 5,\n    comment: 'WTF'\n}\n// callbacks beauty un action\nasync_call('/path/to/api', function(json) {\n    another_call(json, function(result2) {\n        another_another_call(result2, function(result3) {\n            another_another_another_call(result3, function(result4) {\n                alert('And if all went well, i got my result :)');\n            });\n        });\n    });\n})\n```\n\nThe Github Markdown also brings some [nice Emoji support][emoji] : :+1: :heart: :beer:\n\n[^note-id]: This is the text of the note. \n\n## Parsers and Extensions\n\nMarkdown Preview comes with **Python-Markdown** preloaded.\n\n### *Python-Markdown*\n\nThe [Python-Markdown Parser][] provides support for several extensions.\n\n[Python-Markdown Parser]: https://github.com/waylan/Python-Markdown\n\n#### Extra Extensions\n\n* `abbr` -- [Abbreviations][]\n* `attr_list` -- [Attribute Lists][]\n* `def_list` -- [Definition Lists][]\n* `fenced_code` -- [Fenced Code Blocks][]\n* `footnotes` -- [Footnotes][]\n* `tables` -- [Tables][]\n* `smart_strong` -- [Smart Strong][]\n\n[Abbreviations]: http://pythonhosted.org/Markdown/extensions/abbreviations.html\n[Attribute Lists]: http://pythonhosted.org/Markdown/extensions/attr_list.html\n[Definition Lists]: http://pythonhosted.org/Markdown/extensions/definition_lists.html\n[Fenced Code Blocks]: http://pythonhosted.org/Markdown/extensions/fenced_code_blocks.html\n[Footnotes]: http://pythonhosted.org/Markdown/extensions/footnotes.html\n[Tables]: http://pythonhosted.org/Markdown/extensions/tables.html\n[Smart Strong]: http://pythonhosted.org/Markdown/extensions/smart_strong.html\n\n\nYou can enable them all at once using the `extra` keyword.\n\n    extensions: [ 'extra' ]\n\nIf you want all the extras plus the `toc` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['extra', 'toc'],\n        ...\n    }\n\n\n#### Other Extensions\n\nThere are also some extensions that are not included in Markdown Extra\nbut come in the standard Python-Markdown library.\n\n* `code-hilite` -- [CodeHilite][]\n* `html-tidy` -- [HTML Tidy][]\n* `header-id` -- [HeaderId][]\n* `meta_data` -- [Meta-Data][]\n* `nl2br` -- [New Line to Break][]\n* `rss` -- [RSS][]\n* `sane_lists` -- [Sane Lists][]\n* `smarty` -- [Smarty][]\n* `toc` -- [Table of Contents][]\n* `wikilinks` -- [WikiLinks][]\n\n[CodeHilite]:  http://pythonhosted.org/Markdown/extensions/code_hilite.html\n[HTML Tidy]:  http://pythonhosted.org/Markdown/extensions/html_tidy.html\n[HeaderId]:  http://pythonhosted.org/Markdown/extensions/header_id.html\n[Meta-Data]:  http://pythonhosted.org/Markdown/extensions/meta_data.html\n[New Line to Break]:  http://pythonhosted.org/Markdown/extensions/nl2br.html\n[RSS]:  http://pythonhosted.org/Markdown/extensions/rss.html\n[Sane Lists]:  http://pythonhosted.org/Markdown/extensions/sane_lists.html\n[Table of Contents]:  http://pythonhosted.org/Markdown/extensions/toc.html\n[WikiLinks]:  http://pythonhosted.org/Markdown/extensions/wikilinks.html\n[Smarty]: https://pythonhosted.org/Markdown/extensions/smarty.html\n\n#### 3rd Party Extensions\n\n*Python-Markdown* is designed to be extended.\n\nSome included ones are:\n\n* `delete` -- github style delte support via `~~word~~`\n* `githubemoji` --  github emoji support\n* `tasklist` -- github style tasklists\n* `magiclink` -- github style auto link conversion of http|ftp links\n* `headeranchor` -- github style header anchor links\n* `github` -- Adds the above extensions in one shot\n* `b64` -- convert and embed local images to base64.  Setup by adding this `b64(base_path=${BASE_PATH})`\n\nThere are also a number of others available:\n\nJust fork this repo and add your extensions inside the `.../Packages/Markdown Preview/markdown/extensions/` folder.\n\nCheck out the list of [3rd Party extensions](\nhttps://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions).\n\n\n#### Default Extensions\n\nThe default extensions are:\n\n* `footnotes` -- [Footnotes]\n* `toc` -- [Table of Contents]\n* `fenced_code` -- [Fenced Code Blocks] \n* `tables` -- [Tables]\n\nUse the `default` keyword, to select them all.\nIf you want all the defaults plus the `definition_lists` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['default', 'definition_lists'],\n        ...\n    }\n\n## Examples\n\n### Tables\n\nThe `tables` extension of the *Python-Markdown* parser is activated by default,\nbut is currently **not** available in *Markdown2*.\n\nThe syntax was adopted from the [php markdown project](http://michelf.ca/projects/php-markdown/extra/#table),\nand is also used in github flavoured markdown.\n\n| Year | Temperature (low) | Temperature (high) |  \n| ---- | ----------------- | -------------------|  \n| 1900 |               -10 |                 25 |  \n| 1910 |               -15 |                 30 |  \n| 1920 |               -10 |                 32 |  \n\n\n### Wiki Tables\n\nIf you are using *Markdown2* with the `wiki-tables` extra activated you should see a table below:\n\n|| *Year* || *Temperature (low)* || *Temperature (high)* ||  \n||   1900 ||                 -10 ||                   25 ||  \n||   1910 ||                 -15 ||                   30 ||  \n||   1920 ||                 -10 ||                   32 ||  \n\n\n### Definition Lists\n\nThis example requires *Python Markdown*'s `def_list` extension.\n\nApple\n:   Pomaceous fruit of plants of the genus Malus in \n    the family Rosaceae.\n\nOrange\n:   The fruit of an evergreen tree of the genus Citrus.\n\n\n## About\n\nThis plugin and this sample file is proudly brought to you by the [revolunet team][revolunet]\n\n [ref1]: http://revolunet.com\n [ref2]: http://revolunet.com \"rich web apps\"\n [MarkdownREF]: http://daringfireball.net/projects/markdown/basics\n [MarkdownPreview]: https://github.com/revolunet/sublimetext-markdown-preview\n [ST]: http://sublimetext.com\n [revolunet]: http://revolunet.com\n [revolunet-logo]: http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\"\n [gfm]: http://github.github.com/github-flavored-markdown/\n [emoji]: http://www.emoji-cheat-sheet.com/\n\n",
			"settings":
			{
				"buffer_size": 8996,
				"line_ending": "Unix",
				"name": "Markdown Cheatsheet",
				"scratch": true
			}
		},
		{
			"contents": "Sample Markdown Cheat Sheet\n=========================== \n\nThis is a sample markdown file to help you write Markdown quickly :)\n\nIf you use the fabulous [Sublime Text 2/3 editor][ST] along with the [Markdown Preview plugin][MarkdownPreview], open your ST2 Palette with `CMD+⇧+P` then choose `Markdown Preview in browser` to see the result in your browser.\n\n## Text basics\nthis is *italic* and this is **bold** .  another _italic_ and another __bold__\n\nthis is `important` text. and percentage signs : % and `%`\n\nThis is a paragraph with a footnote (builtin parser only). [^note-id]\n\nInsert `[ TOC ]` without spaces to generate a table of contents (builtin parsers only).\n\n## Indentation\n> Here is some indented text\n>> even more indented\n\n## Titles\n# Big title (h1)\n## Middle title (h2)\n### Smaller title (h3)\n#### and so on (hX)\n##### and so on (hX)\n###### and so on (hX)\n\n## Example lists (1)\n\n - bullets can be `-`, `+`, or `*`\n - bullet list 1\n - bullet list 2\n    - sub item 1\n    - sub item 2\n\n        with indented text inside\n\n - bullet list 3\n + bullet list 4\n * bullet list 5\n\n## Links\n\nThis is an [example inline link](http://lmgtfy.com/) and [another one with a title](http://lmgtfy.com/ \"Hello, world\").\n\nLinks can also be reference based : [reference 1][ref1] or [reference 2 with title][ref2].\n\nReferences are usually placed at the bottom of the document\n\n## Images\n\nA sample image :\n\n![revolunet logo](http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\")\n\nAs links, images can also use references instead of inline links :\n\n![revolunet logo][revolunet-logo]\n\n\n## Code\n\nIt's quite easy to show code in markdown files.\n\nBackticks can be used to `highlight` some words.\n\nAlso, any indented block is considered a code block.  If `enable_highlight` is `true`, syntax highlighting will be included (for the builtin parser - the github parser does this automatically).\n\n    <script>\n        document.location = 'http://lmgtfy.com/?q=markdown+cheat+sheet';\n    </script>\n\n## Math\n\nWhen `enable_mathjax` is `true`, inline math can be included \\\\(\\frac{\\pi}{2}\\\\) $\\pi$\n\nAlternatively, math can be written on its own line:\n\n$$F(\\omega) = \\frac{1}{\\sqrt{2\\pi}} \\int_{-\\infty}^{\\infty} f(t) \\, e^{ - i \\omega t}dt$$\n\n\\\\[\\int_0^1 f(t) \\mathrm{d}t\\\\]\n\n\\\\[\\sum_j \\gamma_j^2/d_j\\\\]\n\n\n\n## GitHub Flavored Markdown\n\nIf you use the Github parser, you can use some of [Github Flavored Markdown][gfm] syntax :\n\n * User/Project@SHA: revolunet/sublimetext-markdown-preview@7da61badeda468b5019869d11000307e07e07401\n * User/Project#Issue: revolunet/sublimetext-markdown-preview#1\n * User : @revolunet\n\nSome Python code :\n\n```python\nimport random\n\nclass CardGame(object):\n    \"\"\" a sample python class \"\"\"\n    NB_CARDS = 32\n    def __init__(self, cards=5):\n        self.cards = random.sample(range(self.NB_CARDS), 5)\n        print 'ready to play'\n```\n\nSome Javascript code :\n\n```js\nvar config = {\n    duration: 5,\n    comment: 'WTF'\n}\n// callbacks beauty un action\nasync_call('/path/to/api', function(json) {\n    another_call(json, function(result2) {\n        another_another_call(result2, function(result3) {\n            another_another_another_call(result3, function(result4) {\n                alert('And if all went well, i got my result :)');\n            });\n        });\n    });\n})\n```\n\nThe Github Markdown also brings some [nice Emoji support][emoji] : :+1: :heart: :beer:\n\n[^note-id]: This is the text of the note. \n\n## Parsers and Extensions\n\nMarkdown Preview comes with **Python-Markdown** preloaded.\n\n### *Python-Markdown*\n\nThe [Python-Markdown Parser][] provides support for several extensions.\n\n[Python-Markdown Parser]: https://github.com/waylan/Python-Markdown\n\n#### Extra Extensions\n\n* `abbr` -- [Abbreviations][]\n* `attr_list` -- [Attribute Lists][]\n* `def_list` -- [Definition Lists][]\n* `fenced_code` -- [Fenced Code Blocks][]\n* `footnotes` -- [Footnotes][]\n* `tables` -- [Tables][]\n* `smart_strong` -- [Smart Strong][]\n\n[Abbreviations]: http://pythonhosted.org/Markdown/extensions/abbreviations.html\n[Attribute Lists]: http://pythonhosted.org/Markdown/extensions/attr_list.html\n[Definition Lists]: http://pythonhosted.org/Markdown/extensions/definition_lists.html\n[Fenced Code Blocks]: http://pythonhosted.org/Markdown/extensions/fenced_code_blocks.html\n[Footnotes]: http://pythonhosted.org/Markdown/extensions/footnotes.html\n[Tables]: http://pythonhosted.org/Markdown/extensions/tables.html\n[Smart Strong]: http://pythonhosted.org/Markdown/extensions/smart_strong.html\n\n\nYou can enable them all at once using the `extra` keyword.\n\n    extensions: [ 'extra' ]\n\nIf you want all the extras plus the `toc` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['extra', 'toc'],\n        ...\n    }\n\n\n#### Other Extensions\n\nThere are also some extensions that are not included in Markdown Extra\nbut come in the standard Python-Markdown library.\n\n* `code-hilite` -- [CodeHilite][]\n* `html-tidy` -- [HTML Tidy][]\n* `header-id` -- [HeaderId][]\n* `meta_data` -- [Meta-Data][]\n* `nl2br` -- [New Line to Break][]\n* `rss` -- [RSS][]\n* `sane_lists` -- [Sane Lists][]\n* `smarty` -- [Smarty][]\n* `toc` -- [Table of Contents][]\n* `wikilinks` -- [WikiLinks][]\n\n[CodeHilite]:  http://pythonhosted.org/Markdown/extensions/code_hilite.html\n[HTML Tidy]:  http://pythonhosted.org/Markdown/extensions/html_tidy.html\n[HeaderId]:  http://pythonhosted.org/Markdown/extensions/header_id.html\n[Meta-Data]:  http://pythonhosted.org/Markdown/extensions/meta_data.html\n[New Line to Break]:  http://pythonhosted.org/Markdown/extensions/nl2br.html\n[RSS]:  http://pythonhosted.org/Markdown/extensions/rss.html\n[Sane Lists]:  http://pythonhosted.org/Markdown/extensions/sane_lists.html\n[Table of Contents]:  http://pythonhosted.org/Markdown/extensions/toc.html\n[WikiLinks]:  http://pythonhosted.org/Markdown/extensions/wikilinks.html\n[Smarty]: https://pythonhosted.org/Markdown/extensions/smarty.html\n\n#### 3rd Party Extensions\n\n*Python-Markdown* is designed to be extended.\n\nSome included ones are:\n\n* `delete` -- github style delte support via `~~word~~`\n* `githubemoji` --  github emoji support\n* `tasklist` -- github style tasklists\n* `magiclink` -- github style auto link conversion of http|ftp links\n* `headeranchor` -- github style header anchor links\n* `github` -- Adds the above extensions in one shot\n* `b64` -- convert and embed local images to base64.  Setup by adding this `b64(base_path=${BASE_PATH})`\n\nThere are also a number of others available:\n\nJust fork this repo and add your extensions inside the `.../Packages/Markdown Preview/markdown/extensions/` folder.\n\nCheck out the list of [3rd Party extensions](\nhttps://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions).\n\n\n#### Default Extensions\n\nThe default extensions are:\n\n* `footnotes` -- [Footnotes]\n* `toc` -- [Table of Contents]\n* `fenced_code` -- [Fenced Code Blocks] \n* `tables` -- [Tables]\n\nUse the `default` keyword, to select them all.\nIf you want all the defaults plus the `definition_lists` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['default', 'definition_lists'],\n        ...\n    }\n\n## Examples\n\n### Tables\n\nThe `tables` extension of the *Python-Markdown* parser is activated by default,\nbut is currently **not** available in *Markdown2*.\n\nThe syntax was adopted from the [php markdown project](http://michelf.ca/projects/php-markdown/extra/#table),\nand is also used in github flavoured markdown.\n\n| Year | Temperature (low) | Temperature (high) |  \n| ---- | ----------------- | -------------------|  \n| 1900 |               -10 |                 25 |  \n| 1910 |               -15 |                 30 |  \n| 1920 |               -10 |                 32 |  \n\n\n### Wiki Tables\n\nIf you are using *Markdown2* with the `wiki-tables` extra activated you should see a table below:\n\n|| *Year* || *Temperature (low)* || *Temperature (high)* ||  \n||   1900 ||                 -10 ||                   25 ||  \n||   1910 ||                 -15 ||                   30 ||  \n||   1920 ||                 -10 ||                   32 ||  \n\n\n### Definition Lists\n\nThis example requires *Python Markdown*'s `def_list` extension.\n\nApple\n:   Pomaceous fruit of plants of the genus Malus in \n    the family Rosaceae.\n\nOrange\n:   The fruit of an evergreen tree of the genus Citrus.\n\n\n## About\n\nThis plugin and this sample file is proudly brought to you by the [revolunet team][revolunet]\n\n [ref1]: http://revolunet.com\n [ref2]: http://revolunet.com \"rich web apps\"\n [MarkdownREF]: http://daringfireball.net/projects/markdown/basics\n [MarkdownPreview]: https://github.com/revolunet/sublimetext-markdown-preview\n [ST]: http://sublimetext.com\n [revolunet]: http://revolunet.com\n [revolunet-logo]: http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\"\n [gfm]: http://github.github.com/github-flavored-markdown/\n [emoji]: http://www.emoji-cheat-sheet.com/\n\n",
			"settings":
			{
				"buffer_size": 8996,
				"line_ending": "Unix",
				"name": "Markdown Cheatsheet",
				"scratch": true
			}
		},
		{
			"contents": "---\nlayout: post\ntitle:  \"Objects and pointers part II\"\ndate:   2015-7-21 21:29:19\ncategories: c++\n---\n\n<!--\nOutline:\n\n- static polymorphism\n - set the scene\n  - value semantics\n  - polymorphism\n  - not polymorphism\n - unique_ptr\n  - cannot go into homogeneous container\n  - assignment doesn't work as expected\n - hand rolled\n - boost any\n-->\n\nI described in a [previous post]({% post_url 2014-11-30-objects-and-pointers %}) how difficult it is to work with dynamic dispatch in c++. I described various ways to deal with it. However I've been reading about an even more powerful and easy to use way to do things.\n\nLets say that I want the following properties of a variable for an object:\n\n* dynamic dispatch of its methods\n* memory safety\n\nWe can achieve combinations of those properties using the techniques I described last time: i.e. use of safe pointers (dynamic dispatch + memory safety), CRTP (memory safety and inheritance but dispatch done statically) or inclusion (memory safety but static dispatch and no inheritance).\n\nHowever my eyes have been opened a bit after watching Sean Parent's talk called [\"C++ seasoning\"](http://channel9.msdn.com/Events/GoingNative/2013/Cpp-Seasoning). Now I also want to achieve *value semantics*. Value semantics means that assigning a value to a different variable copies it (or, with std::move, moves it without copying). The opposite is reference semantics meaning that only the pointer is copied. With value semantics a value is guaranteed to be the sole way to access the corresponding area of memory.\n\n{% highlight c++ linenos %}\n{% include_relative obj_ptrs_2_code/value.cpp %}\n{% endhighlight %}\n\nUsing value semantics helps to make code easy to understand, since you don't need to check what other variables (possibly on other threads) might be sharing the same data. There is no sharing.\n\nAlso you don't have to worry about cleaning up pointers any longer, because there are none. \n\nI said in my earlier post that in C++ polymorphism is only available via a pointer/reference variable. That is true, but there are a variety of techniques to maintain value semantics without losing polymorphism, and the purpose of this post is to describe those.\n\nunique_ptr\n===========\nThe simplest way to get closer to value semantics with pointers is definitely std::unique_ptr. An area of memory is guaranteed to be uniquely owned. \n\n{% highlight c++ linenos %}\n{% include_relative obj_ptrs_2_code/unique.cpp %}\n{% endhighlight %}\n\nHowever we haven't really achieved proper value semantics, because assigning a value doesn't work and we have to move it around explicitly.\n\nLet's look for a better solution.\n\nHand rolled value semantics with polymorphism\n=============================================\n\nLets make a type with value semantics that can take anything with a Print() method:\n\n{% highlight c++ linenos %}\n{% include_relative obj_ptrs_2_code/wrapper.cpp %}\n{% endhighlight %}\n\nThere is no such thing as a free lunch though. Polymorphism is still achieved using a pointer, but it is hidden away so that it doesn't contaminate client code.\n\nWe get value semantics. There is no inheritance in the printable objects. We can also make heterogeneous containers.\n\nboost type_erasure\n==================\n\nThe only problem is that the code is rather long and laborious, every time we have a different concept, we would have to define 3 new classes for it.\n\nLet's check out boost::type_erasure to make it short and sweet.\n\n{% highlight c++ linenos %}\n{% include_relative obj_ptrs_2_code/type_erasure.cpp %}\n{% endhighlight %}\n\nConclusion\n========\n\nNormally in C++, polymorphism brings an unwelcome friend along with it - pointers. But I've described a couple of ways to get polymorphism without pointers being in view (at least in the client code).\n\n\nReferences\n==========\n[Boost.TypeErasure](http://www.boost.org/doc/libs/1_58_0/doc/html/boost_typeerasure.html)\n\n[C++ Seasoning](http://channel9.msdn.com/Events/GoingNative/2013/Cpp-Seasoning)\n\nC++ in a nutshell - O'Reilly\n\n[Inheritance is the Base Class of Evil code sample](https://gist.github.com/berkus/7041546)\n\n[Intrusive value semantic polymorphism example.](https://gist.github.com/sean-parent/6798797)\n\n[Value semantics](https://akrzemi1.wordpress.com/2012/02/03/value-semantics/)\n\n[What is value semantics?](https://isocpp.org/wiki/faq/value-vs-ref-semantics#val-vs-ref-semantics)\n\n[Minion AnyVarRef](https://bitbucket.org/stacs_cp/minion/src/c64e2526b4b0156b9881e3ebe0fc9d55709335aa/minion/variables/AnyVarRef.h?at=default)\n",
			"file": "_posts/2015-06-10-objects-and-pointers-2 copy.markdown",
			"file_size": 4523,
			"file_write_time": 130889754760000000,
			"settings":
			{
				"buffer_size": 4523,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <iostream>\n#include <memory>\n\nclass Printer {\npublic:\n\tvirtual void Print() const { std::cout << \"Printer\" << std::endl; }\t\n};\n\nclass ConcretePrinter : public Printer {\npublic:\n\tvirtual void Print() const { std::cout << \"ConcretePrinter\" << std::endl; }\t\t\n};\n\nint main()\n{\n\tstd::unique_ptr<ConcretePrinter> cp(std::make_unique<ConcretePrinter>());\n\tcp->Print(); //prints: ConcretePrinter\n\t\n\t//std::unique_ptr<ConcretePrinter> notACopy = cp; //doesn't work\n\t\n\tstd::unique_ptr<ConcretePrinter> notACopy2 = std::move(cp);\n\tnotACopy2->Print(); //prints: ConcretePrinter\n\t\n\tcp->Print(); //dangerous, cp isn't there any more\n}\n",
			"file": "_posts/obj_ptrs_2_code/unique.hpp",
			"file_size": 630,
			"file_write_time": 130889754760000000,
			"settings":
			{
				"buffer_size": 630,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/neilmoore67/Work/scala-cource/doodle-develop/README.md",
			"settings":
			{
				"buffer_size": 2350,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Gemfile",
			"settings":
			{
				"buffer_size": 92,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_site/personal/2015/03/16/wedding-honeymoon.html",
			"settings":
			{
				"buffer_size": 16095,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feed.xml",
			"settings":
			{
				"buffer_size": 1410,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-10-04-moving-to-industry.markdown",
			"settings":
			{
				"buffer_size": 23012,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---\nlayout: post\ndate:   2015-11-13 15:22:16\ntitle: \"Efficiency\"\ncategories: talks\n---\n\nEssay to get my thoughts together for a short talk to Graham Kirby's [CS3051 Software Engineering class](https://info.cs.st-andrews.ac.uk/student-handbook/modules/CS3051.html).\n\n---\n\n<!-- \nOutline:\n\n- why to be efficient\n- - save time and memory\n- - save energy (important for mobile)\n\n- point out that efficiency and other attributes are often not in conflict, but I'm going to talk about trade offs when they are\n\n- What is efficiency?\n- - memory, disk, network, CPU, liveness, threads, processes, etc.\n\nExample code for each and every one\n\n- keep code simple (MAINTAINABILITY)\n- - compare a couple of things, e.g.\n- - - write XML to disk\n- - - binary dump to disk\n- - or\n- - - compare ruby on rails with writing a website in rails?\n- - or\n- - - stuffing bits and pieces into structs\n- - - using clean data structures\n- - simple code has genuine value\n- - - it is easier to maintain, this is the big one\n- - - - code has to be capable of being changed\n- - - quicker to write\n- - - less likely to harbour bugs\n\n- premature optimisation (SPEED)\n- - pareto principal\n- - actually use a profiler live?\n- - when to stop? there is such a thing as fast enough\n- - http://programmers.stackexchange.com/questions/89620/clean-readable-code-vs-fast-hard-to-read-code-when-to-cross-the-line\n- - opinion: It's probably easier to optimise a clean program written without excessive attention to performance, than to optimise a program written for speed from the outset. But it's definitely easier to maintain the clean program.\n- - http://c2.com/cgi/wiki?PrematureOptimization\n\n- choice of language (MAINTAINABILITY + VELOCITY)\n- - big area\n- - maintainable languages are not always slow, but they tend to be\n- - why: to get speed you need to take control of more elements, e.g. types, optimising simple concepts, function call method\n- - not always, but often, give counterexamples:\n- - - e.g. letting the compiler do its stuff\n- - - e.g. being more abstracted lets the compiler/runtime optimise\n- - - e.g. modern languages can recover the losses that come from vagueness\n- - - e.g. domain specific languages like constraints\n\n- safety (SAFETY)\n- - runtime checking to make sure it's not being used as an attack vector\n\n- maximise short term progress, fix later\n- - we need to complete projects\n- - - prototypes, optimise for quick feedback\n- - we can fix it up later once we know it's the right thing\n- - usually we don't get an opportunity to rewrite so it's a good idea to make the code nice but slow\n\n- in a pinch to speed development (VELOCITY)\n- - this is the worst kind because we are just trying to complete the functionality without paying attention to speed, it could turn out to be a mistake\n\n- not work efficient (WORK EFFICIENCY)\n- - e.g. bittorrent, can't find any reference to this\n- - https://en.wikipedia.org/wiki/Algorithmic_efficiency\n- - is precaching an example of this? We may get data that is never needed. That is optimising time at the expense of network.\n\n- small problem (VELOCITY)\n- - If the problem is and will remain small then it doesn't matter how it's written.\n- - if the constant factor is small then worse algorithms might be better e.g. map vs vector\n- - - e.g. memory locality, etc.\n- - - show storage hierarchy charts\n- - example: talk about the Sabre thing of writing to disk vs. sending over named pipe\n\nconclusion:\n- - for me writing efficient programs is fun, I like thinking up efficient algorithms, using profilers and using powerful languages like C++\n- - but there are many good reasons not to take it too far\n- - please leave a comment if you can think of anything else\n-->\n\nThis is about when you might want software to be efficient and when you might not. The main reasons to be efficient are to make software run really well on peoples' computers: not to be slow, use up too much memory, too much bandwidth or too much power. The main reasons for deciding to accept a level of inefficiency fall under the headings \"maintainability\", \"velocity\", \"problem size\" and \"safety\". By maintainbility I mean creating software that is simple for teams to fix bugs, add features, port to new platforms, adapt to new APIs, etc. Velocity is a measure of how quickly work is being done on a software project. Safety is when users can run programs without worrying that they will behave really badly, e.g. crash or be attack vectors.\n\nI'm going to go into efficiency under all of these headings.\n\n# What do I mean by efficiency?\n\nBasically using as few of the following computer resources as we can:\n\n- processor\n- memory\n- cache\n- network\n- power\n- disk space\n- etc.\n\n# Why be efficient?\n\nI hope this question is completely unnecessary to ask any software engineer. There is probably a generational difference around efficiency. In the olden days, computers were severely resource constrained for what now seem little very simple problems. Not a single byte of memory could be wasted. 14.4k modems were just astonishingly slow. People had to struggle against resource limitations just to be able to make a program run at all.\n\nThese days we don't hit up against those types of hard limits on resources nearly so often. It does happen, but it's not something that I absolutely need to keep in mind all the time.\n\nFor certain classes of problems that are close to the limits of practical computers, performance considerations are in the forefront of peoples' mind. For example, imaging, videos, games, AI, big data, and so on. I worked on a project like this in St Andrews, the Minion constraint solver, which was written from the outset to be blazing fast. I frequently thought about the program's use of CPU, memory, data locality and so on in daily engineering work.\n\nNormally in my work for Adobe, efficiency is not strictly necessary to make the program work in the most basic way. I work on a file sync program in some ways comparable to Dropbox. In normal day to day use syncing fewer than 10000 files and with edits being made fairly slowly the computer has enough resources that naive algorithms will solve the problem after a fashion.\n\nOne reason why we still need to care about efficiency is that we want the program to work brilliantly and not merely limp along. It's not OK to use the CPU so much that the fan turns on! It's not OK to have memory leaks. It's not OK to cause momentary hangs while somebody's trying to work. We would be embarrassed by our work if they were excessively wasteful.\n\nAnother reason is that it's an intellectual challenge to do as much as possible with as little as possible. \n\nFinally it's a waste of the user's money for a program to be inefficient. That's not a direct cost to the person writing the software, but it's still our responsibility. I worked out that the software I write is running as a daemon on so many computers worldwide that it's probably [using the energy](https://blog.mozilla.org/nnethercote/2015/08/26/what-does-the-os-x-activity-monitors-energy-impact-actually-measure/) of a [fairly sturdy generator](https://en.wikipedia.org/wiki/Power_station#Typical_power_output) (definitely in the megawatt range), so I can make a small contribution to stopping climate change by optimising my code!\n\n# Is there any conflict between efficiency and other things?\n\nI will argue that sometimes efficiency gets in the way of some of our other aims in the software development process. Usually it doesn't and we can get sufficient efficiency with no trade off. However getting to 100% efficiency is always to the detriment of every other measure of quality. Writing code in assembly language by hand can always dominate other ways to write software, but it takes forever, is unmaintainable and completely insecure.\n\nBut as I've said above there is always a serious tension. We can save users' time and money by making our software more efficient.\n\nHow do we decide where to draw the line?\n\nI'm going to go through a few places where I think there is an defensible argument for letting efficiency drop a little bit, but never at the expense of software working poorly. \n\n# Code maintainability\n\nBy maintainability I mean features of the code that make it easier to change later, such as loose coupling, simplicity, good naming, cohesion and so on.\n\nOften there is a good argument for taking maintainability over efficiency. Maintainable software tends to contain fewer bugs, and when bugs do creep in they are easier to fix. It is quicker to change and quicker to find and fix bugs. These properties allow you to deliver real benefits to users that they will probably value more than a little bit of performance. \n\nIf there is one thing that I didn't fully appreciate from doing my degree in Computer Science, it is definitely that maintainability of code is a very important issue in day to day software engineering. I spent probably 90% of my time at University learning algorithms and techniques that I don't use on a day to day basis. However, I got just a handful of lectures on structuring code for simplicity, plus a few practical projects that were supposed to give us focussed practice by having another person make changes to our code. However the message didn't really sink in until I was working on the same code for months and years, having to change what it does very frequently. You are constantly having to think what changes might be made in the future and how best to write something so that another engineer can understand it quickly just by reading the code.\n\nHow do we decide when to reduce maintainability in favour of efficiency? I would suggest *never* to reduce maintainability in favour of performance, unless the project cannot be achieved without blistering speed. Once the decision has been made that things need to be speeded up, think how to be more efficient without losing too much maintainability.\n\nThis is a ludicrously bad program that probably uses [very little extra memory](http://www.catb.org/esr/structure-packing/) to get the job done:\n\n{% highlight c++ linenos %}\n#define READABLE    (1)\n#define WRITABLE    (2)\n#define CUSTOM_ICON (4)\n\nstruct MyData {\n  //bitfield\n  char savedToDisk:1; //is this saved to disk?\n  char settings:3;    //bit mask of settings\n  char* name;         //On Windows this UTF-16, on Mac it's UTF-8.\n};\n\nint myFunc() {\n  MyData data;\n  data.savedToDisk = 0;\n  data.settings = READABLE | WRITABLE;\n#ifdef _MSC_DEV\n  data.name = malloc(10);\n  *data.name = L\"neil\";\n#else\n  data.name = malloc(5);\n  *data.name = \"neil\";\n#endif\n}\n\nvoid printReadable(MyData* data) {\n  if(data->settings & READABLE != 0) {\n    printf(\"it's readable\\n\");\n  } \n}\n{% endhighlight %}\n\nbut there is almost never a scenario where you wouldn't be better off with this code (and it can be still improved):\n\n{% highlight c++ linenos %}\n#include <string>\n#include <ostream>\n\nclass MyData {\npublic:\n  MyData() \n    : savedToDisk(false)\n    , isReadable(false)\n    , isWritable(false)\n    , hasCustomIcon(false)\n  {}\n\n  bool savedToDisk;\n  bool isReadable;\n  bool isWritable;\n  bool hasCustomIcon;\n  std::string name;   //UTF-8\n};\n\nint myFunc() {\n  MyData data;\n  data.savedToDisk = true;\n  data.isReadable = true;\n  data.isWritable = true;\n  data.name = \"neil\";\n}\n\nvoid printReadable(MyData data) {\n  if(data.isReadable) {\n    std::cout << \"it's readable\" << std::endl;\n  } \n}\n{% endhighlight %}\n\n# Premature optimisation\n\nThe great thing about choosing maintainability over efficiency is that usually it doesn't matter anyway. You can optimise your way out of problems with a relatively small number of changes. I am going to use again perhaps the most overused quote in Computer Science:\n\n> Programmers waste enormous amounts of time thinking about, or worrying about, the speed of noncritical parts of their programs, and these attempts at efficiency actually have a strong negative impact when debugging and maintenance are considered. We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%. -- Donald Knuth\n\nWhat he is getting at is that programs actually tend to spend a lot of their runtime in a relatively small number of code paths. Even with a lot of experience it can be hard to guess in advance what these will be. Imagine we optimise the start up code for our program. We could get it to run in 50 microseconds, when it might take 500 microseconds if we didn't bother. That code will only run once, nobody will notice it. Yet we spent our valuable time making it faster and it will probably suck up more time later in maintenance.\n\nThere is a principle called the [Pareto Principle](https://en.wikipedia.org/wiki/Pareto_principle) that says 80% of the effects can sometimes be had for 20% of the effort. This definitely applies to software optimisation in the sense that we can generally optimise a handful of pieces of code (probably less 20% of all code) and reduce our program's runtime by a large amount (80% is not unrealistic).\n\nHence the best way to engineer a program is write for maintainability, then optimise according to the Pareto Principle. \n\nThe tool for doing this is a profiler and it's something every software engineer needs learn to use properly and use often. Profilers can find code that uses a CPU, memory, energy and much more. Examples of such tools include [Instruments in XCode](https://developer.apple.com/library/watchos/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/index.html), [valgrind](http://valgrind.org) and they are available for most languages and platforms.\n\nIt's often hard to know when to stop. But if you removed the obvious and significant bottlenecks, and the program is subjectively good enough, then you can stop and the job is done.\n\nAs an inexperienced programmer (and I include myself in that category) you will probably end up with a more efficient program by writing it for maintainability without any interest in efficiency, than by writing for efficiency from the start. This definitely does not apply to everyone. [Chris Jefferson](https://caj.host.cs.st-andrews.ac.uk) wrote [minion](http://constraintmodelling.org/minion/) for speed, and that is exactly what he got, but that is because he is an expert. But for normal programmers working on normal problems if code is well structured then performance optimisations are easier because changes in general are easier. Conversely already optimised code is hard to change and the correct way to make further performance optimisations may be hard to fathom.\n\n# Choice of implementation language\n\nIt's well known that using particular languages helps to improve development speed, maintainability, efficiency and various other attributes we need to choose between. New and better languages mean we need to make fewer trade offs, for example maybe C++ does better than [whitespace](http://compsoc.dur.ac.uk/whitespace/tutorial.html) on all those axes[^lang-note]. \n\n[^lang-note]: This is a really weak example, it's actually hard to think of any language that everybody would agree is strictly better than any other.\n\nMaintainable languages tend to\n\n- be simple (e.g. go),\n- provide frameworks and syntaxes to make common tasks simple (e.g. Ruby on Rails for web development), \n- have simple progamming language specifications (e.g. C),\n- have large and well designed libraries (e.g. Java),\n- and so on.\n\nSome languages that people find to be highly maintainable are not as fast as they could be. For Ruby, which you can use to create very simple and short programs, the cost is that the language is interpreted and optimisations involving types are not as advanced as a statically typed language like C++. The language has a lot of powerful abstractions which may or may not be fast. Some of the reasons why maintainable languages are slower are intrinsic, for example abstraction costs a little in runtime because of the indirection involved.  Conversely super fast languages like C++ require you to take control of many aspects of programming like memory management, decisions about how functions are resolved and so on. There are many choices and you can take less for granted. These all make a program a little more brittle than when the language designers have chosen features for you.\n\nTypes are interesting because depending on your viewpoint they add both maintainability and efficiency. Maintainability because you can be more sure that changes you make still make semantic sense if the compiler is checking types. Efficiency because static type checking avoids runtime overhead and allows more optimisation by the compiler. But many people would disagree that statically typed programs are more maintainable, because they are also more verbose. This is where modern languages like Haskell, go, rust and C++11 save the day by providing type inference, letting you leave out explicit types in many cases, but still get static checking.\n\nOther times we have the exact opposite problem, that using a very maintainable language buys you great performance characteristics. Domain specific languages like regular expressions, logic programs, constraint programs and so on are likely to get a far better result than you could achieve writing an algorithm from scratch in a conventional type of language, as well as being much clearer to read and maintain.\n\nThis is a huge area and I've only touched on a few issues briefly. However it's clear that choice of language is important and that you have to choose a language that you can use to meet your efficiency requirements. For performance critical code it may be necessary to pick an efficient language, but for most problems you have a lot of choices of language that will be fast enough and you can freely choose to optimise for other goals besides efficiency.\n\n# Safety\n\nCustomers care about safety in our programs. They shouldn't crash; they shouldn't allow cross site scripting or code injection; or buffer overflow attacks. Providing safety often costs efficiency, but is not a trade off. Programs just have to be safe. You just have to take the efficiency hit of using encryption, checking parameters carefully, not overfilling buffers, etc. Using a modern safe and managed language with a runtime makes this easier but often costs in efficiency (rust is notable counterexample to this).\n\n# Maximising short time progress\n\nNow for a bit of a change of direction. Sometimes we need to write code fast, rather than write fast code. You've got to meet deadlines and compete to get something finished fast. \n\nThe agile mindset is very widespread in the computer industry, where getting something in front of stakeholders quickly is considered to be really important. This is not supposed to mean a reduction is quality, just a reduction in scope. But sometimes the pressure to work fast comes at the expense of software quality. In this case I would personally priorise various aims over efficiency. Correctness, maintainability, safety are all much more important than efficiency when deadlines loom. Hopefully performance problems will be uncovered by informal testing. The key thing is that performance needs to be *good enough* for most people.\n\nPrototypes are another problem. They are code that is designed to demonstrate the functionality rather than to become the product. Usually prototypes will be slow because we're racing to get the code done without worrying too much about anything but functionality. In my experience there is no such thing as a good prototype, if it looks good then it is by definition not a prototype because somebody will try to ship it to customers. The same reasoning w.r.t. efficiency applies though, make the code as good as possible because performance can usually be fixed later.\n\nFor desktop software that runs on users' machines it is more important to get performance right first time, because it costs users time and money to put up with the problem. Then once it's discovered and fixed they have to waste time installing an update to fix the problem. For server side code it costs the engineering organisation money, so it's not so crucial and also easier to fix later with an update. \n\n# Work efficiency\n\nWork efficiency basically means doing within a constant factor of the same amount of work as the fastest possible algorithm. This is not exactly inefficiency, it's more saying that you're not wasting effort compared to the fastest algorithm available. So why would we ever choose to do more work than we need to? One good reason is for usability. Let me give a few examples:\n\n**Precaching**\n\nPrecaching is when we download data before the user needs it. We are optimise the user's real time ahead of idle CPU, disk or network bandwidth. We do it because we perceive that one of resources we want to be efficient with is more important than the others. For example Adobe Illustrator can be seen loading various plugins at start up (including Adobe Idea File Format which I helped write), because users would prefer to put up with a little slowness in getting started, rather than have to wait later on once they're busy working. \n\n**Redundancy**\n\nI can't find any reference to this written down, but some towards the end of downloads some Bittorrent clients used to download chunks multiple times. Say that you're down to the last 2 chunks but you have enough bandwidth to fetch from 4 peers. You can request each chunk from two different peers then if one of them happens to be faster than the others you finish sooner. \n\n# Small problems\n\nThe next reason to give up efficiency is a bit of a trick. The advice is simply not to assume that because a particular approach looks best on paper means that it's best in practice, that is it is perfectly fine to write something with theoretically bad worst case or average case performance, if your problem sizes are always small.\n\nThe most basic example of this is not to worry about constant size problems, e.g. what is the time complexity of a call to colourFrequency() in the following code?\n\n{% highlight c++ linenos %}\nenum class Colour {\n  Red,\n  Blue,\n  Green,\n  Magenta,\n  Cyan,\n  Yellow,\n  Ochre\n};\n\nunsigned colourFrequency(Colour c) {\n  std::vector<<std::pair<Colour, unsigned>> frequency = \n    { {Red, 1}, \n      {Blue, 2}, \n      {Green, 3}, \n      {Magenta, 4}, \n      {Cyan, 5}, \n      {Yellow, 6}, \n      {Ochre, 7} \n    };\n  for(size_t i = 0; i < frequency.size(); i++) {\n    if(frequency[i].first == c) {\n      return frequency[i].second;\n    }\n  }\n  return 0;\n}\n{% endhighlight %}\n\nHopefully at least somebody who reads this will think it's O(n) or linear time. But it's actually constant time because there are a finite number of colours. This is also true of 32 bit integers, there are a constant number of them, so searching a list of integers with no repeats is also constant time, but usually we don't say it is. \n\nThe point is simply that small constant sized problems have to be treated apart from variable size large problems.\n\nThe other point I have to make about time complexity is to do with constant factors. An algorithm that runs in exactly $$100n^2 + n$$ steps is actually $$O(n^2)$$, whereas an algorithm that runs in $$2n^\\sqrt{5} + 53$$ is $$O(n^\\sqrt{5}) \\approx O(n^{2.24})$$. The former is a bit better in terms of asymptotic complexity. But the value of n for which the $$O(n^2)$$ algorithm is faster is something like $$1.6 * 10^{7} = 16,000,000$$ which is quite a big problem size. [^calc]\n\nIf we compare $$100n^2 + n$$ to $$2n^2 log(n) + 53$$ then the algorithm with the small big O won't be faster in practice until the input size is $$5 * 10^{21}$$ which is an absolutely enormous number, around the number of [grains of sand on earth](https://en.wikipedia.org/wiki/Orders_of_magnitude_(numbers)#1021) or the number of transistors in the world.\n\n[^calc]: Calculate function intersections using [Wolfram Alpha](http://www.wolframalpha.com/widgets/gallery/view.jsp?id=7b9037eb9f5f7493a73df97a38bc58e6)\n\nThis is not purely a theoretical issue. Although balanced binary trees might appear on paper to be brilliantly efficient, they are often going to be beaten by an array, even when the array is theoretically $$O(n)$$ to do an operation where the binary tree is $$O(log(n))$$. That is just because an array tends to keep data together in memory, whereas a binary tree is likely to spread it around. Memory is fast isn't it? Surely that's not a problem? Well the problem with spreading data around is basically down to caching. If we have to jump around in memory the chances of a cache hit are somewhat lower, and it takes maybe 200 times longer to get data from memory than from the L1 cache. Note that this 200 factor is larger than the constant factor of 100 that I used above, so it might not be a crazy constant factor after all!\n\nPeter Norvig has given various [constant factors to do operations](http://norvig.com/21-days.html#answers) and it's worth keeping these in mind when programming for efficiency, because they frequently overwhelm theoretical big O efficiency measures.\n\nI have a nice example of this type of reasoning from my job recently. A colleague found that a particular IPC message was very slow to send, maybe 3 seconds for a reasonable problem size. This is too much for customers to put up with. He wrote an alternative version that wrote the data to disk, and that sped things up quite nicely. But this bothered me deeply, because I know from Peter Norvig's table that writing to disk should be millions of nanoseconds, whereas writing to memory should be hundreds. So I just felt there must be something else going on. Eventually we figured out that the version using only IPC was writing many lines of debug output, whereas the disk version didn't. The debug output is being written to disk and that's what makes the code slow. Removing these disk operations leaving only memory operations made the code much faster. So it's worth having a feel for what should be fast and slow, and then check later with a profiler.\n\n# Conclusion\n\nI hope this essay has not been too contrary. I think efficiency is an incredibly important aim to have in programming, partly so that greybeard hackers won't shake their head in despair at the current generation of wasteful programmers, but also because it's what users want and need. I love working with efficient languages that let me control the computer carefully, like C++. I also love figuring out efficient algorithms for doing things. That's perhaps why these rules of thumb about when efficiency is not so central are good for me too keep in mind, to combat my tendency towards simple minded optimisation. \n\n",
			"file": "_drafts/2015-11-13-efficiency.markdown",
			"file_size": 26725,
			"file_write_time": 130916251010000000,
			"settings":
			{
				"buffer_size": 26725,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---\nlayout: post\ndate:   2016-02-06 15:22:16\ntitle: \"Memoization in C++\"\ncategories: c++\n---\n\n<!-- \n\nhttps://pimiddy.wordpress.com/2012/04/20/pure-functions-in-cc/\nhttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3744.pdf\nhttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4296.pdf\nhttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3597.html\n\nWhat is memoization\n- first example code\nWhy does an impure function not work well there?\nWhat is a pure function\nHow to approximate purity in C++\nWhat are all the ways that a function can be impure in C++\n- solution using object with no data in it\n- want to avoid compiling code that may be wrong\n- solution using constexpr with a dummy function (didn't work)\n- SFINAE solutions (not sure if this worked)\njust assert that the function is stateless\n\n-->\n\nMemoization of a function F is the creation of a new function G that produces exactly the same results as F except by lookup instead of repeated computation. The first time G is used for a particular argument the result is computed normally and stored; the second and subsequent times it is not computed but returned from storage.\n\nFor a function that's very quick to compute, this may result in a decrease in performance. For expensive computations it may result in a speedup. I'm not going to talk about how to decide when to use memoization, this is purely a nuts and bolts discussion of how to memoize a function in C++. \n\n# Basic memoization\n\nHere is how to write a very basic generic memoization routine in C++14:\n\n{% highlight c++ linenos %}\n{% include_relative memoization_code/basic.cpp %}\n{% endhighlight %}\n\nLine 6 shows a function that we will try to memoize, called funnyThing.\n\nAt line 13 the MemoizeG class begins. MemoizeG is short for \"memoize generic\". Its members are a function object called _f and a table of memoized values called _table. _f is a copy of the function called into the constructor. _table is a vector where each entry is a tuple consisting of arguments plus a result. E.g. when MemoizeG(funnyThing) is applied to (1, 1.0) the result is 3.141. The value stored in the table will be (1, 1.0, 3.141). No attempt has been made to store the data efficiently, it may be quicker to sort the values or store them in something other than a vector.\n\nThe operator() function of MemoizeG at line 21 implements the function application operator of the class. It first attempts to find the value already in the table, in which case it is returned. Failing that the value is computed and stored.\n\nThis class uses some fairly new C++ features. The \"using\" keyword is new and replaces code like\n\n{% highlight c++ linenos %}\ntypedef ResultType<ArgTypes...)> StoredResultType;\n{% endhighlight %}\n\nThe MemoizeG template is variadic, meaning that it can take a variable number of template parameters. Unpredictable numbers of template arguments are not individually named, i.e. ResultType is named, but ArgTypes is a name for several parameters. ArgTypes can be processed using new [parameter pack](http://en.cppreference.com/w/cpp/language/parameter_pack) syntax for unpacking the parameters. E.g. at line 17 a new tuple type of composed of ResultType plus each type in ArgTypes is built using the syntax ArgTypes... which expands to ArgType[0], ArgType[1], ..., ArgType[n-1].\n\nLine 47 shows an example of the class being instantiated and used. The syntax is a little verbose, unfortunately we had to type out the function signature in the definition. To get around that issue I made a factory method called MakeMemoizeG at line 41. It exploits the fact that function templates types can be inferred and uses that fact to allow functions to be passed in without restating the types.\n\n# Pure functions\n\nThe danger with using MemoizeG is that there is nothing to stop you passing in a function which is [impure](https://en.wikipedia.org/wiki/Pure_function), meaning that it might get different values if it's computed a second time. Functions may be impure because they contain (directly or indirectly by calling other functions)\n\n- accesses to state like static variables and class members;\n- accesses to disk, random numbers and other IO;\n- undefined behaviour like reading uninitialised memory, \n- etc.\n\nWhen a function is impure MemoizeG will not bother to execute it a second time on the same inputs, even though it may have side-effects that we want. Hence we should not sure MemoizeG on impure functions.\n\nI started thinking about how we could begin to verify that a function is pure before allowing MemoizeG to use it. There are a few existing pages on this topic [here](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3744.pdf) and [here](https://pimiddy.wordpress.com/2012/04/20/pure-functions-in-cc/).\n\n# Constexpr\n\nTo recap a constexpr is a compile time expression. It can be computed by the compiler.\n\nThe restrictions on constexprs seem to make them pure expressions, in the sense that if the compiler computes them repeatedly then they must be same every time. That is based on my reading of section 5.20 of the [C++ standard](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4296.pdf) and I might be wrong.\n\nA constexpr function is a function that can be used in a constexpr. Constexpr functions must satisfy [constraints](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3597.html) including the fact that they contain only a single return statement (in C++11, in C++14 it is more complicated).\n\nI had incorrectly surmised that a constexpr function must follow the rules on constexprs for all possible inputs, which would make them pure functions. However I eventually figured out that declaring a function as constexpr only means that it produces a constexpr result when it is applied to constexpr arguments. I had hoped that it would be verified as constexpr for all possible inputs, which would prove it is pure.\n\nHoweever even if it doesn't verify constexpr for every possible input, the compiler will prevent you from using static variables and doing some other things that are obviously impure. For example the following function compiles because b = 0 is constexpr, which is not a good thing for our purposes:\n\n{% highlight c++ linenos %}\nconstexpr int f(bool b)\n{ return b ? throw 0 : 0; }\n{% endhighlight %}\n\nHowever the next one fails to compile because it uses a static variable:\n\n{% highlight c++ linenos %}\nstatic int a;\nconstexpr int usesA(int x) {\n    return x + a;\n}\n{% endhighlight %}\n\nHence I first tried to enforce that a function is constexpr, because it's pretty close to the concept of purity.\n\n## Typecheck constexpr\n\nI put quite a lot of effort into writing a variant of MemoizeG to enforce that the function provided is constexpr. My basic approach was to try creating a constexpr const member variable and then to invoke the function on some arguments, but that didn't really work out for a variety of reasons:\n\n* A function can have any number of arguments of any type. I didn't find a way to make an expression to call the provided function with arbitrary values.\n\n* As stated above, just because a function is constexpr for one set of inputs doesn't mean that's true of all inputs.\n\nHere is a short example of 4 failed attempts at adding a member that would fail to compile when Functor wasn't constexpr:\n\n{% highlight c++ linenos %}\n//This compiles just fine even when Functor::operator() is not constexpr, because the only requirement for\n//constexpr is that there exists at least one parameter choice that is a constexpr. It's not necessary that\n//every single combination of parameters produces a constexpr.\nconstexpr ResultType checkFunction(ArgTypes... args) {\n    return Functor()(args...);\n}\n\n//This doesn't work because apply_from_tuple is not constexpr.\nstatic const ResultType constExprChecked = apply_from_tuple(Functor(), std::tuple<ArgTypes...>());\n\n//This doesn't work because the function is not necessarily a unary function on a number\nstatic const ResultType constExprChecked = Functor()(1);\n\n//This doesn't work because ArgTypes... doesn't create a tuple of default values. I couldn't find any\n//parameter pack expansion that would create default values for each type in the pack.\nstatic const ResultType constExprChecked = Functor()({ArgTypes...});\n\n//I gave up at this stage!\n{% endhighlight %}\n\nI might come back to the problem of compile time enforcing that a function is constexpr at some stage, but it wasn't something I was able to solve in a reasonable time on this occasion. If anybody has any ideas please leave a comment or send me a message.\n\n# Stateless object\n\nSince I wasn't able to enforce constexpr. I looked for another solution.\n\n[An Adobe colleague](http://sean-parent.github.io) suggested to me that a function is relatively safe to memoize when it is either\n\n- a pointer to a function, or\n- a stateless object\n\nThis constraint doesn't completely prevent impurity because such a function can still do IO and access static data, but it does help a bit because it removes the chance to use non-static variables.\n\n## Typecheck stateless\n\nI had more luck implementing this idea. The idea exploits the [empty base class optimisation (EBCO)](http://en.cppreference.com/w/cpp/language/ebo) (thanks to [Sean Parent](http://sean-parent.github.io) for telling me about this). The EBCO means that when a base class is empty, it does not occupy any memory in a derived class.\n\n{% highlight c++ linenos %}\ntemplate<typename Functor, typename ResultType, typename... ArgTypes>\nclass MemoizeStateless<Functor, ResultType(ArgTypes...)>\n{\nprivate:\n    using StoredResultType = std::pair<std::tuple<ArgTypes...>, ResultType>;\n    \n    constexpr ResultType checkFunction(ArgTypes... args) {\n        return Functor()(args...);\n    }\n    \n    class TestSubclass : Functor {\n        int x;\n    };\n    \n    static_assert(sizeof(TestSubclass) == sizeof(int),\n                  \"Functor appears not to be stateless, is it really memoizable?\");\n\n    ...\n{% endhighlight %}\n\nIf Functor has state then the static assertion at line 15 will fail because TestSubClass will have an int plus other state in it. If the Functor is stateless then the EBCO will apply, and TestSubclass will only occupy the memory of an int. Hence this class will only compile when the Functor argument is stateless.\n\nPretty neat!\n\n# Conclusion\n\nIt was pretty straightforward to do a generic memoization wrapper. However I didn't really manage to enforce that only pure functions were put into the function. I couldn't find a way to enforce that a function is constexpr, and moreover constexpr is not exactly the same thing as pure. I managed to enforce that the function was stateless, but I don't consider that to be a perfect solution either. If anybody has any good ideas how to do this please let me know.\n",
			"file": "_drafts/2016-02-06-memoization.markdown",
			"file_size": 10802,
			"file_write_time": 130992516680000000,
			"settings":
			{
				"buffer_size": 10802,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\tffa edfe 0700 0001 0300 0080 0200 0000\n1000 0000 7006 0000 8580 2100 0000 0000\n1900 0000 4800 0000 5f5f 5041 4745 5a45\n524f 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0100 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 1900 0000 c802 0000\n5f5f 5445 5854 0000 0000 0000 0000 0000\n0000 0000 0100 0000 0050 0000 0000 0000\n0000 0000 0000 0000 0050 0000 0000 0000\n0700 0000 0500 0000 0800 0000 0000 0000\n5f5f 7465 7874 0000 0000 0000 0000 0000\n5f5f 5445 5854 0000 0000 0000 0000 0000\n8008 0000 0100 0000 3b41 0000 0000 0000\n8008 0000 0400 0000 0000 0000 0000 0000\n0004 0080 0000 0000 0000 0000 0000 0000\n5f5f 7374 7562 7300 0000 0000 0000 0000\n5f5f 5445 5854 0000 0000 0000 0000 0000\nbc49 0000 0100 0000 9801 0000 0000 0000\nbc49 0000 0100 0000 0000 0000 0000 0000\n0804 0080 0000 0000 0600 0000 0000 0000\n5f5f 7374 7562 5f68 656c 7065 7200 0000\n5f5f 5445 5854 0000 0000 0000 0000 0000\n544b 0000 0100 0000 0001 0000 0000 0000\n544b 0000 0200 0000 0000 0000 0000 0000\n0004 0080 0000 0000 0000 0000 0000 0000\n5f5f 636f 6e73 7400 0000 0000 0000 0000\n5f5f 5445 5854 0000 0000 0000 0000 0000\n604c 0000 0100 0000 ac00 0000 0000 0000\n604c 0000 0400 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n5f5f 6763 635f 6578 6365 7074 5f74 6162\n5f5f 5445 5854 0000 0000 0000 0000 0000\n0c4d 0000 0100 0000 a001 0000 0000 0000\n0c4d 0000 0200 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n5f5f 6373 7472 696e 6700 0000 0000 0000\n5f5f 5445 5854 0000 0000 0000 0000 0000\nac4e 0000 0100 0000 2000 0000 0000 0000\nac4e 0000 0000 0000 0000 0000 0000 0000\n0200 0000 0000 0000 0000 0000 0000 0000\n5f5f 756e 7769 6e64 5f69 6e66 6f00 0000\n5f5f 5445 5854 0000 0000 0000 0000 0000\ncc4e 0000 0100 0000 f000 0000 0000 0000\ncc4e 0000 0200 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n5f5f 6568 5f66 7261 6d65 0000 0000 0000\n5f5f 5445 5854 0000 0000 0000 0000 0000\nc04f 0000 0100 0000 3800 0000 0000 0000\nc04f 0000 0300 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n1900 0000 8801 0000 5f5f 4441 5441 0000\n0000 0000 0000 0000 0050 0000 0100 0000\n0010 0000 0000 0000 0050 0000 0000 0000\n0010 0000 0000 0000 0700 0000 0300 0000\n0400 0000 0000 0000 5f5f 6e6c 5f73 796d\n626f 6c5f 7074 7200 5f5f 4441 5441 0000\n0000 0000 0000 0000 0050 0000 0100 0000\n1000 0000 0000 0000 0050 0000 0300 0000\n0000 0000 0000 0000 0600 0000 4400 0000\n0000 0000 0000 0000 5f5f 676f 7400 0000\n0000 0000 0000 0000 5f5f 4441 5441 0000\n0000 0000 0000 0000 1050 0000 0100 0000\n5800 0000 0000 0000 1050 0000 0300 0000\n0000 0000 0000 0000 0600 0000 4600 0000\n0000 0000 0000 0000 5f5f 6c61 5f73 796d\n626f 6c5f 7074 7200 5f5f 4441 5441 0000\n0000 0000 0000 0000 6850 0000 0100 0000\n2002 0000 0000 0000 6850 0000 0300 0000\n0000 0000 0000 0000 0700 0000 5100 0000\n0000 0000 0000 0000 5f5f 6461 7461 0000\n0000 0000 0000 0000 5f5f 4441 5441 0000\n0000 0000 0000 0000 9052 0000 0100 0000\n5001 0000 0000 0000 9052 0000 0400 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 1900 0000 4800 0000\n5f5f 4c49 4e4b 4544 4954 0000 0000 0000\n0060 0000 0100 0000 0030 0000 0000 0000\n0060 0000 0000 0000 6429 0000 0000 0000\n0700 0000 0100 0000 0000 0000 0000 0000\n2200 0080 3000 0000 0060 0000 2000 0000\n2060 0000 0802 0000 2862 0000 e001 0000\n0864 0000 f803 0000 0068 0000 9001 0000\n0200 0000 1800 0000 e869 0000 7700 0000\nac73 0000 b815 0000 0b00 0000 5000 0000\n0000 0000 4300 0000 4300 0000 0d00 0000\n5000 0000 2700 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n5871 0000 9500 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0e00 0000 2000 0000\n0c00 0000 2f75 7372 2f6c 6962 2f64 796c\n6400 0000 0000 0000 1b00 0000 1800 0000\ne0bd e00c cb33 3264 a811 baf5 9361 0e0f\n2400 0000 1000 0000 000b 0a00 000b 0a00\n2a00 0000 1000 0000 0000 0000 0000 0000\n2800 0080 1800 0000 b008 0000 0000 0000\n0000 0000 0000 0000 0c00 0000 3000 0000\n1800 0000 0200 0000 0001 7800 0000 0100\n2f75 7372 2f6c 6962 2f6c 6962 632b 2b2e\n312e 6479 6c69 6200 0c00 0000 3800 0000\n1800 0000 0200 0000 010a ca04 0000 0100\n2f75 7372 2f6c 6962 2f6c 6962 5379 7374\n656d 2e42 2e64 796c 6962 0000 0000 0000\n2600 0000 1000 0000 9069 0000 5800 0000\n2900 0000 1000 0000 e869 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n5548 89e5 f20f 100d d443 0000 897d fcf2\n0f11 45f0 f20f 2a45 fcf2 0f59 c8f2 0f59\n4df0 0f28 c15d c366 0f1f 8400 0000 0000\n5548 89e5 4881 ec30 0100 0048 8b05 9e47\n0000 488b 0048 8945 f848 8d35 b0ff ffff\n31c9 89ca 488d 8570 ffff ff48 89c7 4889\n8508 ffff ffe8 a441 0000 488d 7da0 488b\nb508 ffff ffe8 c840 0000 e900 0000 0048\n8dbd 70ff ffff e895 4100 0048 8d7d a0be\n0100 0000 f20f 1005 4c43 0000 e8b9 4000\n00f2 0f11 8500 ffff ffe9 0000 0000 488d\n7da0 be02 0000 00f2 0f10 0529 4300 00e8\n9640 0000 f20f 1185 f8fe ffff e900 0000\n0048 8d7d a0be 0300 0000 f20f 1005 0643\n0000 e873 4000 00f2 0f11 85f0 feff ffe9\n0000 0000 488d 7da0 be01 0000 00f2 0f10\n05e3 4200 00e8 5040 0000 f20f 1185 e8fe\nffff e900 0000 0048 8d35 e2fe ffff 488d\nbd20 ffff ffe8 1240 0000 e900 0000 0048\n8dbd 20ff ffff be01 0000 00f2 0f10 05a5\n4200 00e8 1240 0000 f20f 1185 e0fe ffff\ne900 0000 0048 8dbd 20ff ffff be01 0000\n00f2 0f10 057f 4200 00e8 ec3f 0000 f20f\n1185 d8fe ffff e900 0000 0048 8dbd 20ff\nffff e8c7 3f00 0048 8d7d a0e8 be3f 0000\n488b 3d49 4600 0048 8b3f 483b 7df8 0f85\n6f00 0000 31c0 4881 c430 0100 005d c348\n8dbd 70ff ffff 89d1 4889 8518 ffff ff89\n8d14 ffff ffe8 5640 0000 e938 0000 0089\nd148 8985 18ff ffff 898d 14ff ffff e91b\n0000 0048 8dbd 20ff ffff 89d1 4889 8518\nffff ff89 8d14 ffff ffe8 503f 0000 488d\n7da0 e847 3f00 0048 8bbd 18ff ffff e8a3\n4000 00e8 a440 0000 9090 9090 9090 9090\n5548 89e5 4883 ec20 4889 7df8 4889 75f0\n4889 55e8 488b 7df8 488b 75f0 488b 55e8\ne8d5 3f00 0048 83c4 205d c30f 1f44 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne8e3 3e00 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne8a1 3f00 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4881 ec90 0500 0048 8d85 f0fa\nffff 488d 8de8 fcff ff48 8d95 98fc ffff\n4889 bd10 fbff ff89 b50c fbff fff2 0f11\n8500 fbff ff48 8bbd 10fb ffff 4c8d 850c\nfbff ff4c 8985 28fb ffff 4c8d 8500 fbff\nff4c 8985 20fb ffff 4c8b 8528 fbff ff4c\n8985 40fb ffff 4c8b 8d20 fbff ff4c 898d\n58fc ffff 4c8d 9530 fbff ff4c 8995 58fb\nffff 4c89 8550 fbff ff4c 898d 48fb ffff\n4c8b 8558 fbff ff4c 8b95 50fb ffff 4c89\n8590 fbff ff4c 8995 88fb ffff 4c89 8d80\nfbff ff4c 8b85 90fb ffff 4c8b 8d88 fbff\nff4c 898d 98fb ffff 4c8b 9580 fbff ff4c\n8995 50fc ffff 4c89 85b0 fbff ff4c 898d\na8fb ffff 4c89 95a0 fbff ff4c 8b85 b0fb\nffff 4c8b 8da8 fbff ff4c 8985 e8fb ffff\n4c89 8de0 fbff ff4c 8995 d8fb ffff 4c8b\n85e8 fbff ff4c 8b8d e0fb ffff 4c89 8d10\nfcff ff4c 8985 40fc ffff 4c89 8d38 fcff\nff4c 8b95 40fc ffff 4c89 8d48 fcff ff41\n8b31 4189 3249 83c0 084c 8b8d d8fb ffff\n4c89 8d30 fcff ff4c 8985 20fc ffff 4c89\n8d18 fcff ff4c 8b85 20fc ffff 4c89 8d28\nfcff fff2 410f 1001 f241 0f11 00f2 0f10\n8538 fbff ff8b b530 fbff ff89 b5f0 faff\nfff2 0f11 85f8 faff ff48 89bd 78fc ffff\n4c8b 8578 fcff ff4d 8b08 4c89 8590 fcff\nff4c 898d 88fc ffff 4c8b 8588 fcff ff48\n8995 a8fc ffff 4c89 85a0 fcff ff48 8b95\na8fc ffff 4c8b 85a0 fcff ff48 8995 b8fc\nffff 4c89 85b0 fcff ff48 8b95 b8fc ffff\n4c8b 85b0 fcff ff4c 8902 488b 9598 fcff\nff48 8995 80fc ffff 488b 9580 fcff ff48\n8995 e0fa ffff 4889 bdc8 fcff ff48 8b95\nc8fc ffff 4c8b 4208 4889 95e0 fcff ff4c\n8985 d8fc ffff 488b 95d8 fcff ff48 898d\nf8fc ffff 4889 95f0 fcff ff48 8b8d f8fc\nffff 488b 95f0 fcff ff48 898d 08fd ffff\n4889 9500 fdff ff48 8b8d 08fd ffff 488b\n9500 fdff ff48 8911 488b 8de8 fcff ff48\n898d d0fc ffff 488b 8dd0 fcff ff48 898d\nd8fa ffff 4889 85d0 faff ff48 8b85 e0fa\nffff 488b 8dd8 faff ff48 8b95 d0fa ffff\n4889 8530 fdff ff48 898d 28fd ffff 4889\n9520 fdff ff48 89bd 90fa ffff 488d 8528\nfdff ff48 8d8d 30fd ffff 4889 8d48 fdff\nff48 8985 40fd ffff 488b 8548 fdff ff48\n8b8d 40fd ffff 4889 8558 fdff ff48 898d\n50fd ffff 488b 8558 fdff ff48 8985 60fd\nffff 488b 8560 fdff ff48 8b00 488b 8d50\nfdff ff48 898d 68fd ffff 488b 8d68 fdff\nff48 3b01 0f94 c280 f201 f6c2 010f 8505\n0000 00e9 5d00 0000 488d bd20 fdff ff48\n8d85 30fd ffff 4889 8578 fdff ff48 8b85\n78fd ffff 488b 30e8 363c 0000 a801 0f85\n0500 0000 e905 0000 00e9 2700 0000 488d\n8530 fdff ff48 8985 70fd ffff 488b 8570\nfdff ff48 8b08 4881 c118 0000 0048 8908\ne927 ffff ff48 8d85 c8fa ffff 488d 8de8\nfaff ff48 8d95 a0fd ffff 488b b530 fdff\nff48 89b5 38fd ffff 488b b538 fdff ff48\n89b5 e8fa ffff 488b b590 faff ff48 89b5\n80fd ffff 488b bd80 fdff ff4c 8b47 0848\n89bd 98fd ffff 4c89 8590 fdff ff48 8bbd\n90fd ffff 4889 95b0 fdff ff48 89bd a8fd\nffff 488b 95b0 fdff ff48 8bbd a8fd ffff\n4889 95c0 fdff ff48 89bd b8fd ffff 488b\n95c0 fdff ff48 8bbd b8fd ffff 4889 3a48\n8b95 a0fd ffff 4889 9588 fdff ff48 8b95\n88fd ffff 4889 95c8 faff ff48 898d d0fd\nffff 4889 85c8 fdff ff48 8b85 d0fd ffff\n4889 85d8 fdff ff48 8b85 d8fd ffff 488b\n0048 8b8d c8fd ffff 4889 8de0 fdff ff48\n8b8d e0fd ffff 483b 010f 85f0 0300 0048\n8b85 90fa ffff 4805 2000 0000 8bb5 0cfb\nffff f20f 1085 00fb ffff 4889 c7e8 263a\n0000 488d 85a8 faff ff48 8dbd c0fa ffff\n488d 8d98 faff ff48 8d95 00fb ffff 4c8d\n850c fbff fff2 0f11 85c0 faff ff48 898d\nd0fe ffff 4c89 85c8 feff ff48 8995 c0fe\nffff 488b 95d0 feff ff4c 8b85 c8fe ffff\n4c8b 8dc0 feff ff48 8995 08ff ffff 4c89\n8500 ffff ff4c 898d f8fe ffff 488b 9508\nffff ff4c 8b85 00ff ffff 4c89 8510 ffff\nff4c 8b85 10ff ffff 4c8b 8df8 feff ff4c\n894d c84c 8b4d c848 8995 28ff ffff 4c89\n8520 ffff ff4c 898d 18ff ffff 488b 9528\nffff ff4c 8b85 20ff ffff 4c8b 8d18 ffff\nff48 8995 60ff ffff 4c89 8558 ffff ff4c\n898d 50ff ffff 488b 9560 ffff ff49 89d0\n4c8b 8d58 ffff ff4c 894d 884c 8b4d 884c\n8945 b84c 894d b04c 8b45 b84c 8b4d b04c\n894d c04c 8b4d c041 8b31 4189 3048 81c2\n0800 0000 4c8b 8550 ffff ff4c 8945 a84c\n8b45 a848 8955 984c 8945 9048 8b55 984c\n8b45 904c 8945 a04c 8b45 a0f2 410f 1000\nf20f 1102 4889 45e0 4889 4dd8 4889 7dd0\n488b 4de0 488b 55d0 488b 7dd8 4889 4df8\n4889 7df0 4889 55e8 488b 4df8 488b 55f0\n488b 3a48 8939 488b 5208 4889 5108 488b\n55e8 f20f 1002 f20f 1141 1048 8b8d 90fa\nffff 4889 8df8 fdff ff48 8985 f0fd ffff\n488b 85f8 fdff ff48 8b50 0848 89c7 4889\nbd00 feff ff48 8bbd 00fe ffff 4881 c710\n0000 0048 89bd 08fe ffff 488b bd08 feff\nff48 89bd 10fe ffff 488b bd10 feff ff48\n3b17 4889 8588 faff ff0f 835e 0100 0048\n8dbd e8fd ffff b801 0000 0089 c248 8bb5\n88fa ffff e891 3800 0048 8dbd e8fd ffff\n488b 9588 faff ff48 8995 18fe ffff 488b\n9518 feff ff48 81c2 1000 0000 4889 9520\nfeff ff48 8b95 20fe ffff 4889 9528 feff\nff48 8b95 28fe ffff 488b b588 faff ff48\n8b4e 0848 898d 38fe ffff 488b 8d38 feff\nff4c 8b85 f0fd ffff 4c89 85b8 feff ff4c\n8b85 b8fe ffff 4889 9560 feff ff48 898d\n58fe ffff 4c89 8550 feff ff48 8b8d 60fe\nffff 488b 9558 feff ff4c 8b85 50fe ffff\n4c89 8568 feff ff4c 8b85 68fe ffff 4889\n8d80 feff ff48 8995 78fe ffff 4c89 8570\nfeff ff48 8b8d 80fe ffff 488b 9578 feff\nff4c 8b85 70fe ffff 4c89 8590 feff ff4c\n8b85 90fe ffff 4889 8da8 feff ff48 8995\na0fe ffff 4c89 8598 feff ff48 8b8d a0fe\nffff 488b 9598 feff ff48 8995 b0fe ffff\n488b 95b0 feff ff4c 8b02 4c89 014c 8b42\n084c 8941 0848 8b52 1048 8951 10e8 6237\n0000 488b 8d88 faff ff48 8b51 0848 81c2\n1800 0000 4889 5108 e921 0000 0048 8b85\nf0fd ffff 4889 8530 feff ff48 8bb5 30fe\nffff 488b bd88 faff ffe8 2037 0000 488b\n3dd3 3c00 0048 8d35 603b 0000 e85b 3700\n00f2 0f10 85c0 faff ff48 89c7 e88d 3700\n0048 8d35 e819 0000 4889 8518 fdff ff48\n89b5 10fd ffff 488b bd18 fdff ffff 9510\nfdff fff2 0f10 85c0 faff fff2 0f11 8518\nfbff ff48 8985 80fa ffff e986 0000 0048\n8b3d 723c 0000 488d 350f 3b00 00e8 fa36\n0000 488d b5e8 faff ff48 89b5 c0fc ffff\n488b b5c0 fcff ff48 8b36 f20f 1046 1048\n89c7 e817 3700 0048 8d35 7219 0000 4889\n8570 fcff ff48 89b5 68fc ffff 488b bd70\nfcff ffff 9568 fcff ff48 8db5 e8fa ffff\n4889 b560 fcff ff48 8bb5 60fc ffff 488b\n36f2 0f10 4610 f20f 1185 18fb ffff 4889\n8578 faff fff2 0f10 8518 fbff ff48 81c4\n9005 0000 5dc3 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec70 4889 f848 8b0d 0e3c\n0000 488b 0948 894d f848 8975 b831 d248\n8d4d c048 897d a048 89cf 4889 4598 4889\n4d90 e817 3600 0048 8b7d a048 8b75 90e8\n3e35 0000 e900 0000 0048 8d7d c0e8 0e36\n0000 488b 3dc7 3b00 0048 8b3f 483b 7df8\n0f85 2500 0000 488b 4598 4883 c470 5dc3\n488d 7dc0 89d1 4889 45b0 894d ace8 de35\n0000 488b 7db0 e86b 3600 00e8 6c36 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne8ef 3400 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\n4889 f848 0520 0000 0048 897d f048 89c7\ne88b 3500 0048 8b7d f0e8 5e35 0000 4883\nc410 5dc3 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne83d 3500 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne8b7 3400 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4881 ec10 0100 0048 89bd 08ff\nffff 488b bd08 ffff ff48 813f 0000 0000\n4889 bd00 ffff ff0f 8483 0100 0048 8b85\n00ff ffff 4889 8510 ffff ff48 8b8d 10ff\nffff 488b 1148 898d 20ff ffff 4889 9518\nffff ff48 8b8d 20ff ffff 4889 8df8 feff\nff48 8b85 18ff ffff 488b 8df8 feff ff48\n3b41 080f 849a 0000 0048 8b85 f8fe ffff\n4889 8528 ffff ff48 8b8d 28ff ffff 4881\nc110 0000 0048 898d 30ff ffff 488b 8d30\nffff ff48 898d 38ff ffff 488b 8d38 ffff\nff48 8b50 0848 81c2 e8ff ffff 4889 5008\n4889 9540 ffff ff48 8b95 40ff ffff 4889\n8d60 ffff ff48 8995 58ff ffff 488b 8d60\nffff ff48 8b95 58ff ffff 4889 8d70 ffff\nff48 8995 68ff ffff 488b 8d70 ffff ff48\n8b95 68ff ffff 4889 4d88 4889 5580 e94e\nffff ffb8 1800 0000 89c1 488b 9500 ffff\nff48 8955 c848 8b75 c848 81c6 1000 0000\n4889 75d0 488b 75d0 4889 75d8 488b 75d8\n488b 3a48 8955 e04c 8b45 e04c 8945 e84c\n8b4d e849 81c1 1000 0000 4c89 4df0 4c8b\n4df0 4c89 4df8 4c8b 4df8 4d8b 094d 8b00\n4d29 c14c 89c8 4899 48f7 f948 8975 a048\n897d 9848 8945 9048 8b45 a048 8b4d 9848\n8b75 9048 8945 b848 894d b048 8975 a848\n8b45 b048 8945 c048 8b7d c0e8 f233 0000\n4881 c410 0100 005d c30f 1f80 0000 0000\n5548 89e5 4883 ec10 e8e7 3300 0048 8945\nf8e8 c633 0000 662e 0f1f 8400 0000 0000\n5548 89e5 5348 81ec d801 0000 4889 bdb8\nfdff ff48 89b5 b0fd ffff 4889 95a8 fdff\nff48 8b95 b8fd ffff 48c7 4220 0000 0000\n488b b5b0 fdff ff48 89b5 c0fd ffff 4881\nbdc0 fdff ff00 0000 0048 8995 a0fd ffff\n0f84 4602 0000 488d 85b8 feff ff48 8d8d\n78fe ffff 488d 9580 feff ff48 8db5 f0fe\nffff 488d bd10 ffff ff4c 8b05 7038 0000\n4981 c010 0000 004c 8b0d 5a38 0000 4981\nc110 0000 004c 8d95 b0fd ffff 4c8b 9da0\nfdff ff48 8b9d a0fd ffff 4c89 5b20 4c8b\n5b20 4c89 55f0 4c8b 55f0 4c89 9dd0 fdff\nff4c 8995 c8fd ffff 4c8b 95d0 fdff ff4c\n8b9d c8fd ffff 4c89 9510 feff ff4c 899d\n08fe ffff 4c8b 9510 feff ff4d 89d3 4c89\n9d18 feff ff4c 8b9d 18fe ffff 4d89 0b4d\n8902 4981 c208 0000 004c 8b85 08fe ffff\n4c89 45e8 4c8b 45e8 4c89 8508 ffff ff4c\n8b85 08ff ffff 4c89 8518 ffff ff4c 8b85\n18ff ffff 4889 bd28 ffff ff4c 8985 20ff\nffff 488b bd28 ffff ff4c 8b85 20ff ffff\n4889 bd58 ffff ff4c 8985 50ff ffff 488b\nbd58 ffff ff4c 8b85 50ff ffff 4c89 8560\nffff ff4c 8b85 60ff ffff 4889 bd70 ffff\nff4c 8985 68ff ffff 488b bd70 ffff ff4c\n8b85 68ff ffff 4889 7da0 4c89 4598 488b\n7da0 4c8b 4598 4c89 45c8 4c8b 45c8 4889\n7dd8 4c89 45d0 488b 7dd8 4c8b 45d0 4c89\n45e0 4c8b 45e0 4c89 0748 8bbd 10ff ffff\n4889 bdf8 fdff ff48 89b5 f8fe ffff 488b\nb5f8 feff ff48 89b5 00ff ffff 488b b5f8\nfdff ff48 89b5 38fe ffff 4c89 9528 feff\nff48 8bb5 28fe ffff 488b bd38 feff ff48\n89bd 80fe ffff 4889 b570 feff ff48 8bb5\n70fe ffff 4889 9590 feff ff48 8b95 90fe\nffff 488b 1248 8995 60fe ffff 4889 8de8\nfeff ff48 8b8d 60fe ffff 4889 8db8 feff\nff48 89b5 98fe ffff 488b 8d98 feff ff48\n89ca 4889 95c8 feff ff48 8985 d8fe ffff\n488b 85d8 feff ff48 8985 e0fe ffff 488b\n85e0 feff ff48 8b00 4889 85d0 feff ff48\n8b85 d0fe ffff 488b 0048 8901 4881 c4d8\n0100 005b 5dc3 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne8ef 2f00 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\n4889 7df0 e8c5 2f00 0048 8b7d f0e8 d030\n0000 4883 c410 5dc3 0f1f 8400 0000 0000\n5548 89e5 4157 4156 4155 4154 5348 81ec\n3807 0000 488d 85b8 f9ff ff48 89bd c0f9\nffff 488b bdc0 f9ff ff48 89f9 4881 c108\n0000 0048 898d c8f9 ffff 488b 8dc8 f9ff\nff48 898d d0f9 ffff 488b 8dd0 f9ff ff48\n8985 80fa ffff 4889 8d78 faff ff48 8b8d\n80fa ffff 488b 9578 faff ff48 898d 90fa\nffff 4889 9588 faff ff48 8985 48fb ffff\n48c7 8540 fbff ff01 0000 0048 c785 38fb\nffff 0000 0000 488b 8540 fbff ff48 c1e0\n0448 8985 50fb ffff 488b 8550 fbff ff48\n89bd 70f9 ffff 4889 c7e8 0a30 0000 488d\n8db0 fcff ff48 8d95 a8fc ffff 488d bd70\nfcff ff48 8db5 78fc ffff 4c8d 8500 fdff\nff4c 8d8d e8fd ffff 4c8b 1501 3500 0049\n81c2 1000 0000 4c8b 1deb 3400 0049 81c3\n1000 0000 488d 9d88 f9ff ff4c 8db5 b8f9\nffff 4c8d bda0 f9ff ff4c 8d65 b04c 8d6d\na048 8985 68f9 ffff 488d 4588 4889 8560\nf9ff ff48 8d85 78ff ffff 4889 8558 f9ff\nff48 8d85 90f9 ffff 4889 8550 f9ff ff48\n8b85 68f9 ffff 4889 8548 f9ff ff48 8b85\n50f9 ffff 4889 8568 fbff ff4c 89b5 60fb\nffff 48c7 8558 fbff ff01 0000 0048 8b85\n68fb ffff 4889 8540 f9ff ff48 8b85 58fb\nffff 4889 8538 f9ff ff48 8b85 60fb ffff\n4889 8530 f9ff ff48 8b85 40f9 ffff 4889\n8580 fbff ff48 8b85 30f9 ffff 4889 8578\nfbff ff48 8b85 38f9 ffff 4889 8570 fbff\nff48 8b85 80fb ffff 4889 8528 f9ff ff48\n8b85 78fb ffff 4889 8520 f9ff ff48 8b85\n28f9 ffff 4889 8d18 f9ff ff48 8b8d 20f9\nffff 4889 0848 8b8d 70fb ffff 4889 4808\n4c89 bd10 ffff ff48 8b8d 48f9 ffff 4889\n8d08 ffff ff48 8b85 50f9 ffff 4889 8500\nffff ff48 8b85 10ff ffff 488b 8d08 ffff\nff48 8985 10f9 ffff 488b 8500 ffff ff48\n8985 08f9 ffff 488b 8510 f9ff ff48 8985\n38ff ffff 4889 8d30 ffff ff48 8b85 08f9\nffff 4889 8528 ffff ff48 8b85 38ff ffff\n488b 8d30 ffff ff48 8985 00f9 ffff 488b\n8528 ffff ff48 8985 40ff ffff 488b 8540\nffff ff48 8985 f8f8 ffff 488b 0048 8985\n18ff ffff 488b 85f8 f8ff ff48 8b40 0848\n8985 20ff ffff 488b 8518 ffff ff48 8985\nf0f8 ffff 488b 8520 ffff ff48 8985 e8f8\nffff 488b 85f0 f8ff ff48 8985 58ff ffff\n488b 85e8 f8ff ff48 8985 60ff ffff 488b\n8500 f9ff ff48 8985 50ff ffff 4889 8d48\nffff ff48 8b85 50ff ffff 488b 8d48 ffff\nff48 8985 e0f8 ffff 488b 8558 ffff ff48\n8985 d8f8 ffff 488b 8560 ffff ff48 8985\nd0f8 ffff 488b 85d8 f8ff ff48 8945 8848\n8b85 d0f8 ffff 4889 4590 488b 85e0 f8ff\nff48 8945 8048 898d 78ff ffff 488b 4580\n488b 8d58 f9ff ff48 894d 9848 8b4d 9848\n8b09 4889 85c8 f8ff ff48 8b85 60f9 ffff\n4889 45d0 488b 45d0 4889 85c0 f8ff ff48\n8b00 4889 8568 ffff ff48 8b85 c0f8 ffff\n488b 4008 4889 8570 ffff ff48 8b85 68ff\nffff 4889 85b8 f8ff ff48 8b85 70ff ffff\n4889 85b0 f8ff ff48 8b85 b8f8 ffff 4889\n45b0 488b 85b0 f8ff ff48 8945 b848 8b85\nc8f8 ffff 4889 45a8 4889 4da0 488b 4da8\n4c89 6dc0 4c8b 6dc0 4d8b 6d00 4c89 294c\n8965 c84c 8b65 c84d 8b2c 244c 8969 084d\n8b64 2408 4c89 6110 4c89 bde8 feff ff48\n8b8d e8fe ffff 4889 8df0 feff ff48 8b8d\nf0fe ffff 4889 8df8 feff ff48 8b8d f8fe\nffff 488b 094c 8bbd 70f9 ffff 4981 c708\n0000 004c 89bd d8fe ffff 4c8b bdd8 feff\nff4c 89bd e0fe ffff 4c8b bde0 feff ff48\n899d c0fe ffff 4c89 b5b8 feff ff4c 8bb5\nc0fe ffff 4c8b a5b8 feff ff4c 89b5 d0fe\nffff 4c89 a5c8 feff ff48 898d c8fb ffff\n4c89 bdc0 fbff ff48 899d b8fb ffff 488b\n8dc8 fbff ff48 8b9d c0fb ffff 4c8b b5b8\nfbff ff48 898d 08fc ffff 4889 9d00 fcff\nff4c 89b5 f8fb ffff 488b 8d08 fcff ff48\n89cb 4889 9d10 fcff ff48 8b9d 10fc ffff\n4c89 1b4c 8911 4881 c108 0000 004c 8b95\n00fc ffff 4c89 95e0 fdff ff4c 8b95 e0fd\nffff 4c89 95f0 fdff ff4c 8b95 f0fd ffff\n4c89 8d00 feff ff4c 8995 f8fd ffff 4c8b\n8d00 feff ff4c 8b95 f8fd ffff 4c89 8d30\nfeff ff4c 8995 28fe ffff 4c8b 8d30 feff\nff4c 8b95 28fe ffff 4c89 8d40 feff ff4c\n8995 38fe ffff 4c8b 8d40 feff ff4c 8b95\n38fe ffff 4c89 8d70 feff ff4c 8995 68fe\nffff 4c8b 8d70 feff ff4c 8b95 68fe ffff\n4c89 9598 feff ff4c 8b95 98fe ffff 4c89\n8da8 feff ff4c 8995 a0fe ffff 4c8b 8da8\nfeff ff4c 8b95 a0fe ffff 4c89 95b0 feff\nff4c 8b95 b0fe ffff 4d89 114c 8b8d e8fd\nffff 4c89 8de8 fbff ff4c 8b8d f8fb ffff\n4c89 8dd8 fdff ff4c 8b8d d8fd ffff 4c89\n8df8 fcff ff4c 8b8d f8fc ffff 4c89 8d08\nfdff ff4c 8b8d 08fd ffff 4c89 8518 fdff\nff4c 898d 10fd ffff 4c8b 8518 fdff ff4c\n8b8d 10fd ffff 4c89 8548 fdff ff4c 898d\n40fd ffff 4c8b 8548 fdff ff4c 8b8d 40fd\nffff 4c89 8d50 fdff ff4c 8b8d 50fd ffff\n4c89 8560 fdff ff4c 898d 58fd ffff 4c8b\n8560 fdff ff4c 8b8d 58fd ffff 4c89 8590\nfdff ff4c 898d 88fd ffff 4c8b 8590 fdff\nff4c 8b8d 88fd ffff 4c89 8db8 fdff ff4c\n8b8d b8fd ffff 4c89 85c8 fdff ff4c 898d\nc0fd ffff 4c8b 85c8 fdff ff4c 8b8d c0fd\nffff 4c89 8dd0 fdff ff4c 8b8d d0fd ffff\n4d89 084c 8b85 00fd ffff 4c89 85e0 fbff\nff4c 8b85 e8fb ffff 4c8b 8de0 fbff ff4c\n8985 30fc ffff 4c89 8d28 fcff ff48 898d\n20fc ffff 488b 8d20 fcff ff4c 8b85 30fc\nffff 4c8b 8d28 fcff ff4c 8985 78fc ffff\n4c89 8d70 fcff ff48 898d 68fc ffff 488b\n8d68 fcff ff48 89b5 88fc ffff 488b b588\nfcff ff48 8b36 4889 b558 fcff ff48 89bd\nf0fc ffff 488b b5f0 fcff ff48 8b36 4889\nb550 fcff ff48 8bb5 58fc ffff 488b bd50\nfcff ff48 89b5 b0fc ffff 4889 bda8 fcff\nff48 898d 90fc ffff 488b 8d90 fcff ff48\n8995 c0fc ffff 488b 95c0 fcff ff48 8995\nc8fc ffff 488b 95c8 fcff ff48 8b12 4889\n95e8 fcff ff48 8b95 18f9 ffff 4889 95d8\nfcff ff48 8bb5 d8fc ffff 4889 b5e0 fcff\nff48 8bb5 e0fc ffff 488b 3648 89b5 d0fc\nffff 488b b5d0 fcff ff48 8b36 4889 3148\n8d85 a0f9 ffff 4889 8590 fbff ff48 8b8d\n90fb ffff 4889 8d98 fbff ff48 8b95 98fb\nffff 4889 95a0 fbff ff48 8b95 a0fb ffff\n488b 1248 8995 88fb ffff 4889 8da8 fbff\nff48 8b8d a8fb ffff 4889 8db0 fbff ff48\n8b8d b0fb ffff 48c7 0100 0000 0048 8b8d\n88fb ffff c785 78f9 ffff 0100 0000 4889\n8598 faff ff48 8b85 98fa ffff 4889 85a0\nfaff ff48 8b85 a0fa ffff 4889 85b8 faff\nff48 c785 b0fa ffff 0000 0000 488b 85b8\nfaff ff48 8985 c0fa ffff 488b 95c0 faff\nff48 8995 c8fa ffff 488b 95c8 faff ff48\n8b12 4889 95a8 faff ff48 8b95 b0fa ffff\n4889 8518 fbff ff48 8bb5 18fb ffff 4889\nb520 fbff ff48 8bb5 20fb ffff 4889 1648\n81bd a8fa ffff 0000 0000 4889 8da8 f8ff\nff48 8985 a0f8 ffff 0f84 ad00 0000 488b\n85a0 f8ff ff48 8985 28fb ffff 488b 8d28\nfbff ff48 898d 30fb ffff 488b 8d30 fbff\nff48 81c1 0800 0000 488b 95a8 faff ff48\n898d d8fa ffff 4889 95d0 faff ff48 8b8d\nd8fa ffff 488b 1148 8bb5 d0fa ffff 488b\n4908 4889 95f0 faff ff48 89b5 e8fa ffff\n4889 8de0 faff ff48 8b8d f0fa ffff 488b\n95e8 faff ff48 8bb5 e0fa ffff 4889 8d08\nfbff ff48 8995 00fb ffff 4889 b5f8 faff\nff48 8b8d 00fb ffff 4889 8d10 fbff ff48\n8bbd 10fb ffff e817 2700 0048 8b85 a8f8\nffff 4881 c438 0700 005b 415c 415d 415e\n415f 5dc3 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4156 5348 81ec a002 0000 488d\n85e8 fdff ff48 8d8d e0fd ffff 488d 95a8\nfdff ff4c 8d85 b0fd ffff 4c8d 8d38 feff\nff4c 8d95 10ff ffff 4c8b 1de1 2b00 0049\n81c3 1000 0000 488b 1dcb 2b00 0048 81c3\n1000 0000 4889 bdd8 fcff ff48 89b5 d0fc\nffff 488b b5d8 fcff ff48 8bbd d0fc ffff\n4989 f649 81c6 0800 0000 4c89 b5e0 fcff\nff4c 8bb5 e0fc ffff 4c89 b5e8 fcff ff4c\n8bb5 e8fc ffff 4881 c608 0000 0048 8975\ne048 8b75 e048 8975 e848 8b75 e848 89bd\n00fd ffff 4c89 b5f8 fcff ff48 89b5 f0fc\nffff 488b b500 fdff ff48 8bbd f8fc ffff\n4c8b b5f0 fcff ff48 89b5 40fd ffff 4889\nbd38 fdff ff4c 89b5 30fd ffff 488b b540\nfdff ff48 89f7 4889 bd48 fdff ff48 8bbd\n48fd ffff 4889 1f4c 891e 4881 c608 0000\n0048 8bbd 38fd ffff 4889 bd08 ffff ff48\n8bbd 08ff ffff 4889 bd18 ffff ff48 8bbd\n18ff ffff 4c89 9528 ffff ff48 89bd 20ff\nffff 488b bd28 ffff ff4c 8b95 20ff ffff\n4889 bd58 ffff ff4c 8995 50ff ffff 488b\nbd58 ffff ff4c 8b95 50ff ffff 4889 bd68\nffff ff4c 8995 60ff ffff 488b bd68 ffff\nff4c 8b95 60ff ffff 4889 7d98 4c89 5590\n488b 7d98 4c8b 5590 4c89 55c0 4c8b 55c0\n4889 7dd0 4c89 55c8 488b 7dd0 4c8b 55c8\n4c89 55d8 4c8b 55d8 4c89 1748 8bbd 10ff\nffff 4889 bd20 fdff ff48 8bbd 30fd ffff\n4889 bd30 feff ff48 8bbd 30fe ffff 4889\nbd40 feff ff48 8bbd 40fe ffff 4c89 8d50\nfeff ff48 89bd 48fe ffff 488b bd50 feff\nff4c 8b8d 48fe ffff 4889 bd80 feff ff4c\n898d 78fe ffff 488b bd80 feff ff4c 8b8d\n78fe ffff 4889 bd90 feff ff4c 898d 88fe\nffff 488b bd90 feff ff4c 8b8d 88fe ffff\n4889 bdc0 feff ff4c 898d b8fe ffff 488b\nbdc0 feff ff4c 8b8d b8fe ffff 4c89 8de8\nfeff ff4c 8b8d e8fe ffff 4889 bdf8 feff\nff4c 898d f0fe ffff 488b bdf8 feff ff4c\n8b8d f0fe ffff 4c89 8d00 ffff ff4c 8b8d\n00ff ffff 4c89 0f48 8bbd 38fe ffff 4889\nbd18 fdff ff48 8bbd 20fd ffff 4c8b 8d18\nfdff ff48 89bd 68fd ffff 4c89 8d60 fdff\nff48 89b5 58fd ffff 488b b558 fdff ff48\n8bbd 68fd ffff 4c8b 8d60 fdff ff48 89bd\nb0fd ffff 4c89 8da8 fdff ff48 89b5 a0fd\nffff 488b b5a0 fdff ff4c 8985 c0fd ffff\n488b bdc0 fdff ff48 8b3f 4889 bd90 fdff\nff48 8995 28fe ffff 488b 9528 feff ff48\n8b12 4889 9588 fdff ff48 8b95 90fd ffff\n488b bd88 fdff ff48 8995 e8fd ffff 4889\nbde0 fdff ff48 89b5 c8fd ffff 488b 95c8\nfdff ff48 898d f8fd ffff 488b 8df8 fdff\nff48 898d 00fe ffff 488b 8d00 feff ff48\n8b09 4889 8d20 feff ff48 8985 10fe ffff\n488b 8510 feff ff48 8985 18fe ffff 488b\n8518 feff ff48 8b00 4889 8508 feff ff48\n8b85 08fe ffff 488b 0048 8902 4881 c4a0\n0200 005b 415e 5dc3 0f1f 8400 0000 0000\n5548 89e5 4889 7df8 5dc3 660f 1f44 0000\n5548 89e5 4883 ec60 488d 45a0 4889 7da8\n488b 7da8 4889 f948 81c1 0800 0000 4889\n4db0 488b 4db0 4889 4db8 488b 4db8 4889\n45e8 4889 4de0 488b 4de8 488b 55e0 4889\n4df8 4889 55f0 4889 45d0 4889 7dc8 48c7\n45c0 0100 0000 488b 45c8 4889 45d8 488b\n7dd8 e8bb 2200 0048 83c4 605d c30f 1f00\n5548 89e5 4883 ec40 4889 7dd8 4889 75d0\n4889 55c8 488b 55d8 4881 c208 0000 0048\n8955 e048 8b55 e048 8955 e848 8b7d e848\n8b55 d048 8955 f048 8b75 f048 8b55 c848\n8955 f848 8b55 f8e8 ac21 0000 4883 c440\n5dc3 6666 6666 662e 0f1f 8400 0000 0000\n5548 89e5 488b 0565 2700 0048 897d d048\n8975 c848 8b75 d048 8b7d c848 897d e848\n8945 e048 8b45 e848 8b40 0848 8b7d e048\n3b47 0848 8975 c00f 8523 0000 0048 8b45\nc048 0508 0000 0048 8945 f048 8b45 f048\n8945 f848 8b45 f848 8945 d8e9 0800 0000\n48c7 45d8 0000 0000 488b 45d8 5dc3 6690\n5548 89e5 488b 05f5 2600 0048 897d f85d\nc366 6666 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4889 7df0 488b 7df0 4889 7df8\n5dc3 6666 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec20 4889 7de8 488b 7de8\n4889 7df0 488b 45f0 4889 45f8 e881 2100\n0048 83c4 205d c366 0f1f 8400 0000 0000\n5548 89e5 4889 7df0 488b 7df0 4889 7df8\n5dc3 6666 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec60 4889 7db0 4889 75a8\n4889 55a0 488b 55b0 4889 55b8 488b 55b8\n488b 75a8 4889 75f0 488b 75f0 488b 7da0\n4889 7df8 488b 7df8 4889 55d0 4889 75c8\n4889 7dc0 488b 55d0 4889 55d8 488b 55d8\n488b 1248 8b75 c848 8975 e048 8b75 e08b\n3e48 8b75 c048 8975 e848 8b75 e8f2 0f10\n06ff d248 83c4 605d c30f 1f80 0000 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\n488b 4720 4889 f948 39c8 4889 7df0 0f85\n1600 0000 488b 45f0 488b 4820 488b 1148\n89cf ff52 20e9 2800 0000 488b 45f0 4881\n7820 0000 0000 0f84 1100 0000 488b 45f0\n488b 4820 488b 1148 89cf ff52 28e9 0000\n0000 4883 c410 5dc3 0f1f 8400 0000 0000\n5548 89e5 4881 ec90 0000 0048 897d 9048\n89f8 4889 7d98 4889 7da0 4889 7da8 4889\n7db0 48c7 0700 0000 0048 c747 0800 0000\n0048 89f9 4883 c110 4889 4dc0 48c7 45b8\n0000 0000 488b 4dc0 4889 4dd0 48c7 45c8\n0000 0000 488b 4dd0 488d 55c8 4889 55d8\n488b 55c8 4889 4de8 4889 55e0 488b 4de8\n4889 4df0 488d 55e0 4889 55f8 488b 55e0\n4889 1148 83c7 2048 8985 78ff ffff e845\n1f00 00e9 0000 0000 4881 c490 0000 005d\nc389 d148 8945 8889 4d84 488b bd78 ffff\nffe8 161f 0000 488b 7d88 e8c7 1f00 0090\n5548 89e5 4883 ec10 4889 7df8 4889 75f0\n488b 7df8 488b 75f0 e807 1f00 0048 83c4\n105d c366 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec20 4889 7df8 4889 75f0\n488b 75f8 488b 7df0 4881 7f20 0000 0000\n4889 75e8 0f85 1100 0000 488b 45e8 48c7\n4020 0000 0000 e95c 0000 0048 8b45 f048\n8b40 2048 8b4d f048 39c8 0f85 2900 0000\n488b 45e8 488b 4de8 4889 4120 488b 45f0\n488b 4020 488b 1048 8b52 1848 8b71 2048\n89c7 ffd2 e919 0000 0048 8b45 f048 8b40\n2048 8b08 4889 c7ff 5110 488b 4de8 4889\n4120 e900 0000 0048 83c4 205d c30f 1f00\n5548 89e5 4883 ec50 4889 7de8 8975 e4f2\n0f11 45d8 488b 7de8 4881 7f20 0000 0000\n4889 7dd0 0f85 4e00 0000 b808 0000 0089\nc7e8 a81e 0000 31f6 b908 0000 0089 ca48\n89c7 4989 f848 897d c84c 89c7 4889 45c0\ne8b3 1e00 0048 8b7d c8e8 9c1d 0000 488b\n0583 2300 0048 8b15 6423 0000 488b 7dc0\n4889 c6e8 781e 0000 488d 45d8 488d 4de4\n488b 55d0 488b 7220 488b 3e48 8b7f 3048\n894d f048 8b4d f048 8945 f848 8b55 f848\n897d b848 89f7 4889 ce48 8b45 b8ff d048\n83c4 505d c366 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec20 4889 7df8 4889 75f0\n488b 7df8 488b 75f0 488b 45f0 4889 7de8\n4889 c748 8975 e0e8 ea1c 0000 488b 7de8\n488b 75e0 4889 c2e8 161d 0000 4883 c420\n5dc3 6666 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4881 ec90 0000 0048 897d b848\n89f8 488b 0f48 8b49 e848 01cf 4889 7de0\nc645 df0a 488b 75e0 488d 4dd0 4889 cf48\n8945 b048 894d a8e8 381d 0000 488b 45a8\n4889 45e8 488b 3585 2200 0048 89c7 e81b\n1d00 0048 8945 a0e9 0000 0000 8a45 df48\n8b4d a048 894d f888 45f7 488b 55f8 488b\n3248 8b76 380f be7d f789 7d9c 4889 d744\n8b45 9c48 8975 9044 89c6 488b 5590 ffd2\n8845 8fe9 1b00 0000 488d 7dd0 89d1 4889\n45c8 894d c4e8 fa1c 0000 488b 7dc8 e833\n1d00 0048 8d7d d0e8 e81c 0000 488b 7db0\n8a45 8f0f bef0 e8bb 1c00 0048 8b7d b848\n8945 80e8 b41c 0000 488b 7db8 4889 8578\nffff ff48 89f8 4881 c490 0000 005d c390\n5548 89e5 4883 ec48 31c0 88c1 488d 5588\n4c8d 8568 ffff ff4c 8d8d 50ff ffff 4889\nbd48 ffff ff48 89b5 40ff ffff 488b b548\nffff ff48 8bbd 40ff ffff 488b 3648 89bd\n60ff ffff 4889 b558 ffff ff48 8bb5 60ff\nffff 488b bd58 ffff ff4c 894d 8048 89b5\n78ff ffff 4889 bd70 ffff ff48 8bb5 78ff\nffff 488b bd70 ffff ff4c 8945 a048 8975\n9848 897d 9048 8b75 9848 8b7d 9048 8955\nb848 8975 b048 897d a848 8b55 9848 8955\nd048 8b55 d048 8955 d848 8b55 d88b 0248\n8b55 9048 8955 c048 8b55 c048 8955 c848\n8b55 c83b 0288 8d3f ffff ff0f 8550 0000\n0048 8b85 78ff ffff 4889 45f0 488b 45f0\n4805 0800 0000 4889 45f8 488b 45f8 f20f\n1000 488b 8570 ffff ff48 8945 e048 8b45\ne048 0508 0000 0048 8945 e848 8b45 e866\n0f2e 000f 94c1 0f9b c220 d188 8d3f ffff\nff8a 853f ffff ff24 010f b6c0 4883 c448\n5dc3 6666 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne8ab 1a00 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne897 1a00 0048 83c4 105d c30f 1f44 0000\n5548 89e5 488b 057d 2000 0048 0510 0000\n0048 8b0d 7820 0000 4881 c110 0000 0048\n897d f048 8b7d f048 89fa 4889 55f8 488b\n55f8 4889 0a48 8907 5dc3 660f 1f44 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\n4889 7df0 e82d 1a00 0048 8b7d f0e8 f01a\n0000 4883 c410 5dc3 0f1f 8400 0000 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne8c1 1a00 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4883 ec20 4889 7df8 4889 75f0\n4889 55e8 488b 7df8 488b 55e8 488b 75f0\ne8fb 1900 0048 83c4 205d c30f 1f44 0000\n5548 89e5 4889 7df8 5dc3 660f 1f44 0000\n5548 89e5 4881 ecc0 0100 00b8 1800 0000\n89c1 4889 bda8 feff ff48 89b5 a0fe ffff\n488b b5a8 feff ff48 89f7 4889 bdb0 feff\nff48 8bbd b0fe ffff 4881 c710 0000 0048\n89bd b8fe ffff 488b bdb8 feff ff48 89bd\nc0fe ffff 488b bdc0 feff ff48 89bd 98fe\nffff 4889 b5c8 feff ff48 8bbd c8fe ffff\n488b 5708 488b 3f48 29fa 4889 d048 9948\nf7f9 4805 0100 0000 4889 b5f0 feff ff48\n8985 e8fe ffff 488b 85f0 feff ff48 89c7\n4889 b558 feff ff48 8985 50fe ffff e8af\n1800 0048 8985 e0fe ffff 488b 85e8 feff\nff48 3b85 e0fe ffff 0f86 0f00 0000 488b\n8550 feff ff48 89c7 e84b 1900 00b8 1800\n0000 89c1 488b 9550 feff ff48 8995 00ff\nffff 488b b500 ffff ff48 89b5 08ff ffff\n488b b508 ffff ff48 89b5 10ff ffff 488b\nbd10 ffff ff48 81c7 1000 0000 4889 bd18\nffff ff48 8bbd 18ff ffff 4889 bd20 ffff\nff48 8bbd 20ff ffff 488b 3f48 8b36 4829\nf748 89f8 4899 48f7 f948 8985 d8fe ffff\n488b 85d8 feff ff48 8b8d e0fe ffff 48c1\ne901 4839 c80f 8213 0000 0048 8b85 e0fe\nffff 4889 85f8 feff ffe9 c000 0000 488d\n8550 ffff ff48 8d8d e8fe ffff 488d 95d0\nfeff ff48 8bb5 d8fe ffff 48c1 e601 4889\nb5d0 feff ff48 8995 38ff ffff 4889 8d30\nffff ff48 8b8d 38ff ffff 488b 9530 ffff\nff48 898d 48ff ffff 4889 9540 ffff ff48\n8b8d 48ff ffff 488b 9540 ffff ff48 8985\n68ff ffff 4889 8d60 ffff ff48 8995 58ff\nffff 488b 8560 ffff ff48 8b00 488b 8d58\nffff ff48 3b01 0f83 1300 0000 488b 8540\nffff ff48 8985 48fe ffff e90e 0000 0048\n8b85 48ff ffff 4889 8548 feff ff48 8b85\n48fe ffff 488b 0048 8985 f8fe ffff 488d\nbd70 feff ffb8 1800 0000 89c1 488b b5f8\nfeff ff48 8b95 58fe ffff 4889 9570 ffff\nff4c 8b85 70ff ffff 4d8b 4808 4d8b 004d\n29c1 4c89 c848 9948 f7f9 488b 8d98 feff\nff48 89c2 e809 1700 0048 8b85 98fe ffff\n488b 8d80 feff ff48 898d 78ff ffff 488b\n8d78 ffff ff48 8b95 a0fe ffff 4889 5580\n488b 5580 4889 45a8 4889 4da0 4889 5598\n488b 45a8 488b 4da0 488b 5598 4889 55b0\n488b 55b0 4889 45c8 4889 4dc0 4889 55b8\n488b 45c8 488b 4dc0 488b 55b8 4889 55d8\n488b 55d8 4889 45f0 4889 4de8 4889 55e0\n488b 45e8 488b 4de0 4889 4df8 488b 4df8\n488b 1148 8910 488b 5108 4889 5008 488b\n4910 4889 4810 488b 8580 feff ff48 83c0\n1848 8985 80fe ffff 488d b570 feff ff48\n8bbd 58fe ffff e89b 1600 00e9 0000 0000\n488d bd70 feff ffe8 4216 0000 4881 c4c0\n0100 005d c348 8dbd 70fe ffff 89d1 4889\n8568 feff ff89 8d64 feff ffe8 1e16 0000\n488b bd68 feff ffe8 1a17 0000 0f1f 4000\n5548 89e5 4889 7df8 4889 75f0 4889 55e8\n5dc3 6666 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec20 4889 7df8 4889 75f0\n4889 55e8 4889 4de0 488b 7df8 488b 75f0\n488b 55e8 488b 4de0 e8bb 1500 0048 83c4\n205d c366 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4156 5348 81ec 5001 0000 4889\nbdd8 feff ff48 89b5 d0fe ffff 488b b5d8\nfeff ff48 89f7 4889 b5c8 feff ffe8 3415\n0000 b818 0000 0089 c648 8dbd 30ff ffff\n488d 4d90 488d 55c0 31c0 4189 c04c 8b8d\nc8fe ffff 4c89 8de0 feff ff4c 8b8d e0fe\nffff 4981 c110 0000 004c 898d e8fe ffff\n4c8b 8de8 feff ff4c 898d f0fe ffff 4c8b\n8df0 feff ff4c 8b95 c8fe ffff 4d8b 1a49\n8b5a 084c 8bb5 d0fe ffff 4981 c608 0000\n004c 898d 20ff ffff 4c89 9d18 ffff ff48\n899d 10ff ffff 4c89 b508 ffff ff4c 8b8d\n10ff ffff 4c8b 9d18 ffff ff4d 29d9 4c89\nc848 8995 c0fe ffff 4899 48f7 fe48 8985\n00ff ffff 488b 8500 ffff ff4c 8b8d 08ff\nffff 4d8b 1949 29c0 4969 c018 0000 0049\n01c3 4d89 1948 8b85 08ff ffff 488b 004c\n8b85 18ff ffff 4c69 8d00 ffff ff18 0000\n0048 89bd b8fe ffff 4889 c748 89b5 b0fe\nffff 4c89 c64c 89ca 4889 8da8 feff ffe8\n7e15 0000 488b 85c8 feff ff48 8b8d d0fe\nffff 4881 c108 0000 0048 8945 d048 894d\nc848 8b45 d048 8945 d848 8b45 d848 8b00\n4889 45c0 488b 45c8 4889 45e8 488b 45e8\n488b 0048 8b4d d048 8901 488b 85c0 feff\nff48 8945 e048 8b4d e048 8b09 488b 55c8\n4889 0a48 8b8d c8fe ffff 4881 c108 0000\n0048 8b95 d0fe ffff 4881 c210 0000 0048\n894d a048 8955 9848 8b4d a048 894d a848\n8b4d a848 8b09 4889 4d90 488b 4d98 4889\n4db8 488b 4db8 488b 0948 8b55 a048 890a\n488b 8da8 feff ff48 894d b048 8b55 b048\n8b12 488b 7598 4889 1648 8b95 c8fe ffff\n4889 9578 ffff ff48 8b95 78ff ffff 4881\nc210 0000 0048 8955 8048 8b55 8048 8955\n8848 8b55 8848 8bb5 d0fe ffff 4889 b560\nffff ff48 8bb5 60ff ffff 4881 c618 0000\n0048 89b5 68ff ffff 488b b568 ffff ff48\n89b5 70ff ffff 488b b570 ffff ff48 8995\n40ff ffff 4889 b538 ffff ff48 8b95 40ff\nffff 4889 9548 ffff ff48 8b95 48ff ffff\n488b 1248 8995 30ff ffff 488b 9538 ffff\nff48 8995 58ff ffff 488b 9558 ffff ff48\n8b12 488b b540 ffff ff48 8916 488b 95b8\nfeff ff48 8995 50ff ffff 488b b550 ffff\nff48 8b36 488b bd38 ffff ff48 8937 488b\nb5d0 feff ff48 8b76 0848 8bbd d0fe ffff\n4889 3748 8bb5 c8fe ffff 4889 b528 ffff\nff48 8bbd 28ff ffff 4c8b 4708 488b 3f49\n29f8 4c89 c048 9948 8bbd b0fe ffff 48f7\nff48 89f7 4889 c6e8 3412 0000 488b 85c8\nfeff ff48 8985 f8fe ffff 4881 c450 0100\n005b 415e 5dc3 662e 0f1f 8400 0000 0000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne84f 1200 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4883 ec38 488d 45e0 488d 8d58\nffff ff48 8d95 60ff ffff 48c7 c6ff ffff\nff49 b8aa aaaa aaaa aaaa 0a48 89bd 68ff\nffff 488b bd68 ffff ff48 89bd 70ff ffff\n488b bd70 ffff ff48 81c7 1000 0000 4889\nbd78 ffff ff48 8bbd 78ff ffff 4889 7d80\n488b 7d80 4889 7d98 488b 7d98 4889 7da0\n488b 7da0 4889 7db0 4c89 8560 ffff ff48\nc1ee 0148 89b5 58ff ffff 4889 55c8 4889\n4dc0 488b 4dc8 488b 55c0 4889 4dd8 4889\n55d0 488b 4dd0 488b 55d8 4889 45f8 4889\n4df0 4889 55e8 488b 45f0 488b 0048 8b4d\ne848 3b01 0f83 1000 0000 488b 45d0 4889\n8550 ffff ffe9 0b00 0000 488b 45d8 4889\n8550 ffff ff48 8b85 50ff ffff 4889 8548\nffff ff48 8b85 48ff ffff 488b 0048 83c4\n385d c366 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4881 ec00 0100 0048 8d85 78ff\nffff 4c8d 8558 ffff ff48 89bd 30ff ffff\n4889 b528 ffff ff48 8995 20ff ffff 4889\n8d18 ffff ff48 8b8d 30ff ffff 4889 ca48\n81c2 1800 0000 488b b518 ffff ff48 8995\n48ff ffff 48c7 8540 ffff ff00 0000 0048\n89b5 38ff ffff 488b 9548 ffff ff48 8bb5\n40ff ffff 488b bd38 ffff ff48 8995 60ff\nffff 4889 b558 ffff ff48 89bd 50ff ffff\n488b 9560 ffff ff4c 8985 68ff ffff 488b\nb568 ffff ff48 8b36 488b bd50 ffff ff48\n897d 9848 8b7d 9848 8955 8048 89b5 78ff\nffff 4889 bd70 ffff ff48 8b55 8048 8945\n8848 8b45 8848 8b00 4889 0248 8b85 70ff\nffff 4889 4590 488b 4590 4889 4208 4881\nbd28 ffff ff00 0000 0048 898d 10ff ffff\n0f84 7200 0000 488b 8510 ffff ff48 8945\ne848 8b4d e848 81c1 1800 0000 4889 4df0\n488b 4df0 4889 4df8 488b 4df8 488b 4908\n488b 9528 ffff ff48 894d c048 8955 b848\n8b4d c048 8b55 b848 894d d848 8955 d048\nc745 c800 0000 0048 694d d018 0000 0048\n894d e048 8b7d e0e8 ac10 0000 4889 8508\nffff ffe9 1000 0000 31c0 89c1 4889 8d08\nffff ffe9 0000 0000 488b 8508 ffff ff48\n8b8d 10ff ffff 4889 0148 8b01 4869 9520\nffff ff18 0000 0048 01d0 4889 4110 4889\n4108 488b 0148 6995 28ff ffff 1800 0000\n4801 d048 894d a048 8b55 a048 81c2 1800\n0000 4889 55a8 488b 55a8 4889 55b0 488b\n55b0 4889 0248 81c4 0001 0000 5dc3 6690\n5548 89e5 4881 ecd0 0000 00b8 1800 0000\n89c1 4889 bd60 ffff ff48 8bbd 60ff ffff\n4889 bd68 ffff ff48 8b95 68ff ffff 488b\n1248 8995 70ff ffff 488b 9570 ffff ff48\n89bd 78ff ffff 488b b578 ffff ff48 8b36\n4889 7580 488b 7580 4889 7dd8 4c8b 45d8\n4c89 45e0 4c8b 45e0 4c89 45e8 4c8b 4de8\n4981 c110 0000 004c 894d f04c 8b4d f04c\n894d f84c 8b4d f84d 8b09 4d8b 004d 29c1\n4c89 c848 8995 58ff ffff 4899 48f7 f948\n69c0 1800 0000 4801 c648 897d c848 8b45\nc848 8b00 4889 45d0 488b 45d0 4889 7dc0\n4c8b 45c0 4d8b 4808 4d8b 004d 29c1 4889\n8550 ffff ff4c 89c8 4899 48f7 f948 69c0\n1800 0000 4c8b 8550 ffff ff49 01c0 4889\n7db0 488b 45b0 488b 0048 8945 b848 8b45\nb848 897d 884c 8b4d 884c 894d 904c 8b4d\n904c 894d 984c 8b55 9849 81c2 1000 0000\n4c89 55a0 4c8b 55a0 4c89 55a8 4c8b 55a8\n4d8b 124d 8b09 4d29 ca48 8985 48ff ffff\n4c89 d048 9948 f7f9 4869 c018 0000 0048\n8b8d 48ff ffff 4801 c148 8b85 58ff ffff\n4889 b540 ffff ff48 89c6 4c8b 8d40 ffff\nff4c 89ca 4889 8d38 ffff ff4c 89c1 4c8b\n8538 ffff ffe8 720d 0000 4881 c4d0 0000\n005d c366 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4881 ecc0 0000 00b8 1800 0000\n89c1 4889 bd68 ffff ff48 89b5 60ff ffff\n488b b568 ffff ff48 89b5 70ff ffff 488b\nbd70 ffff ff48 8b3f 4889 bd78 ffff ff48\n8bbd 78ff ffff 4889 7580 488b 5580 488b\n1248 8955 8848 8b55 8848 8975 d84c 8b45\nd84c 8945 e04c 8b45 e04c 8945 e84c 8b4d\ne849 81c1 1000 0000 4c89 4df0 4c8b 4df0\n4c89 4df8 4c8b 4df8 4d8b 094d 8b00 4d29\nc14c 89c8 4889 9558 ffff ff48 9948 f7f9\n4869 c018 0000 004c 8b85 58ff ffff 4901\nc048 8975 c848 8b45 c848 8b00 4889 45d0\n488b 45d0 4889 75a0 4c8b 4da0 4c89 4da8\n4c8b 4da8 4c89 4db0 4c8b 55b0 4981 c210\n0000 004c 8955 b84c 8b55 b84c 8955 c04c\n8b55 c04d 8b12 4d8b 094d 29ca 4889 8550\nffff ff4c 89d0 4899 48f7 f948 69c0 1800\n0000 488b 8d50 ffff ff48 01c1 4889 7590\n488b 4590 488b 0048 8945 9848 8b45 984c\n698d 60ff ffff 1800 0000 4c01 c848 89bd\n48ff ffff 4889 f748 8bb5 48ff ffff 4c89\nc249 89c0 e803 0c00 0048 81c4 c000 0000\n5dc3 6666 6666 662e 0f1f 8400 0000 0000\n5548 89e5 4889 7df8 4889 75f0 4889 55e8\n4889 4de0 4c89 45d8 5dc3 660f 1f44 0000\n5548 89e5 4881 ec40 0100 0048 89bd e8fe\nffff 488b bde8 feff ff48 89bd f0fe ffff\n488b 85f0 feff ff48 8b48 0848 8985 08ff\nffff 4889 8d00 ffff ff48 8b85 08ff ffff\n488b 8d00 ffff ff48 8985 18ff ffff 4889\n8d10 ffff ff48 8b85 18ff ffff 4889 bde0\nfeff ff48 8985 d8fe ffff 488b 8510 ffff\nff48 8b8d d8fe ffff 483b 4110 0f84 9e00\n0000 488b 85d8 feff ff48 8985 28ff ffff\n488b 8d28 ffff ff48 81c1 1800 0000 4889\n8d30 ffff ff48 8b8d 30ff ffff 4889 8d38\nffff ff48 8b8d 38ff ffff 488b 4908 488b\n5010 4881 c2e8 ffff ff48 8950 1048 8995\n40ff ffff 488b 9540 ffff ff48 898d 60ff\nffff 4889 9558 ffff ff48 8b8d 60ff ffff\n488b 9558 ffff ff48 898d 70ff ffff 4889\n9568 ffff ff48 8b8d 70ff ffff 488b 9568\nffff ff48 894d 8848 8955 80e9 4aff ffff\n488b 85e0 feff ff48 8138 0000 0000 0f84\ncb00 0000 b818 0000 0089 c148 8b95 e0fe\nffff 4889 5590 488b 7590 4881 c618 0000\n0048 8975 9848 8b75 9848 8975 a048 8b75\na048 8b76 0848 8b3a 4889 55e0 4c8b 45e0\n4c89 45e8 4c8b 4de8 4981 c118 0000 004c\n894d f04c 8b4d f04c 894d f84c 8b4d f84d\n8b09 4d8b 004d 29c1 4c89 c848 9948 f7f9\n4889 b5d0 feff ff48 89bd c8fe ffff 4889\n85c0 feff ff48 8b85 d0fe ffff 4889 45b8\n488b 8dc8 feff ff48 894d b048 8b95 c0fe\nffff 4889 55a8 488b 75b8 488b 7db0 4c8b\n45a8 4889 75d0 4889 7dc8 4c89 45c0 488b\n75c8 4889 75d8 488b 7dd8 e8f3 0a00 0048\n81c4 4001 0000 5dc3 0f1f 8400 0000 0000\n5548 89e5 4881 ec80 0100 0048 89bd 48ff\nffff 4889 b540 ffff ff48 8995 38ff ffff\n488b b548 ffff ff48 8dbd 28ff ffff e87f\n0a00 00e9 0000 0000 488d 8528 ffff ff48\n8985 50ff ffff 488b 8550 ffff ff8a 0888\n8d07 ffff ff8a 8507 ffff ffa8 010f 8505\n0000 00e9 9903 0000 488d 8510 ffff ff48\n8b8d 48ff ffff 4889 8560 ffff ff48 898d\n58ff ffff 488b 8560 ffff ff48 8b8d 58ff\nffff 4889 8570 ffff ff48 898d 68ff ffff\n488b 8570 ffff ff48 8b8d 68ff ffff 488b\n1148 8b52 e848 01d1 4889 8d78 ffff ff48\n8b8d 78ff ffff 4889 4d80 488b 4d80 488b\n4928 4889 0848 8bb5 40ff ffff 488b 8548\nffff ff48 8b08 488b 49e8 4801 c848 8945\na848 8b45 a88b 7808 4889 b5f8 feff ff89\nbdf4 feff ff8b 85f4 feff ff25 b000 0000\n3d20 0000 000f 851a 0000 0048 8b85 40ff\nffff 4803 8538 ffff ff48 8985 e8fe ffff\ne90e 0000 0048 8b85 40ff ffff 4889 85e8\nfeff ff48 8b85 e8fe ffff 488b 8d40 ffff\nff48 038d 38ff ffff 488b 9548 ffff ff48\n8b32 488b 76e8 4801 f248 8bb5 48ff ffff\n488b 3e48 8b7f e848 01fe 4889 75b8 488b\n75b8 4889 85e0 feff ff48 898d d8fe ffff\n4889 95d0 feff ff48 89b5 c8fe ffff e83d\n0800 0048 8b8d c8fe ffff 8bb1 9000 0000\n89c7 e823 0800 00a8 010f 8505 0000 00e9\ndc00 0000 488b 85c8 feff ff48 8945 e0c6\n45df 2048 8b75 e048 8d7d d0e8 b408 0000\ne900 0000 0048 8d45 d048 8945 e848 8b35\nfc0d 0000 4889 c7e8 9208 0000 4889 85c0\nfeff ffe9 0000 0000 8a45 df48 8b8d c0fe\nffff 4889 4df8 8845 f748 8b55 f848 8b32\n488b 7638 0fbe 7df7 89bd bcfe ffff 4889\nd744 8b85 bcfe ffff 4889 b5b0 feff ff44\n89c6 488b 95b0 feff ffff d288 85af feff\nffe9 2b00 0000 89d1 4889 45c8 894d c448\n8d7d d0e8 5c08 0000 488b 45c8 8b4d c448\n8985 a0fe ffff 898d 9cfe ffff e912 0100\n0048 8d7d d0e8 3a08 0000 8a85 affe ffff\n0fbe c848 8bbd c8fe ffff 898f 9000 0000\n488b 85c8 feff ff8b 8890 0000 0088 ca88\n959b feff ff48 8bbd 10ff ffff 8a85 9bfe\nffff 440f bec8 488b b5f8 feff ff48 8b95\ne0fe ffff 488b 8dd8 feff ff4c 8b85 d0fe\nffff e889 0100 0048 8985 90fe ffff e900\n0000 0048 8d85 08ff ffff 488b 8d90 feff\nff48 898d 08ff ffff 4889 45b0 488b 45b0\n4881 3800 0000 000f 85df 0000 0048 8b85\n48ff ffff 488b 0848 8b49 e848 01c8 4889\n4590 c745 8c05 0000 0048 8b45 9048 8945\na0c7 459c 0500 0000 488b 45a0 8b50 2083\nca05 4889 c789 d6e8 7407 0000 e900 0000\n00e9 0000 0000 e991 0000 0089 d148 8985\n20ff ffff 898d 1cff ffff e93a 0000 0089\nd148 8985 a0fe ffff 898d 9cfe ffff e900\n0000 008b 859c feff ff48 8b8d a0fe ffff\n488d bd28 ffff ff48 898d 20ff ffff 8985\n1cff ffff e8ff 0600 0048 8bbd 20ff ffff\ne82f 0700 0048 8bbd 48ff ffff 488b 0f48\n8b49 e848 01cf 4889 8588 feff ffe8 e806\n0000 e900 0000 00e8 0e07 0000 488b 8548\nffff ff48 81c4 8001 0000 5dc3 e900 0000\n0048 8dbd 28ff ffff e8ab 0600 00e9 daff\nffff 89d1 4889 8520 ffff ff89 8d1c ffff\nffe8 d406 0000 e900 0000 00e9 0000 0000\n488b bd20 ffff ffe8 ca06 0000 89d1 4889\nc789 8d84 feff ffe8 b4d2 ffff 0f1f 4000\n5548 89e5 4883 ec10 4889 7df8 488b 7df8\ne8b9 0600 0048 83c4 105d c30f 1f44 0000\n5548 89e5 4881 ece0 0100 0044 88c8 4889\nbdc8 feff ff48 89b5 c0fe ffff 4889 95b8\nfeff ff48 898d b0fe ffff 4c89 85a8 feff\nff88 85a7 feff ff48 81bd c8fe ffff 0000\n0000 0f85 1300 0000 488b 85c8 feff ff48\n8985 d0fe ffff e977 0400 0048 8b85 b0fe\nffff 488b 8dc0 feff ff48 29c8 4889 8598\nfeff ff48 8b85 a8fe ffff 4889 85d8 feff\nff48 8b85 d8fe ffff 488b 4018 4889 8590\nfeff ff48 8b85 90fe ffff 483b 8598 feff\nff0f 8e1d 0000 0048 8b85 98fe ffff 488b\n8d90 feff ff48 29c1 4889 8d90 feff ffe9\n0b00 0000 48c7 8590 feff ff00 0000 0048\n8b85 b8fe ffff 488b 8dc0 feff ff48 29c8\n4889 8588 feff ff48 81bd 88fe ffff 0000\n0000 0f8e 7b00 0000 488b 85c8 feff ff48\n8b8d c0fe ffff 488b 9588 feff ff48 8985\n20ff ffff 4889 8d18 ffff ff48 8995 10ff\nffff 488b 8520 ffff ff48 8b08 488b 4960\n488b b518 ffff ff48 8b95 10ff ffff 4889\nc7ff d148 3b85 88fe ffff 0f84 1e00 0000\n48c7 85c8 feff ff00 0000 0048 8b85 c8fe\nffff 4889 85d0 feff ffe9 6403 0000 e900\n0000 0048 81bd 90fe ffff 0000 0000 0f8e\n6602 0000 488d 8570 feff ff48 8b8d 90fe\nffff 8a95 a7fe ffff 4889 8538 ffff ff48\n898d 30ff ffff 8895 2fff ffff 488b 8538\nffff ff48 8b8d 30ff ffff 8a95 2fff ffff\n4889 8550 ffff ff48 898d 48ff ffff 8895\n47ff ffff 488b 8550 ffff ff48 8985 58ff\nffff 488b 8d58 ffff ff48 898d 60ff ffff\n488b 8d60 ffff ff48 898d 68ff ffff 488b\n8d68 ffff ff48 898d 70ff ffff 488b b548\nffff ff48 89c7 0fbe 9547 ffff ffe8 0804\n0000 488d 8570 feff ff48 8b8d c8fe ffff\n4889 8578 ffff ff48 8b85 78ff ffff 4889\n4580 488b 4580 4889 4588 488b 7588 4889\n7590 488b 7590 4889 7598 488b 7598 0fb6\n1681 e201 0000 0081 fa00 0000 0048 898d\n58fe ffff 4889 8550 feff ff0f 842f 0000\n0048 8b85 50fe ffff 4889 45c8 488b 4dc8\n4889 4dd0 488b 4dd0 4889 4dd8 488b 4dd8\n488b 4910 4889 8d48 feff ffe9 3d00 0000\n488b 8550 feff ff48 8945 a048 8b4d a048\n894d a848 8b4d a848 894d b048 8b4d b048\n81c1 0100 0000 4889 4db8 488b 4db8 4889\n4dc0 488b 4dc0 4889 8d48 feff ff48 8b85\n48fe ffff 4889 45e0 488b 8d90 feff ff48\n8b95 58fe ffff 4889 55f8 4889 45f0 4889\n4de8 488b 45f8 488b 3048 8b76 6048 8b7d\nf048 89bd 40fe ffff 4889 c748 8b85 40fe\nffff 4889 b538 feff ff48 89c6 4889 ca48\n8b8d 38fe ffff ffd1 4889 8530 feff ffe9\n0000 0000 e900 0000 0048 8b85 30fe ffff\n483b 8590 feff ff0f 8448 0000 0048 c785\nc8fe ffff 0000 0000 488b 85c8 feff ff48\n8985 d0fe ffff c785 60fe ffff 0100 0000\ne92a 0000 0048 8dbd 70fe ffff 89d1 4889\n8568 feff ff89 8d64 feff ffe8 8002 0000\ne92d 0100 00c7 8560 feff ff00 0000 0048\n8dbd 70fe ffff e865 0200 008b 8560 feff\nff83 e801 8985 2cfe ffff 0f84 f200 0000\ne900 0000 00e9 0000 0000 488b 85b0 feff\nff48 8b8d b8fe ffff 4829 c848 8985 88fe\nffff 4881 bd88 feff ff00 0000 000f 8e7b\n0000 0048 8b85 c8fe ffff 488b 8db8 feff\nff48 8b95 88fe ffff 4889 8508 ffff ff48\n898d 00ff ffff 4889 95f8 feff ff48 8b85\n08ff ffff 488b 0848 8b49 6048 8bb5 00ff\nffff 488b 95f8 feff ff48 89c7 ffd1 483b\n8588 feff ff0f 841e 0000 0048 c785 c8fe\nffff 0000 0000 488b 85c8 feff ff48 8985\nd0fe ffff e949 0000 00e9 0000 0000 488b\n85a8 feff ff48 8985 f0fe ffff 48c7 85e8\nfeff ff00 0000 0048 8b85 f0fe ffff 488b\n4818 4889 8de0 feff ff48 8b8d e8fe ffff\n4889 4818 488b 85c8 feff ff48 8985 d0fe\nffff 488b 85d0 feff ff48 81c4 e001 0000\n5dc3 488b bd68 feff ffe8 a801 0000 6690\n5548 89e5 897d fc89 75f8 8b75 fc3b 75f8\n0f94 c024 010f b6c0 5dc3 660f 1f44 0000\n5548 89e5 b8ff ffff ff5d c390 ff25 a606\n0000 ff25 a806 0000 ff25 aa06 0000 ff25\nac06 0000 ff25 ae06 0000 ff25 b006 0000\nff25 b206 0000 ff25 b406 0000 ff25 b606\n0000 ff25 b806 0000 ff25 ba06 0000 ff25\nbc06 0000 ff25 be06 0000 ff25 c006 0000\nff25 c206 0000 ff25 c406 0000 ff25 c606\n0000 ff25 c806 0000 ff25 ca06 0000 ff25\ncc06 0000 ff25 ce06 0000 ff25 d006 0000\nff25 d206 0000 ff25 d406 0000 ff25 d606\n0000 ff25 d806 0000 ff25 da06 0000 ff25\ndc06 0000 ff25 de06 0000 ff25 e006 0000\nff25 e206 0000 ff25 e406 0000 ff25 e606\n0000 ff25 e806 0000 ff25 ea06 0000 ff25\nec06 0000 ff25 ee06 0000 ff25 f006 0000\nff25 f206 0000 ff25 f406 0000 ff25 f606\n0000 ff25 f806 0000 ff25 fa06 0000 ff25\nfc06 0000 ff25 fe06 0000 ff25 0007 0000\nff25 0207 0000 ff25 0407 0000 ff25 0607\n0000 ff25 0807 0000 ff25 0a07 0000 ff25\n0c07 0000 ff25 0e07 0000 ff25 1007 0000\nff25 1207 0000 ff25 1407 0000 ff25 1607\n0000 ff25 1807 0000 ff25 1a07 0000 ff25\n1c07 0000 ff25 1e07 0000 ff25 2007 0000\nff25 2207 0000 ff25 2407 0000 ff25 2607\n0000 ff25 2807 0000 ff25 2a07 0000 ff25\n2c07 0000 4c8d 1dad 0400 0041 53ff 259d\n0400 0090 6800 0000 00e9 e6ff ffff 6847\n0000 00e9 dcff ffff 6875 0000 00e9 d2ff\nffff 689a 0000 00e9 c8ff ffff 68ec 0000\n00e9 beff ffff 6838 0100 00e9 b4ff ffff\n6876 0100 00e9 aaff ffff 68b6 0100 00e9\na0ff ffff 68fc 0100 00e9 96ff ffff 683f\n0200 00e9 8cff ffff 687b 0200 00e9 82ff\nffff 6898 0200 00e9 78ff ffff 68d8 0200\n00e9 6eff ffff 68fb 0200 00e9 64ff ffff\n6817 0300 00e9 5aff ffff 682f 0300 00e9\n50ff ffff 6850 0300 00e9 46ff ffff 686a\n0300 00e9 3cff ffff 6882 0300 00e9 32ff\nffff 6896 0300 00e9 28ff ffff 68ad 0300\n00e9 1eff ffff 68c6 0300 00e9 14ff ffff\n68d5 0300 00e9 0aff ffff 68e4 0300 00e9\n00ff ffff 0000 0000 0000 0000 0000 0000\n54e3 a59b c420 0940 9a99 9999 9999 f13f\n0000 0000 0000 0000 0000 0000 0000 0000\n4e53 7433 5f5f 3131 305f 5f66 756e 6374\n696f 6e36 5f5f 6675 6e63 4950 4664 6964\n454e 535f 3961 6c6c 6f63 6174 6f72 4953\n335f 4545 5332 5f45 4500 0000 0000 0000\n4e53 7433 5f5f 3131 305f 5f66 756e 6374\n696f 6e36 5f5f 6261 7365 4946 6469 6445\n4545 0050 4664 6964 4500 4664 6964 4500\n4e53 7433 5f5f 3131 3762 6164 5f66 756e\n6374 696f 6e5f 6361 6c6c 4500 ff9b c380\n0003 4100 0000 003a 0000 0000 0000 0000\n3a00 0000 1000 0000 7f01 0000 005b 0000\n009f 0000 009f 0100 0000 ff00 0000 3f00\n0000 b301 0000 003e 0100 00aa 0000 0000\n0000 0000 ff9b 2903 2700 0000 0037 0000\n0000 0000 0000 3700 0000 0d00 0000 7000\n0000 0044 0000 004c 0000 0000 0000 0000\nff9b 9c00 031a 8700 0000 0c00 0000 a100\n0000 0093 0000 002c 0000 0000 0000 0000\nff9b 2903 2700 0000 0044 0000 0000 0000\n0000 4400 0000 4c00 0000 9800 0000 0090\n0000 005f 0000 0000 0000 0000 ff9b 2903\n2700 0000 0038 0300 0000 0000 0000 3803\n0000 1300 0000 6503 0000 004b 0300 0041\n0000 0000 0000 0000 ff9b 8181 8080 0003\n7527 0000 000c 0000 006b 0300 0005 d701\n0000 0900 0000 7f03 0000 05ed 0100 005e\n0000 0056 0200 0003 bc02 0000 a000 0000\n7f03 0000 055c 0300 007a 0000 0000 0000\n0000 d603 0000 0c00 0000 1204 0000 00e2\n0300 003f 0000 0000 0000 0000 2104 0000\n0500 0000 3c04 0000 0526 0400 0026 0000\n0000 0000 0000 0000 017d 0100 0000 0000\nff9b 2903 2700 0000 0021 0300 0000 0000\n0000 2103 0000 2700 0000 9503 0000 0048\n0300 00a6 0100 0000 0000 0000 636f 6d70\n7574 6564 3a20 2e2e 2e2d 3e00 6d65 6d6f\n697a 6564 3a20 2e2e 2e2d 3e00 0100 0000\n1c00 0000 0300 0000 2800 0000 0100 0000\n2c00 0000 0200 0000 0000 0001 0000 0051\n2100 0201 5850 0000 8008 0000 7c00 0000\n4400 0000 bc49 0000 0000 0000 7c00 0000\nb008 0000 0c4d 0000 4014 0000 544d 0000\nb02a 0000 804d 0000 502d 0000 a04d 0000\n9030 0000 cc4d 0000 3040 0000 f84d 0000\na044 0000 804e 0000 0300 0000 0c00 1700\n6800 0300 0000 0000 3000 0001 2002 0000\nc00b 0001 500c 0000 b00e 0005 d00e 0004\n8011 0000 d011 0003 a01b 0002 601f 0000\n3022 0001 f022 0000 d024 0001 c025 0000\n1028 0001 a02b 0000 002c 0002 502f 0000\nb037 0001 003c 0000 203c 0001 1041 0000\nd158 0501 0100 0101 0000 0000 0000 0000\n1400 0000 0000 0000 037a 5200 0178 1001\n100c 0708 9001 0000 1c00 0000 0000 0000\n037a 504c 5200 0178 1007 9b6d 0000 0010\n100c 0708 9001 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\na02f 0000 0100 0000 0000 0000 0000 0000\n0000 0000 0000 0000 a053 0000 0100 0000\n8053 0000 0100 0000 1853 0000 0100 0000\n9052 0000 0100 0000 b853 0000 0100 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 4014 0000 0100 0000\nd00a 0000 0100 0000 b02a 0000 0100 0000\nd014 0000 0100 0000 f014 0000 0100 0000\n100b 0000 0100 0000 903c 0000 0100 0000\nf03a 0000 0100 0000 003e 0000 0100 0000\nf037 0000 0100 0000 402c 0000 0100 0000\n001a 0000 0100 0000 a029 0000 0100 0000\n9049 0000 0100 0000 b049 0000 0100 0000\n8044 0000 0100 0000 7015 0000 0100 0000\n4034 0000 0100 0000 0039 0000 0100 0000\nd037 0000 0100 0000 203e 0000 0100 0000\n802f 0000 0100 0000 c02f 0000 0100 0000\na02f 0000 0100 0000 3030 0000 0100 0000\n3040 0000 0100 0000 c029 0000 0100 0000\n9030 0000 0100 0000 8030 0000 0100 0000\n5030 0000 0100 0000 2034 0000 0100 0000\n8034 0000 0100 0000 3015 0000 0100 0000\n5015 0000 0100 0000 702b 0000 0100 0000\na00a 0000 0100 0000 a02b 0000 0100 0000\n5017 0000 0100 0000 f00a 0000 0100 0000\n402a 0000 0100 0000 002d 0000 0100 0000\n402e 0000 0100 0000 644b 0000 0100 0000\n6e4b 0000 0100 0000 784b 0000 0100 0000\n824b 0000 0100 0000 8c4b 0000 0100 0000\n964b 0000 0100 0000 a04b 0000 0100 0000\naa4b 0000 0100 0000 b44b 0000 0100 0000\nbe4b 0000 0100 0000 c84b 0000 0100 0000\nd24b 0000 0100 0000 dc4b 0000 0100 0000\ne64b 0000 0100 0000 f04b 0000 0100 0000\n0000 0000 0000 0000 0000 0000 0000 0000\nfa4b 0000 0100 0000 044c 0000 0100 0000\n0e4c 0000 0100 0000 184c 0000 0100 0000\n224c 0000 0100 0000 2c4c 0000 0100 0000\n364c 0000 0100 0000 404c 0000 0100 0000\n4a4c 0000 0100 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0053 0000 0100 0000\n001a 0000 0100 0000 201a 0000 0100 0000\n501a 0000 0100 0000 2024 0000 0100 0000\ne027 0000 0100 0000 f027 0000 0100 0000\n6028 0000 0100 0000 c028 0000 0100 0000\n3029 0000 0100 0000 1000 0000 0000 0000\nc04c 0000 0100 0000 0000 0000 0000 0000\n1000 0000 0000 0000 804c 0000 0100 0000\ne852 0000 0100 0000 0000 0000 0000 0000\ne852 0000 0100 0000 5029 0000 0100 0000\n7029 0000 0100 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n1000 0000 0000 0000 ea4c 0000 0100 0000\n1000 0000 0000 0000 e34c 0000 0100 0000\n0000 0000 0000 0000 7053 0000 0100 0000\n1000 0000 0000 0000 f04c 0000 0100 0000\n0000 0000 0000 0000 0000 0000 0000 0000\na053 0000 0100 0000 a02f 0000 0100 0000\n0030 0000 0100 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n1122 1070 1055 4360 3942 5942 5a41 7010\n5241 5348 8003 0870 1053 0000 0000 0000\n1140 5f5f 5a4e 4b53 7439 6578 6365 7074\n696f 6e34 7768 6174 4576 0051 72d8 0790\n405f 5f5a 4e53 7433 5f5f 3134 636f 7574\n4500 80b8 f8ff ffff ffff ffff 0190 405f\n5f5a 4e53 7433 5f5f 3135 6374 7970 6549\n6345 3269 6445 0090 405f 5f5a 5449 5374\n3965 7863 6570 7469 6f6e 0080 8807 9040\n5f5f 5a54 564e 3130 5f5f 6378 7861 6269\n7631 3137 5f5f 636c 6173 735f 7479 7065\n5f69 6e66 6f45 0080 b0fe ffff ffff ffff\nff01 6010 9040 5f5f 5a54 564e 3130 5f5f\n6378 7861 6269 7631 3139 5f5f 706f 696e\n7465 725f 7479 7065 5f69 6e66 6f45 0080\n9001 9040 5f5f 5a54 564e 3130 5f5f 6378\n7861 6269 7631 3230 5f5f 6675 6e63 7469\n6f6e 5f74 7970 655f 696e 666f 4500 80e8\nffff ffff ffff ffff 0190 405f 5f5a 5456\n4e31 305f 5f63 7878 6162 6976 3132 305f\n5f73 695f 636c 6173 735f 7479 7065 5f69\n6e66 6f45 0080 88ff ffff ffff ffff ff01\na098 0190 405f 5f5a 5456 5374 3965 7863\n6570 7469 6f6e 0080 a8f9 ffff ffff ffff\nff01 6000 9040 5f5f 5a64 6c50 7600 80d8\n03a0 f8ff ffff ffff ffff ff01 9040 5f5f\n5a6e 776d 00a0 f8ff ffff ffff ffff ff01\n9040 5f5f 5f63 7861 5f70 7572 655f 7669\n7274 7561 6c00 80f8 0190 9090 9090 9090\n405f 5f5f 6778 785f 7065 7273 6f6e 616c\n6974 795f 7630 0080 e8f9 ffff ffff ffff\nff01 9012 405f 5f5f 7374 6163 6b5f 6368\n6b5f 6775 6172 6400 9040 6479 6c64 5f73\n7475 625f 6269 6e64 6572 0080 98ff ffff\nffff ffff ff01 9000 405f 5f5a 5449 4664\n6964 4500 5172 9807 9040 5f5f 5a54 494e\n5374 335f 5f31 3130 5f5f 6675 6e63 7469\n6f6e 365f 5f62 6173 6549 4664 6964 4545\n4500 80f0 feff ffff ffff ffff 01b1 9040\n5f5f 5a54 494e 5374 335f 5f31 3130 5f5f\n6675 6e63 7469 6f6e 365f 5f66 756e 6349\n5046 6469 6445 4e53 5f39 616c 6c6f 6361\n746f 7249 5333 5f45 4553 325f 4545 0080\nf0fe ffff ffff ffff ff01 9040 5f5f 5a54\n494e 5374 335f 5f31 3137 6261 645f 6675\n6e63 7469 6f6e 5f63 616c 6c45 0080 88fb\nffff ffff ffff ff01 a090 0790 405f 5f5a\n5449 5046 6469 6445 0080 e8f8 ffff ffff\nffff ff01 9040 5f5f 5a54 5346 6469 6445\n0080 c006 9040 5f5f 5a54 534e 5374 335f\n5f31 3130 5f5f 6675 6e63 7469 6f6e 365f\n5f62 6173 6549 4664 6964 4545 4500 80f0\nfeff ffff ffff ffff 0190 405f 5f5a 5453\n4e53 7433 5f5f 3131 305f 5f66 756e 6374\n696f 6e36 5f5f 6675 6e63 4950 4664 6964\n454e 535f 3961 6c6c 6f63 6174 6f72 4953\n335f 4545 5332 5f45 4500 8010 9040 5f5f\n5a54 534e 5374 335f 5f31 3137 6261 645f\n6675 6e63 7469 6f6e 5f63 616c 6c45 0080\n9801 9040 5f5f 5a54 5350 4664 6964 4500\n80d8 ffff ffff ffff ffff 0190 405f 5f5a\n646c 5076 0080 a0fd ffff ffff ffff ff01\na0f8 ffff ffff ffff ffff 0190 405f 5f5a\n6e77 6d00 a0f8 ffff ffff ffff ffff 0190\n0000 0000 0000 0000 72b8 0311 405f 5f5a\n4e4b 5374 335f 5f31 3230 5f5f 7665 6374\n6f72 5f62 6173 655f 636f 6d6d 6f6e 494c\n6231 4545 3230 5f5f 7468 726f 775f 6c65\n6e67 7468 5f65 7272 6f72 4576 0090 0072\nc003 1140 5f5f 5a4e 4b53 7433 5f5f 3136\n6c6f 6361 6c65 3975 7365 5f66 6163 6574\n4552 4e53 305f 3269 6445 0090 0072 c803\n1140 5f5f 5a4e 4b53 7433 5f5f 3138 696f\n735f 6261 7365 3667 6574 6c6f 6345 7600\n9000 72d0 0311 405f 5f5a 4e53 7433 5f5f\n3131 3262 6173 6963 5f73 7472 696e 6749\n634e 535f 3131 6368 6172 5f74 7261 6974\n7349 6345 454e 535f 3961 6c6c 6f63 6174\n6f72 4963 4545 4536 5f5f 696e 6974 456d\n6300 9000 72d8 0311 405f 5f5a 4e53 7433\n5f5f 3131 3262 6173 6963 5f73 7472 696e\n6749 634e 535f 3131 6368 6172 5f74 7261\n6974 7349 6345 454e 535f 3961 6c6c 6f63\n6174 6f72 4963 4545 4544 3145 7600 9000\n72e0 0311 405f 5f5a 4e53 7433 5f5f 3131\n3362 6173 6963 5f6f 7374 7265 616d 4963\n4e53 5f31 3163 6861 725f 7472 6169 7473\n4963 4545 4533 7075 7445 6300 9000 72e8\n0311 405f 5f5a 4e53 7433 5f5f 3131 3362\n6173 6963 5f6f 7374 7265 616d 4963 4e53\n5f31 3163 6861 725f 7472 6169 7473 4963\n4545 4535 666c 7573 6845 7600 9000 72f0\n0311 405f 5f5a 4e53 7433 5f5f 3131 3362\n6173 6963 5f6f 7374 7265 616d 4963 4e53\n5f31 3163 6861 725f 7472 6169 7473 4963\n4545 4536 7365 6e74 7279 4331 4552 5333\n5f00 9000 72f8 0311 405f 5f5a 4e53 7433\n5f5f 3131 3362 6173 6963 5f6f 7374 7265\n616d 4963 4e53 5f31 3163 6861 725f 7472\n6169 7473 4963 4545 4536 7365 6e74 7279\n4431 4576 0090 0072 8004 1140 5f5f 5a4e\n5374 335f 5f31 3133 6261 7369 635f 6f73\n7472 6561 6d49 634e 535f 3131 6368 6172\n5f74 7261 6974 7349 6345 4545 6c73 4564\n0090 0072 8804 1140 5f5f 5a4e 5374 335f\n5f31 366c 6f63 616c 6544 3145 7600 9000\n7290 0411 405f 5f5a 4e53 7433 5f5f 3138\n696f 735f 6261 7365 3333 5f5f 7365 745f\n6261 6462 6974 5f61 6e64 5f63 6f6e 7369\n6465 725f 7265 7468 726f 7745 7600 9000\n7298 0411 405f 5f5a 4e53 7433 5f5f 3138\n696f 735f 6261 7365 3563 6c65 6172 456a\n0090 0072 a004 1140 5f5f 5a4e 5374 3965\n7863 6570 7469 6f6e 4432 4576 0090 0072\na804 1140 5f5f 5a53 7439 7465 726d 696e\n6174 6576 0090 0072 c004 1140 5f5f 5f63\n7861 5f61 6c6c 6f63 6174 655f 6578 6365\n7074 696f 6e00 9000 72c8 0411 405f 5f5f\n6378 615f 6265 6769 6e5f 6361 7463 6800\n9000 72d0 0411 405f 5f5f 6378 615f 656e\n645f 6361 7463 6800 9000 72d8 0411 405f\n5f5f 6378 615f 7468 726f 7700 9000 72e0\n0412 405f 5f55 6e77 696e 645f 5265 7375\n6d65 0090 0072 e804 1240 5f5f 5f73 7461\n636b 5f63 686b 5f66 6169 6c00 9000 72f0\n0412 405f 6d65 6d63 7079 0090 0072 f804\n1240 5f6d 656d 7365 7400 9000 7280 0512\n405f 7374 726c 656e 0090 0000 0000 0000\n0001 5f00 0500 025f 0010 6d61 696e 0046\n0002 6d68 5f65 7865 6375 7465 5f68 6561\n6465 7200 285a 002c 0200 0000 0002 3130\n6675 6e6e 7954 6869 6e67 6964 0041 5400\n4b03 0080 1100 0300 b011 0000 0253 0054\n4900 ef01 0003 4e53 7433 5f5f 3131 0071\n5046 6469 6445 00dd 0146 6469 6445 00e3\n0100 0230 5f5f 6675 6e63 7469 6f6e 365f\n5f00 9a01 3762 6164 5f66 756e 6374 696f\n6e5f 6361 6c6c 4500 e901 0002 6675 6e63\n4950 4664 6964 454e 535f 3961 6c6c 6f63\n6174 6f72 4953 335f 4545 5332 5f45 4500\nd101 6261 7365 4946 6469 6445 4545 00d7\n0104 0480 9901 0004 04c0 9901 0004 04e3\n9901 0004 04ea 9901 0004 04f0 9901 0000\n034e 5374 335f 5f31 3100 8d02 4664 6964\n4500 f902 5046 6469 6445 00ff 0200 0230\n5f5f 6675 6e63 7469 6f6e 365f 5f00 b602\n3762 6164 5f66 756e 6374 696f 6e5f 6361\n6c6c 4500 8503 0002 6261 7365 4946 6469\n6445 4545 00ed 0266 756e 6349 5046 6469\n6445 4e53 5f39 616c 6c6f 6361 746f 7249\n5333 5f45 4553 325f 4545 00f3 0204 04e8\na501 0004 0480 a601 0004 04f0 a601 0004\n0480 a701 0004 04a0 a701 0000 0000 0000\n8011 30f0 0330 2020 b012 9001 2040 2020\nc003 20b0 0520 30d0 13c0 0710 7060 7020\n2030 2080 0170 c001 30a0 01c0 0150 f001\nc002 2020 4030 2030 1090 0720 40d0 0620\n9002 f003 a003 f002 2090 04d0 0820 f009\n2000 0000 0000 0000 0200 0000 1e01 8000\na00a 0000 0100 0000 7800 0000 1e01 8000\nd00a 0000 0100 0000 a600 0000 1e01 8000\nf00a 0000 0100 0000 c500 0000 1e01 8000\n100b 0000 0100 0000 df00 0000 1e01 8000\n4014 0000 0100 0000 1001 0000 1e01 8000\nd014 0000 0100 0000 2901 0000 1e01 8000\nf014 0000 0100 0000 4201 0000 1e01 8000\n3015 0000 0100 0000 8901 0000 1e01 8000\n5015 0000 0100 0000 d001 0000 1e01 8000\n7015 0000 0100 0000 1f02 0000 1e01 8000\n3017 0000 0100 0000 3702 0000 1e01 8000\n5017 0000 0100 0000 ad02 0000 1e01 8000\n001a 0000 0100 0000 ed02 0000 1e01 8000\n201a 0000 0100 0000 2d03 0000 1e01 8000\n501a 0000 0100 0000 7403 0000 1e01 8000\n2024 0000 0100 0000 cc03 0000 1e01 8000\ne027 0000 0100 0000 1204 0000 1e01 8000\nf027 0000 0100 0000 6404 0000 1e01 8000\n6028 0000 0100 0000 a704 0000 1e01 8000\nc028 0000 0100 0000 fa04 0000 1e01 8000\n3029 0000 0100 0000 4605 0000 1e01 8000\n5029 0000 0100 0000 6f05 0000 1e01 8000\n7029 0000 0100 0000 9805 0000 1e01 8000\na029 0000 0100 0000 d805 0000 1e01 8000\nc029 0000 0100 0000 1f06 0000 1e01 8000\n402a 0000 0100 0000 3e06 0000 1e01 8000\nb02a 0000 0100 0000 6c06 0000 1e01 8000\n702b 0000 0100 0000 8f06 0000 1e01 8000\na02b 0000 0100 0000 b206 0000 1e01 8000\n402c 0000 0100 0000 d306 0000 1e01 8000\n002d 0000 0100 0000 1607 0000 1e01 8000\n502d 0000 0100 0000 5c07 0000 1e01 8000\n402e 0000 0100 0000 a707 0000 1e01 8000\n802f 0000 0100 0000 c907 0000 1e01 8000\na02f 0000 0100 0000 eb07 0000 1e01 8000\nc02f 0000 0100 0000 0d08 0000 1e01 8000\n0030 0000 0100 0000 2f08 0000 1e01 8000\n3030 0000 0100 0000 5108 0000 1e01 8000\n5030 0000 0100 0000 b708 0000 1e01 8000\n8030 0000 0100 0000 1d09 0000 1e01 8000\n9030 0000 0100 0000 8109 0000 1e01 8000\n2034 0000 0100 0000 e709 0000 1e01 8000\n4034 0000 0100 0000 3c0a 0000 1e01 8000\n8034 0000 0100 0000 ba0a 0000 1e01 8000\nd037 0000 0100 0000 0b0b 0000 1e01 8000\nf037 0000 0100 0000 5a0b 0000 1e01 8000\n0039 0000 0100 0000 af0b 0000 1e01 8000\nf03a 0000 0100 0000 080c 0000 1e01 8000\n903c 0000 0100 0000 5e0c 0000 1e01 8000\n003e 0000 0100 0000 d00c 0000 1e01 8000\n203e 0000 0100 0000 210d 0000 1e01 8000\n3040 0000 0100 0000 820d 0000 1e01 8000\n8044 0000 0100 0000 a80d 0000 1e01 8000\na044 0000 0100 0000 1c0e 0000 1e01 8000\n9049 0000 0100 0000 470e 0000 1e01 8000\nb049 0000 0100 0000 680e 0000 0e04 0000\n704c 0000 0100 0000 8a0e 0000 0e05 0000\n0c4d 0000 0100 0000 9c0e 0000 0e05 0000\n544d 0000 0100 0000 ae0e 0000 0e05 0000\n804d 0000 0100 0000 c10e 0000 0e05 0000\na04d 0000 0100 0000 d40e 0000 0e05 0000\ncc4d 0000 0100 0000 e70e 0000 0e05 0000\nf84d 0000 0100 0000 fa0e 0000 0e05 0000\n804e 0000 0100 0000 0d0f 0000 1e0c 8000\n9052 0000 0100 0000 4c0f 0000 1e0c 8000\n1853 0000 0100 0000 740f 0000 1e0c 8000\nb853 0000 0100 0000 950f 0000 0f01 0000\n8008 0000 0100 0000 a70f 0000 0f0c 8000\n7053 0000 0100 0000 b20f 0000 0f0c 8000\ne852 0000 0100 0000 da0f 0000 0f0c 8000\n0053 0000 0100 0000 1910 0000 0f0c 8000\na053 0000 0100 0000 3a10 0000 0f0c 8000\n8053 0000 0100 0000 4610 0000 0f04 8000\nea4c 0000 0100 0000 5110 0000 0f04 8000\nc04c 0000 0100 0000 7910 0000 0f04 8000\n804c 0000 0100 0000 b810 0000 0f04 8000\nf04c 0000 0100 0000 d910 0000 0f04 8000\ne34c 0000 0100 0000 e510 0000 0f01 1000\n0000 0000 0100 0000 f910 0000 0f01 0000\nb008 0000 0100 0000 ff10 0000 0100 0002\n0000 0000 0000 0000 0f11 0000 0100 0001\n0000 0000 0000 0000 4f11 0000 0100 0001\n0000 0000 0000 0000 7611 0000 0100 0001\n0000 0000 0000 0000 9411 0000 0100 0001\n0000 0000 0000 0000 ad11 0000 0100 0001\n0000 0000 0000 0000 f811 0000 0100 0001\n0000 0000 0000 0000 3d12 0000 0100 0001\n0000 0000 0000 0000 7412 0000 0100 0001\n0000 0000 0000 0000 ad12 0000 0100 0001\n0000 0000 0000 0000 ec12 0000 0100 0001\n0000 0000 0000 0000 2813 0000 0100 0001\n0000 0000 0000 0000 5d13 0000 0100 0001\n0000 0000 0000 0000 6e13 0000 0100 0001\n0000 0000 0000 0000 8613 0000 0100 0001\n0000 0000 0000 0000 9c13 0000 0100 0001\n0000 0000 0000 0000 d513 0000 0100 0001\n0000 0000 0000 0000 f113 0000 0100 0001\n0000 0000 0000 0000 0614 0000 0100 0001\n0000 0000 0000 0000 1714 0000 0100 0001\n0000 0000 0000 0000 2914 0000 0100 0001\n0000 0000 0000 0000 5014 0000 0100 0001\n0000 0000 0000 0000 7914 0000 0100 0001\n0000 0000 0000 0000 a314 0000 0100 0001\n0000 0000 0000 0000 cd14 0000 0100 0001\n0000 0000 0000 0000 df14 0000 0100 8001\n0000 0000 0000 0000 e714 0000 0100 8001\n0000 0000 0000 0000 ee14 0000 0100 0001\n0000 0000 0000 0000 0815 0000 0100 0001\n0000 0000 0000 0000 1b15 0000 0100 0001\n0000 0000 0000 0000 2c15 0000 0100 0001\n0000 0000 0000 0000 4015 0000 0100 0001\n0000 0000 0000 0000 4d15 0000 0100 0001\n0000 0000 0000 0000 6315 0000 0100 0002\n0000 0000 0000 0000 7515 0000 0100 0002\n0000 0000 0000 0000 8815 0000 0100 0002\n0000 0000 0000 0000 9015 0000 0100 0002\n0000 0000 0000 0000 9815 0000 0100 0002\n0000 0000 0000 0000 a015 0000 0100 0002\n0000 0000 0000 0000 0400 0000 0100 0000\n1a00 0000 0500 0000 0600 0000 0300 0000\n3000 0000 2f00 0000 3100 0000 2d00 0000\n1d00 0000 0c00 0000 1700 0000 3600 0000\n3700 0000 3400 0000 0900 0000 2a00 0000\n2e00 0000 2c00 0000 3200 0000 2100 0000\n2300 0000 2200 0000 2500 0000 3300 0000\n1800 0000 2800 0000 2700 0000 2600 0000\n2900 0000 2b00 0000 0700 0000 0800 0000\n1b00 0000 0000 0000 1c00 0000 0b00 0000\n0200 0000 1900 0000 1e00 0000 2000 0000\n5100 0000 5200 0000 5300 0000 5500 0000\n5600 0000 5700 0000 5800 0000 5900 0000\n5a00 0000 5b00 0000 5e00 0000 5f00 0000\n6000 0000 6100 0000 6200 0000 6900 0000\n6a00 0000 6b00 0000 6c00 0000 6d00 0000\n6f00 0000 5000 0000 7100 0000 7300 0000\n7400 0000 7500 0000 7600 0000 0000 0040\n0000 0080 5c00 0000 5d00 0000 4700 0000\n4800 0000 0000 0080 0000 0080 0000 0080\n6800 0000 7000 0000 7200 0000 0400 0000\n0100 0000 1a00 0000 0500 0000 0600 0000\n0300 0000 3000 0000 2f00 0000 3100 0000\n2d00 0000 1d00 0000 0c00 0000 1700 0000\n3600 0000 3700 0000 3400 0000 0900 0000\n2a00 0000 2e00 0000 2c00 0000 3200 0000\n2100 0000 2300 0000 2200 0000 2500 0000\n3300 0000 1800 0000 2800 0000 2700 0000\n2600 0000 2900 0000 2b00 0000 0700 0000\n0800 0000 1b00 0000 0000 0000 1c00 0000\n0b00 0000 0200 0000 1900 0000 1e00 0000\n2000 0000 5100 0000 5200 0000 5300 0000\n5500 0000 5600 0000 5700 0000 5800 0000\n5900 0000 5a00 0000 5b00 0000 5e00 0000\n5f00 0000 6000 0000 6100 0000 6200 0000\n6900 0000 6a00 0000 6b00 0000 6c00 0000\n6d00 0000 6f00 0000 5000 0000 7100 0000\n7300 0000 7400 0000 7500 0000 2000 5f5f\n5a4e 5374 335f 5f31 3866 756e 6374 696f\n6e49 4664 6964 4545 4331 4950 5331 5f45\n4554 5f50 4e53 5f39 656e 6162 6c65 5f69\n6649 5861 6173 7231 305f 5f63 616c 6c61\n626c 6549 5335 5f45 4535 7661 6c75 656e\n7473 7237 6973 5f73 616d 6549 5335 5f53\n325f 4545 3576 616c 7565 4576 4534 7479\n7065 4500 5f5f 5a4e 384d 656d 6f69 7a65\n4749 4664 6964 4545 4331 454e 5374 335f\n5f31 3866 756e 6374 696f 6e49 5330 5f45\n4500 5f5f 5a4e 5374 335f 5f31 3866 756e\n6374 696f 6e49 4664 6964 4545 4431 4576\n005f 5f5a 4e38 4d65 6d6f 697a 6547 4946\n6469 6445 4563 6c45 6964 005f 5f5a 3132\n4d61 6b65 4d65 6d6f 697a 6547 4964 4a69\n6445 4538 4d65 6d6f 697a 6547 4946 545f\n4470 5430 5f45 4550 5334 5f00 5f5f 5a4e\n384d 656d 6f69 7a65 4749 4664 6964 4545\n4431 4576 005f 5f5a 4e38 4d65 6d6f 697a\n6547 4946 6469 6445 4544 3245 7600 5f5f\n5a4e 5374 335f 5f31 3676 6563 746f 7249\n4e53 5f34 7061 6972 494e 535f 3574 7570\n6c65 494a 6964 4545 4564 4545 4e53 5f39\n616c 6c6f 6361 746f 7249 5334 5f45 4545\n4431 4576 005f 5f5a 4e53 7433 5f5f 3136\n7665 6374 6f72 494e 535f 3470 6169 7249\n4e53 5f35 7475 706c 6549 4a69 6445 4545\n6445 454e 535f 3961 6c6c 6f63 6174 6f72\n4953 345f 4545 4544 3245 7600 5f5f 5a4e\n5374 335f 5f31 3133 5f5f 7665 6374 6f72\n5f62 6173 6549 4e53 5f34 7061 6972 494e\n535f 3574 7570 6c65 494a 6964 4545 4564\n4545 4e53 5f39 616c 6c6f 6361 746f 7249\n5334 5f45 4545 4432 4576 005f 5f5f 636c\n616e 675f 6361 6c6c 5f74 6572 6d69 6e61\n7465 005f 5f5a 4e53 7433 5f5f 3138 6675\n6e63 7469 6f6e 4946 6469 6445 4543 3249\n5053 315f 4545 545f 504e 535f 3965 6e61\n626c 655f 6966 4958 6161 7372 3130 5f5f\n6361 6c6c 6162 6c65 4953 355f 4545 3576\n616c 7565 6e74 7372 3769 735f 7361 6d65\n4953 355f 5332 5f45 4535 7661 6c75 6545\n7645 3474 7970 6545 005f 5f5a 4e53 7433\n5f5f 3131 305f 5f66 756e 6374 696f 6e36\n5f5f 6675 6e63 4950 4664 6964 454e 535f\n3961 6c6c 6f63 6174 6f72 4953 335f 4545\n5332 5f45 4431 4576 005f 5f5a 4e53 7433\n5f5f 3131 305f 5f66 756e 6374 696f 6e36\n5f5f 6675 6e63 4950 4664 6964 454e 535f\n3961 6c6c 6f63 6174 6f72 4953 335f 4545\n5332 5f45 4430 4576 005f 5f5a 4e4b 5374\n335f 5f31 3130 5f5f 6675 6e63 7469 6f6e\n365f 5f66 756e 6349 5046 6469 6445 4e53\n5f39 616c 6c6f 6361 746f 7249 5333 5f45\n4553 325f 4537 5f5f 636c 6f6e 6545 7600\n5f5f 5a4e 4b53 7433 5f5f 3131 305f 5f66\n756e 6374 696f 6e36 5f5f 6675 6e63 4950\n4664 6964 454e 535f 3961 6c6c 6f63 6174\n6f72 4953 335f 4545 5332 5f45 375f 5f63\n6c6f 6e65 4550 4e53 305f 365f 5f62 6173\n6549 5332 5f45 4500 5f5f 5a4e 5374 335f\n5f31 3130 5f5f 6675 6e63 7469 6f6e 365f\n5f66 756e 6349 5046 6469 6445 4e53 5f39\n616c 6c6f 6361 746f 7249 5333 5f45 4553\n325f 4537 6465 7374 726f 7945 7600 5f5f\n5a4e 5374 335f 5f31 3130 5f5f 6675 6e63\n7469 6f6e 365f 5f66 756e 6349 5046 6469\n6445 4e53 5f39 616c 6c6f 6361 746f 7249\n5333 5f45 4553 325f 4531 3864 6573 7472\n6f79 5f64 6561 6c6c 6f63 6174 6545 7600\n5f5f 5a4e 5374 335f 5f31 3130 5f5f 6675\n6e63 7469 6f6e 365f 5f66 756e 6349 5046\n6469 6445 4e53 5f39 616c 6c6f 6361 746f\n7249 5333 5f45 4553 325f 4563 6c45 4f69\n4f64 005f 5f5a 4e4b 5374 335f 5f31 3130\n5f5f 6675 6e63 7469 6f6e 365f 5f66 756e\n6349 5046 6469 6445 4e53 5f39 616c 6c6f\n6361 746f 7249 5333 5f45 4553 325f 4536\n7461 7267 6574 4552 4b53 7439 7479 7065\n5f69 6e66 6f00 5f5f 5a4e 4b53 7433 5f5f\n3131 305f 5f66 756e 6374 696f 6e36 5f5f\n6675 6e63 4950 4664 6964 454e 535f 3961\n6c6c 6f63 6174 6f72 4953 335f 4545 5332\n5f45 3131 7461 7267 6574 5f74 7970 6545\n7600 5f5f 5a4e 5374 335f 5f31 3130 5f5f\n6675 6e63 7469 6f6e 365f 5f62 6173 6549\n4664 6964 4545 4431 4576 005f 5f5a 4e53\n7433 5f5f 3131 305f 5f66 756e 6374 696f\n6e36 5f5f 6261 7365 4946 6469 6445 4544\n3045 7600 5f5f 5a4e 5374 335f 5f31 3130\n5f5f 6675 6e63 7469 6f6e 365f 5f66 756e\n6349 5046 6469 6445 4e53 5f39 616c 6c6f\n6361 746f 7249 5333 5f45 4553 325f 4544\n3245 7600 5f5f 5a4e 5374 335f 5f31 3238\n5f5f 696e 766f 6b65 5f76 6f69 645f 7265\n7475 726e 5f77 7261 7070 6572 4964 4536\n5f5f 6361 6c6c 494a 5250 4664 6964 4569\n6445 4545 6444 704f 545f 005f 5f5a 4e53\n7433 5f5f 3138 6675 6e63 7469 6f6e 4946\n6469 6445 4544 3245 7600 5f5f 5a4e 384d\n656d 6f69 7a65 4749 4664 6964 4545 4332\n454e 5374 335f 5f31 3866 756e 6374 696f\n6e49 5330 5f45 4500 5f5f 5a4e 5374 335f\n5f31 3866 756e 6374 696f 6e49 4664 6964\n4545 4331 4552 4b53 325f 005f 5f5a 4e53\n7433 5f5f 3138 6675 6e63 7469 6f6e 4946\n6469 6445 4543 3245 524b 5332 5f00 5f5f\n5a4e 4b53 7433 5f5f 3138 6675 6e63 7469\n6f6e 4946 6469 6445 4563 6c45 6964 005f\n5f5a 4e53 7433 5f5f 316c 7349 4e53 5f31\n3163 6861 725f 7472 6169 7473 4963 4545\n4545 524e 535f 3133 6261 7369 635f 6f73\n7472 6561 6d49 6354 5f45 4553 365f 504b\n6300 5f5f 5a4e 5374 335f 5f31 3465 6e64\n6c49 634e 535f 3131 6368 6172 5f74 7261\n6974 7349 6345 4545 4552 4e53 5f31 3362\n6173 6963 5f6f 7374 7265 616d 4954 5f54\n305f 4545 5337 5f00 5f5f 5a5a 4e38 4d65\n6d6f 697a 6547 4946 6469 6445 4563 6c45\n6964 454e 4b55 6c52 4b4e 5374 335f 5f31\n3470 6169 7249 4e53 325f 3574 7570 6c65\n494a 6964 4545 4564 4545 455f 636c 4553\n385f 005f 5f5a 4e53 7433 5f5f 3131 3762\n6164 5f66 756e 6374 696f 6e5f 6361 6c6c\n4331 4576 005f 5f5a 4e53 7433 5f5f 3131\n3762 6164 5f66 756e 6374 696f 6e5f 6361\n6c6c 4431 4576 005f 5f5a 4e53 7433 5f5f\n3131 3762 6164 5f66 756e 6374 696f 6e5f\n6361 6c6c 4332 4576 005f 5f5a 4e53 7433\n5f5f 3131 3762 6164 5f66 756e 6374 696f\n6e5f 6361 6c6c 4430 4576 005f 5f5a 4e53\n7433 5f5f 3131 3762 6164 5f66 756e 6374\n696f 6e5f 6361 6c6c 4432 4576 005f 5f5a\n4e53 7433 5f5f 3136 7665 6374 6f72 494e\n535f 3470 6169 7249 4e53 5f35 7475 706c\n6549 4a69 6445 4545 6445 454e 535f 3961\n6c6c 6f63 6174 6f72 4953 345f 4545 4532\n345f 5f52 4149 495f 496e 6372 6561 7365\n416e 6e6f 7461 746f 7243 3145 524b 5337\n5f6d 005f 5f5a 4e53 7433 5f5f 3136 7665\n6374 6f72 494e 535f 3470 6169 7249 4e53\n5f35 7475 706c 6549 4a69 6445 4545 6445\n454e 535f 3961 6c6c 6f63 6174 6f72 4953\n345f 4545 4532 345f 5f52 4149 495f 496e\n6372 6561 7365 416e 6e6f 7461 746f 7236\n5f5f 646f 6e65 4576 005f 5f5a 4e53 7433\n5f5f 3136 7665 6374 6f72 494e 535f 3470\n6169 7249 4e53 5f35 7475 706c 6549 4a69\n6445 4545 6445 454e 535f 3961 6c6c 6f63\n6174 6f72 4953 345f 4545 4532 315f 5f70\n7573 685f 6261 636b 5f73 6c6f 775f 7061\n7468 4953 345f 4545 764f 545f 005f 5f5a\n4e53 7433 5f5f 3136 7665 6374 6f72 494e\n535f 3470 6169 7249 4e53 5f35 7475 706c\n6549 4a69 6445 4545 6445 454e 535f 3961\n6c6c 6f63 6174 6f72 4953 345f 4545 4532\n345f 5f52 4149 495f 496e 6372 6561 7365\n416e 6e6f 7461 746f 7243 3245 524b 5337\n5f6d 005f 5f5a 4e53 7433 5f5f 3131 345f\n5f73 706c 6974 5f62 7566 6665 7249 4e53\n5f34 7061 6972 494e 535f 3574 7570 6c65\n494a 6964 4545 4564 4545 524e 535f 3961\n6c6c 6f63 6174 6f72 4953 345f 4545 4543\n3145 6d6d 5337 5f00 5f5f 5a4e 5374 335f\n5f31 3676 6563 746f 7249 4e53 5f34 7061\n6972 494e 535f 3574 7570 6c65 494a 6964\n4545 4564 4545 4e53 5f39 616c 6c6f 6361\n746f 7249 5334 5f45 4545 3236 5f5f 7377\n6170 5f6f 7574 5f63 6972 6375 6c61 725f\n6275 6666 6572 4552 4e53 5f31 345f 5f73\n706c 6974 5f62 7566 6665 7249 5334 5f52\n5336 5f45 4500 5f5f 5a4e 5374 335f 5f31\n3134 5f5f 7370 6c69 745f 6275 6666 6572\n494e 535f 3470 6169 7249 4e53 5f35 7475\n706c 6549 4a69 6445 4545 6445 4552 4e53\n5f39 616c 6c6f 6361 746f 7249 5334 5f45\n4545 4431 4576 005f 5f5a 4e4b 5374 335f\n5f31 3676 6563 746f 7249 4e53 5f34 7061\n6972 494e 535f 3574 7570 6c65 494a 6964\n4545 4564 4545 4e53 5f39 616c 6c6f 6361\n746f 7249 5334 5f45 4545 386d 6178 5f73\n697a 6545 7600 5f5f 5a4e 5374 335f 5f31\n3134 5f5f 7370 6c69 745f 6275 6666 6572\n494e 535f 3470 6169 7249 4e53 5f35 7475\n706c 6549 4a69 6445 4545 6445 4552 4e53\n5f39 616c 6c6f 6361 746f 7249 5334 5f45\n4545 4332 456d 6d53 375f 005f 5f5a 4e4b\n5374 335f 5f31 3676 6563 746f 7249 4e53\n5f34 7061 6972 494e 535f 3574 7570 6c65\n494a 6964 4545 4564 4545 4e53 5f39 616c\n6c6f 6361 746f 7249 5334 5f45 4545 3137\n5f5f 616e 6e6f 7461 7465 5f64 656c 6574\n6545 7600 5f5f 5a4e 4b53 7433 5f5f 3136\n7665 6374 6f72 494e 535f 3470 6169 7249\n4e53 5f35 7475 706c 6549 4a69 6445 4545\n6445 454e 535f 3961 6c6c 6f63 6174 6f72\n4953 345f 4545 4531 345f 5f61 6e6e 6f74\n6174 655f 6e65 7745 6d00 5f5f 5a4e 4b53\n7433 5f5f 3136 7665 6374 6f72 494e 535f\n3470 6169 7249 4e53 5f35 7475 706c 6549\n4a69 6445 4545 6445 454e 535f 3961 6c6c\n6f63 6174 6f72 4953 345f 4545 4533 315f\n5f61 6e6e 6f74 6174 655f 636f 6e74 6967\n756f 7573 5f63 6f6e 7461 696e 6572 4550\n4b76 5339 5f53 395f 5339 5f00 5f5f 5a4e\n5374 335f 5f31 3134 5f5f 7370 6c69 745f\n6275 6666 6572 494e 535f 3470 6169 7249\n4e53 5f35 7475 706c 6549 4a69 6445 4545\n6445 4552 4e53 5f39 616c 6c6f 6361 746f\n7249 5334 5f45 4545 4432 4576 005f 5f5a\n4e53 7433 5f5f 3132 345f 5f70 7574 5f63\n6861 7261 6374 6572 5f73 6571 7565 6e63\n6549 634e 535f 3131 6368 6172 5f74 7261\n6974 7349 6345 4545 4552 4e53 5f31 3362\n6173 6963 5f6f 7374 7265 616d 4954 5f54\n305f 4545 5337 5f50 4b53 345f 6d00 5f5f\n5a4e 5374 335f 5f31 3131 6368 6172 5f74\n7261 6974 7349 6345 366c 656e 6774 6845\n504b 6300 5f5f 5a4e 5374 335f 5f31 3136\n5f5f 7061 645f 616e 645f 6f75 7470 7574\n4963 4e53 5f31 3163 6861 725f 7472 6169\n7473 4963 4545 4545 4e53 5f31 396f 7374\n7265 616d 6275 665f 6974 6572 6174 6f72\n4954 5f54 305f 4545 5336 5f50 4b53 345f\n5338 5f53 385f 524e 535f 3869 6f73 5f62\n6173 6545 5334 5f00 5f5f 5a4e 5374 335f\n5f31 3131 6368 6172 5f74 7261 6974 7349\n6345 3131 6571 5f69 6e74 5f74 7970 6545\n6969 005f 5f5a 4e53 7433 5f5f 3131 3163\n6861 725f 7472 6169 7473 4963 4533 656f\n6645 7600 5f5f 5a4e 5374 335f 5f31 4c31\n3970 6965 6365 7769 7365 5f63 6f6e 7374\n7275 6374 4500 4743 435f 6578 6365 7074\n5f74 6162 6c65 3100 4743 435f 6578 6365\n7074 5f74 6162 6c65 3600 4743 435f 6578\n6365 7074 5f74 6162 6c65 3238 0047 4343\n5f65 7863 6570 745f 7461 626c 6533 3300\n4743 435f 6578 6365 7074 5f74 6162 6c65\n3432 0047 4343 5f65 7863 6570 745f 7461\n626c 6535 3300 4743 435f 6578 6365 7074\n5f74 6162 6c65 3535 005f 5f5a 5456 4e53\n7433 5f5f 3131 305f 5f66 756e 6374 696f\n6e36 5f5f 6675 6e63 4950 4664 6964 454e\n535f 3961 6c6c 6f63 6174 6f72 4953 335f\n4545 5332 5f45 4500 5f5f 5a54 564e 5374\n335f 5f31 3130 5f5f 6675 6e63 7469 6f6e\n365f 5f62 6173 6549 4664 6964 4545 4500\n5f5f 5a54 564e 5374 335f 5f31 3137 6261\n645f 6675 6e63 7469 6f6e 5f63 616c 6c45\n005f 5f5a 3130 6675 6e6e 7954 6869 6e67\n6964 005f 5f5a 5449 4664 6964 4500 5f5f\n5a54 494e 5374 335f 5f31 3130 5f5f 6675\n6e63 7469 6f6e 365f 5f62 6173 6549 4664\n6964 4545 4500 5f5f 5a54 494e 5374 335f\n5f31 3130 5f5f 6675 6e63 7469 6f6e 365f\n5f66 756e 6349 5046 6469 6445 4e53 5f39\n616c 6c6f 6361 746f 7249 5333 5f45 4553\n325f 4545 005f 5f5a 5449 4e53 7433 5f5f\n3131 3762 6164 5f66 756e 6374 696f 6e5f\n6361 6c6c 4500 5f5f 5a54 4950 4664 6964\n4500 5f5f 5a54 5346 6469 6445 005f 5f5a\n5453 4e53 7433 5f5f 3131 305f 5f66 756e\n6374 696f 6e36 5f5f 6261 7365 4946 6469\n6445 4545 005f 5f5a 5453 4e53 7433 5f5f\n3131 305f 5f66 756e 6374 696f 6e36 5f5f\n6675 6e63 4950 4664 6964 454e 535f 3961\n6c6c 6f63 6174 6f72 4953 335f 4545 5332\n5f45 4500 5f5f 5a54 534e 5374 335f 5f31\n3137 6261 645f 6675 6e63 7469 6f6e 5f63\n616c 6c45 005f 5f5a 5453 5046 6469 6445\n005f 5f6d 685f 6578 6563 7574 655f 6865\n6164 6572 005f 6d61 696e 005f 5f55 6e77\n696e 645f 5265 7375 6d65 005f 5f5a 4e4b\n5374 335f 5f31 3230 5f5f 7665 6374 6f72\n5f62 6173 655f 636f 6d6d 6f6e 494c 6231\n4545 3230 5f5f 7468 726f 775f 6c65 6e67\n7468 5f65 7272 6f72 4576 005f 5f5a 4e4b\n5374 335f 5f31 366c 6f63 616c 6539 7573\n655f 6661 6365 7445 524e 5330 5f32 6964\n4500 5f5f 5a4e 4b53 7433 5f5f 3138 696f\n735f 6261 7365 3667 6574 6c6f 6345 7600\n5f5f 5a4e 4b53 7439 6578 6365 7074 696f\n6e34 7768 6174 4576 005f 5f5a 4e53 7433\n5f5f 3131 3262 6173 6963 5f73 7472 696e\n6749 634e 535f 3131 6368 6172 5f74 7261\n6974 7349 6345 454e 535f 3961 6c6c 6f63\n6174 6f72 4963 4545 4536 5f5f 696e 6974\n456d 6300 5f5f 5a4e 5374 335f 5f31 3132\n6261 7369 635f 7374 7269 6e67 4963 4e53\n5f31 3163 6861 725f 7472 6169 7473 4963\n4545 4e53 5f39 616c 6c6f 6361 746f 7249\n6345 4545 4431 4576 005f 5f5a 4e53 7433\n5f5f 3131 3362 6173 6963 5f6f 7374 7265\n616d 4963 4e53 5f31 3163 6861 725f 7472\n6169 7473 4963 4545 4533 7075 7445 6300\n5f5f 5a4e 5374 335f 5f31 3133 6261 7369\n635f 6f73 7472 6561 6d49 634e 535f 3131\n6368 6172 5f74 7261 6974 7349 6345 4545\n3566 6c75 7368 4576 005f 5f5a 4e53 7433\n5f5f 3131 3362 6173 6963 5f6f 7374 7265\n616d 4963 4e53 5f31 3163 6861 725f 7472\n6169 7473 4963 4545 4536 7365 6e74 7279\n4331 4552 5333 5f00 5f5f 5a4e 5374 335f\n5f31 3133 6261 7369 635f 6f73 7472 6561\n6d49 634e 535f 3131 6368 6172 5f74 7261\n6974 7349 6345 4545 3673 656e 7472 7944\n3145 7600 5f5f 5a4e 5374 335f 5f31 3133\n6261 7369 635f 6f73 7472 6561 6d49 634e\n535f 3131 6368 6172 5f74 7261 6974 7349\n6345 4545 6c73 4564 005f 5f5a 4e53 7433\n5f5f 3134 636f 7574 4500 5f5f 5a4e 5374\n335f 5f31 3563 7479 7065 4963 4532 6964\n4500 5f5f 5a4e 5374 335f 5f31 366c 6f63\n616c 6544 3145 7600 5f5f 5a4e 5374 335f\n5f31 3869 6f73 5f62 6173 6533 335f 5f73\n6574 5f62 6164 6269 745f 616e 645f 636f\n6e73 6964 6572 5f72 6574 6872 6f77 4576\n005f 5f5a 4e53 7433 5f5f 3138 696f 735f\n6261 7365 3563 6c65 6172 456a 005f 5f5a\n4e53 7439 6578 6365 7074 696f 6e44 3245\n7600 5f5f 5a53 7439 7465 726d 696e 6174\n6576 005f 5f5a 5449 5374 3965 7863 6570\n7469 6f6e 005f 5f5a 5456 4e31 305f 5f63\n7878 6162 6976 3131 375f 5f63 6c61 7373\n5f74 7970 655f 696e 666f 4500 5f5f 5a54\n564e 3130 5f5f 6378 7861 6269 7631 3139\n5f5f 706f 696e 7465 725f 7479 7065 5f69\n6e66 6f45 005f 5f5a 5456 4e31 305f 5f63\n7878 6162 6976 3132 305f 5f66 756e 6374\n696f 6e5f 7479 7065 5f69 6e66 6f45 005f\n5f5a 5456 4e31 305f 5f63 7878 6162 6976\n3132 305f 5f73 695f 636c 6173 735f 7479\n7065 5f69 6e66 6f45 005f 5f5a 5456 5374\n3965 7863 6570 7469 6f6e 005f 5f5a 646c\n5076 005f 5f5a 6e77 6d00 5f5f 5f63 7861\n5f61 6c6c 6f63 6174 655f 6578 6365 7074\n696f 6e00 5f5f 5f63 7861 5f62 6567 696e\n5f63 6174 6368 005f 5f5f 6378 615f 656e\n645f 6361 7463 6800 5f5f 5f63 7861 5f70\n7572 655f 7669 7274 7561 6c00 5f5f 5f63\n7861 5f74 6872 6f77 005f 5f5f 6778 785f\n7065 7273 6f6e 616c 6974 795f 7630 005f\n5f5f 7374 6163 6b5f 6368 6b5f 6661 696c\n005f 5f5f 7374 6163 6b5f 6368 6b5f 6775\n6172 6400 5f6d 656d 6370 7900 5f6d 656d\n7365 7400 5f73 7472 6c65 6e00 6479 6c64\n5f73 7475 625f 6269 6e64 6572 0000 0000\n0000 0000 ",
			"file": "_drafts/memoization_code/a.out",
			"file_size": 35172,
			"file_write_time": 130981428950000000,
			"settings":
			{
				"buffer_size": 87930,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <algorithm>\n#include <iostream>\n#include <tuple>\n#include <vector>\n\ndouble funnyThing(int a, double b) {\n    return 3.141 * a * b;\n}\n\ntemplate <typename T>\nstruct MemoizeG;\n\ntemplate<typename ResultType, typename... ArgTypes>\nclass MemoizeG<ResultType(ArgTypes...)>\n{\nprivate:\n    using StoredResultType = std::pair<std::tuple<ArgTypes...>, ResultType>;\npublic:\n    MemoizeG(std::function<ResultType(ArgTypes...)> f) : _f(f) {}\n    \n    ResultType operator()(ArgTypes... args) {\n        const auto argsAsTuple = std::make_tuple(args...);\n        auto memoized = std::find_if(_table.begin(), _table.end(), [&argsAsTuple](const StoredResultType& candidate) {\n            return candidate.first == argsAsTuple;\n        });\n        if(memoized == _table.end()) {\n            auto const r = _f(args...);\n            _table.push_back({ {args...}, r});\n            std::cout << \"computed: ...->\" << r  << std::endl;\n            return r;\n        } else {\n            std::cout << \"memoized: ...->\" << memoized->second << std::endl;\n            return memoized->second;\n        }\n    }\nprivate:\n    std::vector<StoredResultType> _table;\n    std::function<ResultType(ArgTypes...)> _f;\n};\n\ntemplate<typename ResultType, typename... ArgsTypes>\nMemoizeG<ResultType(ArgsTypes...)> MakeMemoizeG(ResultType f(ArgsTypes...)) {\n    return MemoizeG<ResultType(ArgsTypes...)>(f);\n}\n\nint main() {\n    auto memoizedFunnyThing = MemoizeG<double(int, double)>(funnyThing);\n    memoizedFunnyThing(1, 1.1);\n    memoizedFunnyThing(2, 1.1);\n    memoizedFunnyThing(3, 1.1);\n    memoizedFunnyThing(1, 1.1);\n    \n    auto convenientMemoizedFunnyThing = MakeMemoizeG(funnyThing);\n    convenientMemoizedFunnyThing(1, 1.1);\n    convenientMemoizedFunnyThing(1, 1.1);\n}\n",
			"file": "_drafts/memoization_code/basic.cpp",
			"file_size": 1744,
			"file_write_time": 130981436130000000,
			"settings":
			{
				"buffer_size": 1744,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-11-13-efficiency.markdown",
			"settings":
			{
				"buffer_size": 26596,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-12-29-language-tool.markdown",
			"settings":
			{
				"buffer_size": 2256,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-12-31-year.markdown",
			"settings":
			{
				"buffer_size": 309,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2016-02-05-st-andrews-stories.markdown",
			"settings":
			{
				"buffer_size": 2689,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2016-02-06-memoization.markdown",
			"settings":
			{
				"buffer_size": 10802,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---\nlayout: post\ndate:   2016-07-14 15:22:16\ntitle: \"Liz's quiz answers\"\ncategories: quiz\n---\n\nDundee\n\nMountain over 2500ft or 762m but less than 3000 feet\n\nUnst\n\nTeviot\n\n\nJune 1314\n\nScottish Parliament\n\nBonnie Prince Charlie or Prince Charles Edward Stuart\n\nJames 1 of England or James 6 of Scotland\n\n313\n\nBilly Connolly\n\nGrand Theft Auto\n\nJonny Lee Miller\n\nGeorge Lazenby\n\nDonald Dewar\n\nKenny Dalglish with 102 caps\n\nJamie Murray\n\nHaggis\n\nThe Macallan from 1946 sold in 2010 for $460k\n\nSmoked herring\n\nWorld porridge\n\nBen Nevis\n\nCairn Gorm\n\nBen Lawers\n\nBen Avon\n\nLochnagar\n\nBen Alder\n\nStob Ban\n\nBen More\n\nBen Hope\n\nMount Keen\n\nBroad Cairn\n\nAn Stuc\n\nInaccesible Pinnacle\n\nCarn Aosda\n\nMayar\n\nAm Basteir\n\nBen Vane\n\n",
			"file": "_posts/2016-07-14-quiz-answers.markdown",
			"file_size": 714,
			"file_write_time": 131058334870000000,
			"settings":
			{
				"buffer_size": 714,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---\nlayout: post\ndate:   2016-10-21 15:22:16\ntitle: \"3 months without news - ignorance is bliss\"\ncategories: personal\n---\n\nEver since about 5am on the day after the Brexit referendum, I haven't watched TV news, intentionally looked at a newspaper or any news website. I've gone out of my way to avoid every possible source of news. \n\nYou might gather I don't like the way some of the news is going at the moment and that's true, but there is always a tidal wave of bad news coming and this was just the straw that broke the camel's back.\n\nThe reason for that is simply that I was becoming anxious about various news topics that I couldn't control. I was addicted to news and it was making me ill. I would waste time and energy fretting about things that typically didn't affect me very much. I decided that I was better off not following what happens from day to day. I will end up finding out the important stuff from other people or sources.\n\nIt has been a great thing and I have no intention of returning to my news reading habit, I really do worry less, sleep better and enjoy my life more now. \n\nI worry that I will probably miss something worthwhile, some opportunity that I should pursue or some piece of news that really requires me to do something. However I can't think of any example from my life where anything I read about in the news lead to anything significant. My job, home, friends and hobbies have all developed completely independently of knowledge of current affairs. It's almost too obvious to point out, but the habit of seeking news is so deeply embedded in our society that it does need to be said.\n\nTo achieve news blackout I have developed the following behaviours:\n\n* mute the TV before turning it on, in case it's tuned to current affairs\n* stop listening to the radio completely, listen only to podcasts\n* look away from newspaper stands in shops\n* tell my family and friends I don't want to discuss current affairs\n* visit only fun websites that have very little news content (like Reddit), sports news (e.g. by searching) and technology related news sites/link aggregators (like Hacker News)\n* on my iPad and iPhone, turn off all the news widgets and apps so that nothing flashes up on my screen while I'm searching and browsing\n* while browsing the web, use \"reader\" mode in the browser, so that I only see the article I'm reading and not clickbait links to news stories\n\nI have already had to go cold turkey on social media due an addiction to those. If I was still on Twitter and Facebook I imagine they would have to go too.\n\nI know this is quite extreme, but the fact I'm willing to go to these lengths may tell you how bad an effect news was formerly having on me.\n\nFor the most part this has worked and I have only found out about huge stories and pretty much avoided all the noise.\n\nSome of the definite disadvantages I can think of are\n\n* I used to be occasionally shamed into giving money to charity by seeing misfortune in the news. I will need to develop a regular habit of giving to charity instead.\n* I cannot talk about news socially any more. Luckily I very rarely did, but I imagine that some day it will be unavoidable and may lead to more anxiety and awkwardness. Time will tell.\n* I am completely cut off from other types of information that is generally communicated along with news I want to avoid, such as music, books, TV, local events, etc. I have to rely on other people to let me know what I might be interested in.\n\nAnyway in summary feeling powerless make me feel miserable, so now I ignore the day to day humdrum of current affairs and try to concentrate on things I can control. It have freed up time and mental energy for being a better dad, husband, son, friend and employee and so I would recommend to anybody to give it a go, especially if you are feeling a little bit like I did.\nAnyway in summary feeling powerless make me feel miserable, so now I ignore the day to day humdrum of current affairs and try to concentrate on things I can control. It have freed up time and mental energy for being a better dad, husband, son, friend and employee and so I would recommend to anybody to give it a go, especially if you are feeling a little bit like I did.\n\nI would recommend to anybody to read [Avoid News - Towards a Healthy News Diet](http://dobelli.com/wp-content/uploads/2010/08/Avoid_News_Part1_TEXT.pdf) by Rolf Dobelli. It is a very well reasoned explanation of aspects of the above.\n",
			"file": "_posts/2016-10-21-months-without-news.markdown",
			"file_size": 4083,
			"file_write_time": 131215580590000000,
			"settings":
			{
				"buffer_size": 4455,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2016-07-03-quiz-answers.markdown",
			"settings":
			{
				"buffer_size": 714,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2016-10-31-wordsearch.markdown",
			"settings":
			{
				"buffer_size": 3276,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "about.md",
			"settings":
			{
				"buffer_size": 392,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Sample Markdown Cheat Sheet\n=========================== \n\nThis is a sample markdown file to help you write Markdown quickly :)\n\nIf you use the fabulous [Sublime Text 2/3 editor][ST] along with the [Markdown Preview plugin][MarkdownPreview], open your ST2 Palette with `CMD+⇧+P` then choose `Markdown Preview in browser` to see the result in your browser.\n\n## Text basics\nthis is *italic* and this is **bold** .  another _italic_ and another __bold__\n\nthis is `important` text. and percentage signs : % and `%`\n\nThis is a paragraph with a footnote (builtin parser only). [^note-id]\n\nInsert `[ TOC ]` without spaces to generate a table of contents (builtin parsers only).\n\n## Indentation\n> Here is some indented text\n>> even more indented\n\n## Titles\n# Big title (h1)\n## Middle title (h2)\n### Smaller title (h3)\n#### and so on (hX)\n##### and so on (hX)\n###### and so on (hX)\n\n## Example lists (1)\n\n - bullets can be `-`, `+`, or `*`\n - bullet list 1\n - bullet list 2\n    - sub item 1\n    - sub item 2\n\n        with indented text inside\n\n - bullet list 3\n + bullet list 4\n * bullet list 5\n\n## Links\n\nThis is an [example inline link](http://lmgtfy.com/) and [another one with a title](http://lmgtfy.com/ \"Hello, world\").\n\nLinks can also be reference based : [reference 1][ref1] or [reference 2 with title][ref2].\n\nReferences are usually placed at the bottom of the document\n\n## Images\n\nA sample image :\n\n![revolunet logo](http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\")\n\nAs links, images can also use references instead of inline links :\n\n![revolunet logo][revolunet-logo]\n\n\n## Code\n\nIt's quite easy to show code in markdown files.\n\nBackticks can be used to `highlight` some words.\n\nAlso, any indented block is considered a code block.  If `enable_highlight` is `true`, syntax highlighting will be included (for the builtin parser - the github parser does this automatically).\n\n    <script>\n        document.location = 'http://lmgtfy.com/?q=markdown+cheat+sheet';\n    </script>\n\n## Math\n\nWhen `enable_mathjax` is `true`, inline math can be included \\\\(\\frac{\\pi}{2}\\\\) $\\pi$\n\nAlternatively, math can be written on its own line:\n\n$$F(\\omega) = \\frac{1}{\\sqrt{2\\pi}} \\int_{-\\infty}^{\\infty} f(t) \\, e^{ - i \\omega t}dt$$\n\n\\\\[\\int_0^1 f(t) \\mathrm{d}t\\\\]\n\n\\\\[\\sum_j \\gamma_j^2/d_j\\\\]\n\n\n\n## GitHub Flavored Markdown\n\nIf you use the Github parser, you can use some of [Github Flavored Markdown][gfm] syntax :\n\n * User/Project@SHA: revolunet/sublimetext-markdown-preview@7da61badeda468b5019869d11000307e07e07401\n * User/Project#Issue: revolunet/sublimetext-markdown-preview#1\n * User : @revolunet\n\nSome Python code :\n\n```python\nimport random\n\nclass CardGame(object):\n    \"\"\" a sample python class \"\"\"\n    NB_CARDS = 32\n    def __init__(self, cards=5):\n        self.cards = random.sample(range(self.NB_CARDS), 5)\n        print 'ready to play'\n```\n\nSome Javascript code :\n\n```js\nvar config = {\n    duration: 5,\n    comment: 'WTF'\n}\n// callbacks beauty un action\nasync_call('/path/to/api', function(json) {\n    another_call(json, function(result2) {\n        another_another_call(result2, function(result3) {\n            another_another_another_call(result3, function(result4) {\n                alert('And if all went well, i got my result :)');\n            });\n        });\n    });\n})\n```\n\nThe Github Markdown also brings some [nice Emoji support][emoji] : :+1: :heart: :beer:\n\n[^note-id]: This is the text of the note. \n\n## Parsers and Extensions\n\nMarkdown Preview comes with **Python-Markdown** preloaded.\n\n### *Python-Markdown*\n\nThe [Python-Markdown Parser][] provides support for several extensions.\n\n[Python-Markdown Parser]: https://github.com/waylan/Python-Markdown\n\n#### Extra Extensions\n\n* `abbr` -- [Abbreviations][]\n* `attr_list` -- [Attribute Lists][]\n* `def_list` -- [Definition Lists][]\n* `fenced_code` -- [Fenced Code Blocks][]\n* `footnotes` -- [Footnotes][]\n* `tables` -- [Tables][]\n* `smart_strong` -- [Smart Strong][]\n\n[Abbreviations]: http://pythonhosted.org/Markdown/extensions/abbreviations.html\n[Attribute Lists]: http://pythonhosted.org/Markdown/extensions/attr_list.html\n[Definition Lists]: http://pythonhosted.org/Markdown/extensions/definition_lists.html\n[Fenced Code Blocks]: http://pythonhosted.org/Markdown/extensions/fenced_code_blocks.html\n[Footnotes]: http://pythonhosted.org/Markdown/extensions/footnotes.html\n[Tables]: http://pythonhosted.org/Markdown/extensions/tables.html\n[Smart Strong]: http://pythonhosted.org/Markdown/extensions/smart_strong.html\n\n\nYou can enable them all at once using the `extra` keyword.\n\n    extensions: [ 'extra' ]\n\nIf you want all the extras plus the `toc` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['extra', 'toc'],\n        ...\n    }\n\n\n#### Other Extensions\n\nThere are also some extensions that are not included in Markdown Extra\nbut come in the standard Python-Markdown library.\n\n* `code-hilite` -- [CodeHilite][]\n* `html-tidy` -- [HTML Tidy][]\n* `header-id` -- [HeaderId][]\n* `meta_data` -- [Meta-Data][]\n* `nl2br` -- [New Line to Break][]\n* `rss` -- [RSS][]\n* `sane_lists` -- [Sane Lists][]\n* `smarty` -- [Smarty][]\n* `toc` -- [Table of Contents][]\n* `wikilinks` -- [WikiLinks][]\n\n[CodeHilite]:  http://pythonhosted.org/Markdown/extensions/code_hilite.html\n[HTML Tidy]:  http://pythonhosted.org/Markdown/extensions/html_tidy.html\n[HeaderId]:  http://pythonhosted.org/Markdown/extensions/header_id.html\n[Meta-Data]:  http://pythonhosted.org/Markdown/extensions/meta_data.html\n[New Line to Break]:  http://pythonhosted.org/Markdown/extensions/nl2br.html\n[RSS]:  http://pythonhosted.org/Markdown/extensions/rss.html\n[Sane Lists]:  http://pythonhosted.org/Markdown/extensions/sane_lists.html\n[Table of Contents]:  http://pythonhosted.org/Markdown/extensions/toc.html\n[WikiLinks]:  http://pythonhosted.org/Markdown/extensions/wikilinks.html\n[Smarty]: https://pythonhosted.org/Markdown/extensions/smarty.html\n\n#### 3rd Party Extensions\n\n*Python-Markdown* is designed to be extended.\n\nSome included ones are:\n\n* `delete` -- github style delte support via `~~word~~`\n* `githubemoji` --  github emoji support\n* `tasklist` -- github style tasklists\n* `magiclink` -- github style auto link conversion of http|ftp links\n* `headeranchor` -- github style header anchor links\n* `github` -- Adds the above extensions in one shot\n* `b64` -- convert and embed local images to base64.  Setup by adding this `b64(base_path=${BASE_PATH})`\n\nThere are also a number of others available:\n\nJust fork this repo and add your extensions inside the `.../Packages/Markdown Preview/markdown/extensions/` folder.\n\nCheck out the list of [3rd Party extensions](\nhttps://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions).\n\n\n#### Default Extensions\n\nThe default extensions are:\n\n* `footnotes` -- [Footnotes]\n* `toc` -- [Table of Contents]\n* `fenced_code` -- [Fenced Code Blocks] \n* `tables` -- [Tables]\n\nUse the `default` keyword, to select them all.\nIf you want all the defaults plus the `definition_lists` extension,\nyour settings would look like this:\n\n    {\n        ...\n        parser: 'markdown',\n        extensions: ['default', 'definition_lists'],\n        ...\n    }\n\n## Examples\n\n### Tables\n\nThe `tables` extension of the *Python-Markdown* parser is activated by default,\nbut is currently **not** available in *Markdown2*.\n\nThe syntax was adopted from the [php markdown project](http://michelf.ca/projects/php-markdown/extra/#table),\nand is also used in github flavoured markdown.\n\n| Year | Temperature (low) | Temperature (high) |  \n| ---- | ----------------- | -------------------|  \n| 1900 |               -10 |                 25 |  \n| 1910 |               -15 |                 30 |  \n| 1920 |               -10 |                 32 |  \n\n\n### Wiki Tables\n\nIf you are using *Markdown2* with the `wiki-tables` extra activated you should see a table below:\n\n|| *Year* || *Temperature (low)* || *Temperature (high)* ||  \n||   1900 ||                 -10 ||                   25 ||  \n||   1910 ||                 -15 ||                   30 ||  \n||   1920 ||                 -10 ||                   32 ||  \n\n\n### Definition Lists\n\nThis example requires *Python Markdown*'s `def_list` extension.\n\nApple\n:   Pomaceous fruit of plants of the genus Malus in \n    the family Rosaceae.\n\nOrange\n:   The fruit of an evergreen tree of the genus Citrus.\n\n\n## About\n\nThis plugin and this sample file is proudly brought to you by the [revolunet team][revolunet]\n\n [ref1]: http://revolunet.com\n [ref2]: http://revolunet.com \"rich web apps\"\n [MarkdownREF]: http://daringfireball.net/projects/markdown/basics\n [MarkdownPreview]: https://github.com/revolunet/sublimetext-markdown-preview\n [ST]: http://sublimetext.com\n [revolunet]: http://revolunet.com\n [revolunet-logo]: http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg \"revolunet logo\"\n [gfm]: http://github.github.com/github-flavored-markdown/\n [emoji]: http://www.emoji-cheat-sheet.com/\n\n",
			"settings":
			{
				"buffer_size": 8996,
				"line_ending": "Unix",
				"name": "Markdown Cheatsheet",
				"scratch": true
			}
		},
		{
			"file": "_layouts/default.html",
			"settings":
			{
				"buffer_size": 248,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_includes/analytics.html",
			"settings":
			{
				"buffer_size": 408,
				"line_ending": "Unix",
				"name": "<script>"
			}
		},
		{
			"file": "_layouts/post.html",
			"settings":
			{
				"buffer_size": 1220,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "_includes/head.html",
			"settings":
			{
				"buffer_size": 1160,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_includes/footer.html",
			"settings":
			{
				"buffer_size": 3100,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_sass/_layout.scss",
			"settings":
			{
				"buffer_size": 4374,
				"line_ending": "Unix"
			}
		},
		{
			"file": "untitled.sublime-project",
			"settings":
			{
				"buffer_size": 73,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_sass/_syntax-highlighting.scss",
			"settings":
			{
				"buffer_size": 3946,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CNAME",
			"settings":
			{
				"buffer_size": 15,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 187.0,
		"last_filter": "markdown",
		"selected_items":
		[
			[
				"markdown",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"mark",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"markcheat",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"gofm",
				"GoSublime: Fmt and save"
			],
			[
				"gofmt",
				"GoSublime: Fmt and save"
			],
			[
				"fmt",
				"GoSublime: Fmt the current file (without saving it)"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"test",
				"Snippet: test"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/neilmoore67/Work/personal-homepage",
		"/Users/neilmoore67/Work/personal-homepage/_drafts",
		"/Users/neilmoore67/Work/personal-homepage/_includes",
		"/Users/neilmoore67/Work/personal-homepage/_layouts",
		"/Users/neilmoore67/Work/personal-homepage/_posts",
		"/Users/neilmoore67/Work/personal-homepage/css"
	],
	"file_history":
	[
		"/Users/neilmoore67/Work/personal-homepage/_site/index.html",
		"/Users/neilmoore67/Work/personal-homepage/_posts/2016-08-01-quiz-answers.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_posts/obj_ptrs_1_code/sixth.cpp",
		"/Users/neilmoore67/Work/personal-homepage/christmas_quiz.txt",
		"/Users/neilmoore67/Work/personal-homepage/_posts/2015-11-29-pure-functions.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/2015-11-29-pure-functions.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/2015-10-04-moving-to-industry.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_site/me/talks/2015/10/04/moving-to-industry.html",
		"/Users/neilmoore67/Work/personal-homepage/_includes/mailchimp.html",
		"/Users/neilmoore67/Work/personal-homepage/README",
		"/Users/neilmoore67/Work/personal-homepage/_config.yml",
		"/Users/neilmoore67/Work/personal-homepage/about.md",
		"/Users/neilmoore67/Work/personal-homepage/_site/c++/2014/11/30/objects-and-pointers.html",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/2014-11-30-objects-and-pointers.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/type_erasure.hpp",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/value.hpp",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/wrapper.hpp",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/unique_hetero.hpp",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/2015-06-10-objects-and-pointers-2.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_posts/2015-06-10-objects-and-pointers-2.markdown",
		"/Users/neilmoore67/Work/personal-homepage/unique.hpp",
		"/Users/neilmoore67/Work/personal-homepage/unique_hetero.hpp",
		"/Users/neilmoore67/Work/personal-homepage/non-virtual-objects.hpp",
		"/Users/neilmoore67/Work/personal-homepage/_plugins/thumbnail.rb",
		"/Users/neilmoore67/Work/personal-homepage/css/lightbox.css",
		"/Users/neilmoore67/Library/Application Support/Sublime Text 3/Packages/GoSublime/CHANGELOG.md",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/2014-11-19-vector-append.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_posts/2014-11-13-dinner.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_drafts/2014-11-19-dynamic-dispatch-thoughts.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_posts/2014-11-19-dynamic-dispatch-thoughts.markdown",
		"/Users/neilmoore67/Work/personal-homepage/_posts/2014-11-13-welcome-to-jekyll.markdown",
		"/Users/neilmoore67/Work/personal-homepage/trustcom_note.md",
		"/Users/neilmoore67/Work/go/src/github.com/codegangsta/gin/main.go",
		"/Users/neilmoore67/Work/go/src/github.com/codegangsta/gin/lib/test_fixtures/config.json",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/css/jquery-ui.structure.min.css",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/css/jquery-ui.structure.css",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/css/jquery-ui.css",
		"/Users/neilmoore67/Work/go/src/code.google.com/p/go.exp/locale/search/search.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/js/lib/handlebars-v1.3.0.js",
		"/Users/neilmoore67/Work/go/src/github.com/qrtz/livedev/config.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/index.html",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/scoot-http.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/http",
		"/Users/neilmoore67/Work/go/bin/http",
		"/Users/neilmoore67/Work/go/src/github.com/codegangsta/cli/helpers_test.go",
		"/Users/neilmoore67/Work/go/bin/hello",
		"/Users/neilmoore67/Library/Application Support/Sublime Text 3/Packages/User/Distraction Free.sublime-settings",
		"/Users/neilmoore67/Work/go/src/github.com/codegangsta/cli/app.go",
		"/Users/neilmoore67/Work/go/src/code.google.com/p/go.exp/AUTHORS",
		"/Users/neilmoore67/Work/go/src/code.google.com/p/go.exp/inotify/inotify_linux_test.go",
		"/Users/neilmoore67/Work/go/src/github.com/andreaskoch/go-fswatch/.travis.yml",
		"/Users/neilmoore67/Work/go/src/github.com/codegangsta/envy/.gitignore",
		"/Users/neilmoore67/Work/go/src/github.com/gorilla/mux/regexp.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/js/app.js",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/js/views/gamestateview.js",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/templates/templates.js",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/Makefile",
		"/Users/neilmoore67/Work/go/bin/gin",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/js/models/prototypeitem.js",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/static/js/models/GameState.js",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/fresh.conf",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http/livedev.json",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/filesync/core.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/newmath/sqrt.go",
		"/Users/neilmoore67/Work/go/src/code.google.com/p/go.exp/fsnotify/example_test.go",
		"/Users/neilmoore67/Work/go/src/code.google.com/p/go.exp/ebnf/ebnf_test.go",
		"/Users/neilmoore67/Work/go/src/code.google.com/p/go.exp/ebnf/ebnf.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/filesync/TODO",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/sync/TODO",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/filesync/runners/core_run.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/sync/core.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/sync/core_run.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/newmath/sqrt_test.go",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/hello/hello.go",
		"/Users/neilmoore67/Library/Application Support/Sublime Text 3/Packages/DashDoc/DashDoc.sublime-settings",
		"/Users/neilmoore67/Work/go/src/bigoh.co.uk/user/hello/hello.go",
		"/Users/neilmoore67/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
		"/Users/neilmoore67/Library/Application Support/Sublime Text 3/Packages/GoSublime/9o.md",
		"/Users/neilmoore67/Work/rust/dice/TODO",
		"/Users/neilmoore67/Work/rust/dice/dice_louis.rs",
		"/Users/neilmoore67/Work/rust/dice/dice.rs",
		"/Users/neilmoore67/Downloads/mooreacc.mooo.com.bat",
		"/Users/neilmoore67/Work/rust/dice/hello.rs"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"permalink",
			"02-06",
			"link",
			"{{",
			"definition",
			"red",
			"indulgent",
			"labs",
			"note-id",
			"emoji",
			"images",
			"comment",
			"stone",
			"std::unique_ptr",
			"boost",
			"post_url",
			"unique_ptr",
			"objectStuff5",
			"site-header",
			"site-headers",
			"site-footer",
			"~~~",
			"~~~ cplusplus",
			"5",
			"PDF",
			"UpdateChan",
			"BibTeX",
			"food.svg",
			"getTemplateAjax",
			"home",
			"registerHelper",
			"expression",
			"Passable",
			"fmt",
			"\"\n",
			"LocalFS",
			"updateChan",
			"(\n",
			"strconv",
			"count",
			"needle",
			", sorted : false",
			"Die",
			"1500",
			"tuple"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"{% endhighlight %}",
			"{% highlight c++ %}",
			"[PDF](/resources/aicom.pdf)",
			"",
			"UpdateChan"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 47,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "publications.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3565,
						"regions":
						{
						},
						"selection":
						[
							[
								205,
								205
							]
						],
						"settings":
						{
							"function_name_status_row": 9,
							"sorttabs_lastactivated": 1444501610.78,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "_posts/2014-11-19-vector-append.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3861,
						"regions":
						{
						},
						"selection":
						[
							[
								2135,
								2135
							]
						],
						"settings":
						{
							"function_name_status_row": 68,
							"parser": "github",
							"sorttabs_lastactivated": 1461359000.33,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"target": "browser"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "_posts/2014-11-30-objects-and-pointers.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8925,
						"regions":
						{
						},
						"selection":
						[
							[
								6312,
								6312
							]
						],
						"settings":
						{
							"function_name_status_row": 96,
							"sorttabs_lastactivated": 1461359001.55,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "_posts/obj_ptrs_2_code/unique.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 588,
						"regions":
						{
						},
						"selection":
						[
							[
								354,
								354
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1438633789.65,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "_posts/obj_ptrs_2_code/type_erasure_with_inherit.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1213,
						"regions":
						{
						},
						"selection":
						[
							[
								1164,
								1164
							]
						],
						"settings":
						{
							"function_name_status_row": 53,
							"sorttabs_lastactivated": 1454751963.15,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 316.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "_posts/obj_ptrs_2_code/type_erasure.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 798,
						"regions":
						{
						},
						"selection":
						[
							[
								475,
								475
							]
						],
						"settings":
						{
							"function_name_status_row": 20,
							"sorttabs_lastactivated": 1454751967.33,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "_posts/obj_ptrs_1_code/fifth.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 628,
						"regions":
						{
						},
						"selection":
						[
							[
								181,
								181
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"sorttabs_lastactivated": 1438544344.38,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "_posts/obj_ptrs_1_code/fourth.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 176,
						"regions":
						{
						},
						"selection":
						[
							[
								176,
								176
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"sorttabs_lastactivated": 1438544594.63,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "_posts/obj_ptrs_1_code/third.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 261,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"sorttabs_lastactivated": 1438544342.29,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "_posts/obj_ptrs_1_code/second.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 163,
						"regions":
						{
						},
						"selection":
						[
							[
								163,
								163
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"sorttabs_lastactivated": 1438544339.1,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "_posts/obj_ptrs_1_code/first.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 162,
						"regions":
						{
						},
						"selection":
						[
							[
								162,
								162
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"sorttabs_lastactivated": 1438544343.93,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "_posts/obj_ptrs_1_code/earlydefs.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 388,
						"regions":
						{
						},
						"selection":
						[
							[
								232,
								232
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"sorttabs_lastactivated": 1438523578.08,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "_posts/obj_ptrs_2_code/wrapper.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1083,
						"regions":
						{
						},
						"selection":
						[
							[
								340,
								340
							]
						],
						"settings":
						{
							"function_name_status_row": 17,
							"sorttabs_lastactivated": 1454751973.58,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "_posts/obj_ptrs_2_code/type_erasure.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 685,
						"regions":
						{
						},
						"selection":
						[
							[
								685,
								685
							]
						],
						"settings":
						{
							"function_name_status_row": 35,
							"sorttabs_lastactivated": 1454751969.14,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "_posts/obj_ptrs_2_code/unique_hetero.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 683,
						"regions":
						{
						},
						"selection":
						[
							[
								683,
								683
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1438285766.28,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "_posts/2015-03-16-wedding-honeymoon.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7813,
						"regions":
						{
						},
						"selection":
						[
							[
								1270,
								1349
							]
						],
						"settings":
						{
							"function_name_status_row": 29,
							"parser": "github",
							"sorttabs_lastactivated": 1477081832.91,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"target": "browser",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "_posts/2015-03-29-TT-scorer.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8737,
						"regions":
						{
						},
						"selection":
						[
							[
								5845,
								5634
							]
						],
						"settings":
						{
							"function_name_status_row": 131,
							"sorttabs_lastactivated": 1461359002.54,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "_posts/2015-04-6-types.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8672,
						"regions":
						{
						},
						"selection":
						[
							[
								8668,
								8668
							]
						],
						"settings":
						{
							"function_name_status_row": 146,
							"sorttabs_lastactivated": 1461359005.67,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "_posts/2015-06-10-objects-and-pointers-2.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4523,
						"regions":
						{
						},
						"selection":
						[
							[
								598,
								598
							]
						],
						"settings":
						{
							"function_name_status_row": 22,
							"sorttabs_lastactivated": 1461359006.15,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "_posts/2015-08-10-talk-slides.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 485,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								112
							]
						],
						"settings":
						{
							"function_name_status_row": 5,
							"parser": "github",
							"sorttabs_lastactivated": 1477082929.6,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"target": "browser"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 20,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8996,
						"regions":
						{
						},
						"selection":
						[
							[
								3405,
								3412
							]
						],
						"settings":
						{
							"default_dir": "/Users/neilmoore67/Work/personal-homepage",
							"function_name_status_row": 129,
							"sorttabs_lastactivated": 1444499996.93,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 21,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8996,
						"regions":
						{
						},
						"selection":
						[
							[
								580,
								570
							]
						],
						"settings":
						{
							"default_dir": "/Users/neilmoore67/Work/personal-homepage",
							"function_name_status_row": 12,
							"sorttabs_lastactivated": 1444424420.2,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 22,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8996,
						"regions":
						{
						},
						"selection":
						[
							[
								6126,
								6137
							]
						],
						"settings":
						{
							"default_dir": "/Users/neilmoore67/Work/personal-homepage",
							"function_name_status_row": 209,
							"sorttabs_lastactivated": 1444072316.68,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3163.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 23,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8996,
						"regions":
						{
						},
						"selection":
						[
							[
								1749,
								1751
							]
						],
						"settings":
						{
							"default_dir": "/Users/neilmoore67/Work/personal-homepage",
							"function_name_status_row": 54,
							"sorttabs_lastactivated": 1443971328.92,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "_posts/2015-06-10-objects-and-pointers-2 copy.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4523,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1439190455.23,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "_posts/obj_ptrs_2_code/unique.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 630,
						"regions":
						{
						},
						"selection":
						[
							[
								506,
								506
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1438285857.83,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/Users/neilmoore67/Work/scala-cource/doodle-develop/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2350,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "Gemfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 92,
						"regions":
						{
						},
						"selection":
						[
							[
								92,
								92
							]
						],
						"settings":
						{
							"function_name_status_row": 4,
							"sorttabs_lastactivated": 1477948766.13,
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "_site/personal/2015/03/16/wedding-honeymoon.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16095,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 614,
						"regions":
						{
						},
						"selection":
						[
							[
								310,
								310
							]
						],
						"settings":
						{
							"function_name_status_row": 14,
							"sorttabs_lastactivated": 1447010351.85,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "feed.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1410,
						"regions":
						{
						},
						"selection":
						[
							[
								665,
								665
							]
						],
						"settings":
						{
							"function_name_status_row": 14,
							"sorttabs_lastactivated": 1477948701.18,
							"syntax": "Packages/XML/XML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "_posts/2015-10-04-moving-to-industry.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23012,
						"regions":
						{
						},
						"selection":
						[
							[
								16169,
								16169
							]
						],
						"settings":
						{
							"function_name_status_row": 182,
							"sorttabs_lastactivated": 1477082932.4,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "_drafts/2015-11-13-efficiency.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26725,
						"regions":
						{
						},
						"selection":
						[
							[
								24882,
								24882
							]
						],
						"settings":
						{
							"function_name_status_row": 324,
							"sorttabs_lastactivated": 1448914169.35,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "_drafts/2016-02-06-memoization.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10802,
						"regions":
						{
						},
						"selection":
						[
							[
								10802,
								10802
							]
						],
						"settings":
						{
							"function_name_status_row": 173,
							"sorttabs_lastactivated": 1454778211.28,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3330.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "_drafts/memoization_code/a.out",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 87930,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								1
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"sorttabs_lastactivated": 1453669420.27,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "_drafts/memoization_code/basic.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1744,
						"regions":
						{
						},
						"selection":
						[
							[
								241,
								249
							]
						],
						"settings":
						{
							"function_name_status_row": 13,
							"sorttabs_lastactivated": 1454772927.35,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "_posts/2015-11-13-efficiency.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26596,
						"regions":
						{
						},
						"selection":
						[
							[
								10619,
								10638
							]
						],
						"settings":
						{
							"function_name_status_row": 172,
							"sorttabs_lastactivated": 1477948376.59,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7539.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "_posts/2015-12-29-language-tool.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2256,
						"regions":
						{
						},
						"selection":
						[
							[
								2256,
								2256
							]
						],
						"settings":
						{
							"function_name_status_row": 47,
							"sorttabs_lastactivated": 1477082931.69,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "_posts/2015-12-31-year.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 309,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"function_name_status_row": 8,
							"sorttabs_lastactivated": 1477948377.17,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "_posts/2016-02-05-st-andrews-stories.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2689,
						"regions":
						{
						},
						"selection":
						[
							[
								35,
								35
							]
						],
						"settings":
						{
							"function_name_status_row": 2,
							"sorttabs_lastactivated": 1477948610.39,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "_posts/2016-02-06-memoization.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10802,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"sorttabs_lastactivated": 1477948618.05,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3566.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "_posts/2016-07-14-quiz-answers.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 714,
						"regions":
						{
						},
						"selection":
						[
							[
								554,
								554
							]
						],
						"settings":
						{
							"function_name_status_row": 53,
							"sorttabs_lastactivated": 1477081814.46,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 669.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "_posts/2016-10-21-months-without-news.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4455,
						"regions":
						{
						},
						"selection":
						[
							[
								4111,
								4111
							]
						],
						"settings":
						{
							"function_name_status_row": 40,
							"open_with_edit": true,
							"sorttabs_lastactivated": 1477948600.29,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "_posts/2016-07-03-quiz-answers.markdown",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 714,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"sorttabs_lastactivated": 1477948375.03,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "_posts/2016-10-31-wordsearch.markdown",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3276,
						"regions":
						{
						},
						"selection":
						[
							[
								2789,
								2789
							]
						],
						"settings":
						{
							"function_name_status_row": 68,
							"sorttabs_lastactivated": 1477950332.91,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1206.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "about.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 392,
						"regions":
						{
						},
						"selection":
						[
							[
								391,
								391
							]
						],
						"settings":
						{
							"function_name_status_row": 16,
							"sorttabs_lastactivated": 1454751902.62,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 9.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 46,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8996,
						"regions":
						{
						},
						"selection":
						[
							[
								402,
								405
							]
						],
						"settings":
						{
							"default_dir": "/Users/neilmoore67/Work/personal-homepage",
							"function_name_status_row": 8,
							"sorttabs_lastactivated": 1447009814.38,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "_layouts/default.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 248,
						"regions":
						{
						},
						"selection":
						[
							[
								144,
								144
							]
						],
						"settings":
						{
							"function_name_status_row": 10,
							"sorttabs_lastactivated": 1481228216.6,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "_includes/analytics.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 408,
						"regions":
						{
						},
						"selection":
						[
							[
								398,
								398
							]
						],
						"settings":
						{
							"auto_name": "<script>",
							"function_name_status_row": 8,
							"sorttabs_lastactivated": 1453669333.56,
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "_layouts/post.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1220,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "_includes/head.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1160,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"function_name_status_row": 12,
							"sorttabs_lastactivated": 1447010418.53,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "_includes/footer.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3100,
						"regions":
						{
						},
						"selection":
						[
							[
								3063,
								3063
							]
						],
						"settings":
						{
							"function_name_status_row": 49,
							"sorttabs_lastactivated": 1454773823.13,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 41.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "_sass/_layout.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4374,
						"regions":
						{
						},
						"selection":
						[
							[
								193,
								193
							]
						],
						"settings":
						{
							"function_name_status_row": 7,
							"sorttabs_lastactivated": 1447010356.24,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "untitled.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 73,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"sorttabs_lastactivated": 1444501607.28,
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "_sass/_syntax-highlighting.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3946,
						"regions":
						{
						},
						"selection":
						[
							[
								3944,
								3944
							]
						],
						"settings":
						{
							"function_name_status_row": 68,
							"sorttabs_lastactivated": 1444501839.88,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "CNAME",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								15
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/filesync":
	{
		"height": 240.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/filesync/benchmark":
	{
		"height": 244.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/filesync/example":
	{
		"height": 336.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/filesync/runners":
	{
		"height": 100.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/filesync/test":
	{
		"height": 229.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/hello":
	{
		"height": 216.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/newmath":
	{
		"height": 195.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot":
	{
		"height": 300.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/http":
	{
		"height": 402.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/scoot/test":
	{
		"height": 297.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/sync":
	{
		"height": 222.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/bigoh.co.uk/user/hello":
	{
		"height": 124.0
	},
	"output.9o:///Users/neilmoore67/Work/go/src/code.google.com/p/go.example/hello":
	{
		"height": 100.0
	},
	"output.GoSublime-main-output":
	{
		"height": 100.0
	},
	"output.MarGo-output":
	{
		"height": 100.0
	},
	"output.exec":
	{
		"height": 240.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 317.0
	},
	"pinned_build_system": "",
	"project": "untitled.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"memo",
				"_drafts/2015-11-29-memoization.markdown"
			],
			[
				"eff",
				"_drafts/2015-11-13-efficiency.markdown"
			],
			[
				"ma",
				"Markdown Cheatsheet"
			],
			[
				"movin",
				"_posts/2015-10-04-moving-to-industry.markdown"
			],
			[
				"moving",
				"~/Work/personal-homepage/_drafts/2015-10-04-moving-to-industry.markdown"
			],
			[
				"con",
				"_config.yml"
			],
			[
				"gemfi",
				"Gemfile"
			],
			[
				"",
				"_drafts/2015-10-04-moving-to-industry.markdown"
			],
			[
				"poi",
				"_site/c++/2014/11/30/objects-and-pointers.html"
			],
			[
				"third",
				"_posts/obj_ptrs_1_code/third.cpp"
			],
			[
				"non",
				"non-virtual-objects.hpp"
			],
			[
				"honey",
				"_posts/2015-03-16-wedding-honeymoon.markdown"
			],
			[
				"hone",
				"_site/personal/2015/03/16/wedding-honeymoon.html"
			],
			[
				"thumbnal",
				"_plugins/thumbnail.rb"
			],
			[
				"app",
				"src/bigoh.co.uk/scoot/http/static/js/app.js"
			],
			[
				"game",
				"src/bigoh.co.uk/scoot/http/static/js/views/gamestateview.js"
			],
			[
				"gmae",
				"src/bigoh.co.uk/scoot/http/static/js/models/gamestate.js"
			],
			[
				"gamestate",
				"src/bigoh.co.uk/scoot/http/static/js/views/gamestateview.js"
			],
			[
				"css",
				"src/bigoh.co.uk/scoot/http/static/css/style.css"
			],
			[
				"handlebars",
				"src/bigoh.co.uk/scoot/http/static/templates/gameview.handlebars"
			],
			[
				"hane",
				"src/bigoh.co.uk/scoot/http/static/js/lib/handlebars-v1.3.0.js"
			],
			[
				"http",
				"src/bigoh.co.uk/scoot/http/scoot-http.go"
			],
			[
				"squ",
				"src/bigoh.co.uk/scoot/squares.go"
			],
			[
				"handle",
				"src/bigoh.co.uk/scoot/http/static/templates/gameview.handlebars"
			],
			[
				"square",
				"src/bigoh.co.uk/scoot/squares.go"
			],
			[
				"gamest",
				"src/bigoh.co.uk/scoot/http/static/js/models/gamestate.js"
			],
			[
				"scoo",
				"src/bigoh.co.uk/scoot/http/scoot-http.go"
			],
			[
				"app.js",
				"src/bigoh.co.uk/scoot/http/static/js/app.js"
			],
			[
				"make",
				"src/bigoh.co.uk/scoot/Makefile"
			],
			[
				"gmaestate",
				"src/bigoh.co.uk/scoot/http/static/js/models/gamestate.js"
			],
			[
				"die",
				"~/Work/rust/dice/dice.rs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 127.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"register",
				"registerHelper"
			],
			[
				"Game",
				"Game"
			],
			[
				"Score",
				"Score"
			],
			[
				"move",
				"Moves"
			],
			[
				"Coord",
				"Coord"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 379.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
